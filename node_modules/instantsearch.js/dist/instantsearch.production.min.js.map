{"version":3,"file":"instantsearch.production.min.js","sources":["../../../node_modules/algoliasearch-helper/src/functions/merge.js","../../../node_modules/algoliasearch-helper/src/functions/defaultsPure.js","../../../node_modules/algoliasearch-helper/src/functions/intersection.js","../../../node_modules/algoliasearch-helper/src/functions/find.js","../../../node_modules/algoliasearch-helper/src/functions/valToNumber.js","../../../node_modules/algoliasearch-helper/src/functions/omit.js","../../../node_modules/algoliasearch-helper/src/functions/objectHasKeys.js","../../../node_modules/algoliasearch-helper/src/SearchParameters/RefinementList.js","../../../node_modules/algoliasearch-helper/src/SearchParameters/index.js","../../../node_modules/algoliasearch-helper/src/utils/isValidUserToken.js","../../../node_modules/algoliasearch-helper/src/functions/compact.js","../../../node_modules/algoliasearch-helper/src/functions/findIndex.js","../../../node_modules/algoliasearch-helper/src/functions/formatSort.js","../../../node_modules/algoliasearch-helper/src/functions/orderBy.js","../../../node_modules/algoliasearch-helper/src/functions/escapeFacetValue.js","../../../node_modules/algoliasearch-helper/src/SearchResults/generate-hierarchical-tree.js","../../../node_modules/algoliasearch-helper/src/SearchResults/index.js","../../../node_modules/@algolia/events/events.js","../../../node_modules/algoliasearch-helper/src/functions/inherits.js","../../../node_modules/algoliasearch-helper/src/DerivedHelper/index.js","../../../node_modules/algoliasearch-helper/src/requestBuilder.js","../../../node_modules/algoliasearch-helper/src/version.js","../../../node_modules/algoliasearch-helper/src/algoliasearch.helper.js","../../../node_modules/algoliasearch-helper/index.js","../src/lib/utils/noop.ts","../src/lib/utils/logger.ts","../src/lib/utils/checkRendering.ts","../src/lib/utils/getObjectType.ts","../src/lib/utils/clearRefinements.ts","../src/lib/utils/escape-html.ts","../src/lib/utils/isPlainObject.ts","../src/lib/utils/escape-highlight.ts","../src/lib/utils/concatHighlightedParts.ts","../src/lib/utils/createSendEventForFacet.ts","../src/lib/utils/isFacetRefined.ts","../src/lib/utils/serializer.ts","../src/lib/utils/createSendEventForHits.ts","../src/lib/utils/isIndexWidget.ts","../src/lib/utils/setIndexHelperState.ts","../src/lib/utils/debounce.ts","../src/lib/utils/defer.ts","../src/lib/utils/documentation.ts","../src/lib/utils/escapeFacetValue.ts","../src/lib/utils/find.ts","../src/lib/utils/geo-search.ts","../src/lib/utils/getContainerNode.ts","../src/lib/utils/isDomElement.ts","../src/lib/utils/getHighlightedParts.ts","../src/lib/utils/getHighlightFromSiblings.ts","../src/lib/utils/getPropertyByPath.ts","../src/lib/utils/getRefinements.ts","../src/lib/utils/getWidgetAttribute.ts","../src/lib/utils/hits-absolute-position.ts","../src/lib/utils/hits-query-id.ts","../src/lib/utils/isEqual.ts","../src/lib/utils/isFiniteNumber.ts","../src/lib/utils/isSpecialClick.ts","../src/lib/utils/uniq.ts","../src/lib/utils/mergeSearchParameters.ts","../src/lib/utils/findIndex.ts","../src/lib/utils/range.ts","../src/lib/utils/render-args.ts","../src/lib/utils/reverseHighlightedParts.ts","../src/lib/utils/safelyRunOnBrowser.ts","../src/lib/utils/toArray.ts","../src/widgets/index/index.ts","../src/lib/utils/resolveSearchParameters.ts","../src/lib/suit.ts","../src/helpers/highlight.ts","../src/helpers/reverseHighlight.ts","../src/helpers/snippet.ts","../src/helpers/reverseSnippet.ts","../src/helpers/insights.ts","../src/helpers/get-insights-anonymous-user-token.ts","../src/lib/formatNumber.ts","../src/lib/stateMappings/simple.ts","../node_modules/qs/lib/utils.js","../node_modules/qs/lib/stringify.js","../src/lib/routers/history.ts","../node_modules/qs/lib/formats.js","../node_modules/qs/lib/parse.js","../node_modules/qs/lib/index.js","../src/middlewares/createRouterMiddleware.ts","../src/middlewares/createMetadataMiddleware.ts","../src/lib/InstantSearch.ts","../src/connectors/clear-refinements/connectClearRefinements.ts","../src/lib/createHelpers.ts","../src/lib/version.ts","../src/connectors/current-refinements/connectCurrentRefinements.ts","../src/connectors/hierarchical-menu/connectHierarchicalMenu.ts","../src/connectors/hits/connectHits.ts","../src/lib/insights/client.ts","../../../node_modules/preact/dist/preact.module.js","../src/lib/insights/listener.tsx","../src/connectors/hits-per-page/connectHitsPerPage.ts","../src/connectors/hits/connectHitsWithInsights.ts","../src/connectors/infinite-hits/connectInfiniteHits.ts","../src/connectors/menu/connectMenu.ts","../src/connectors/numeric-menu/connectNumericMenu.ts","../src/connectors/infinite-hits/connectInfiniteHitsWithInsights.ts","../src/connectors/pagination/connectPagination.ts","../src/connectors/pagination/Paginator.ts","../src/connectors/range/connectRange.ts","../src/connectors/refinement-list/connectRefinementList.ts","../src/connectors/search-box/connectSearchBox.ts","../src/connectors/sort-by/connectSortBy.ts","../src/connectors/rating-menu/connectRatingMenu.ts","../src/connectors/stats/connectStats.ts","../src/connectors/toggle-refinement/connectToggleRefinement.ts","../src/connectors/breadcrumb/connectBreadcrumb.ts","../src/connectors/geo-search/connectGeoSearch.ts","../src/connectors/powered-by/connectPoweredBy.ts","../src/connectors/configure/connectConfigure.ts","../src/connectors/configure-related-items/connectConfigureRelatedItems.ts","../src/connectors/autocomplete/connectAutocomplete.ts","../src/connectors/query-rules/connectQueryRules.ts","../src/lib/voiceSearchHelper/index.ts","../src/connectors/voice-search/connectVoiceSearch.ts","../src/connectors/answers/connectAnswers.ts","../src/lib/utils/createConcurrentSafePromise.ts","../src/connectors/relevant-sort/connectRelevantSort.ts","../src/connectors/dynamic-widgets/connectDynamicWidgets.ts","../src/connectors/index.ts","../src/widgets/analytics/analytics.ts","../../../node_modules/@algolia/ui-components-shared/dist/esm/cx.js","../src/lib/templating/prepareTemplateProps.ts","../../../node_modules/hogan.js/lib/compiler.js","../../../node_modules/hogan.js/lib/template.js","../../../node_modules/hogan.js/lib/hogan.js","../../../node_modules/htm/dist/htm.module.js","../../../node_modules/htm/preact/index.module.js","../../../node_modules/@babel/runtime/helpers/extends.js","../../../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","../../../node_modules/@babel/runtime/helpers/objectWithoutProperties.js","../../../node_modules/@algolia/ui-components-highlight-vdom/dist/esm/Highlight.js","../src/components/InternalHighlight/InternalHighlight.tsx","../src/components/Highlight/Highlight.tsx","../src/helpers/components/Highlight.tsx","../src/components/ReverseHighlight/ReverseHighlight.tsx","../src/helpers/components/ReverseHighlight.tsx","../src/components/ReverseSnippet/ReverseSnippet.tsx","../src/helpers/components/ReverseSnippet.tsx","../src/components/Snippet/Snippet.tsx","../src/helpers/components/Snippet.tsx","../src/lib/templating/renderTemplate.ts","../src/widgets/current-refinements/current-refinements.tsx","../src/components/Template/Template.tsx","../src/components/Breadcrumb/Breadcrumb.tsx","../src/widgets/breadcrumb/defaultTemplates.ts","../src/widgets/breadcrumb/breadcrumb.tsx","../src/components/ClearRefinements/ClearRefinements.tsx","../src/widgets/clear-refinements/defaultTemplates.ts","../src/widgets/clear-refinements/clear-refinements.tsx","../src/components/CurrentRefinements/CurrentRefinements.tsx","../src/lib/utils/capitalize.ts","../src/widgets/answers/defaultTemplates.ts","../src/components/Answers/Answers.tsx","../src/widgets/answers/answers.tsx","../src/widgets/dynamic-widgets/dynamic-widgets.ts","../src/components/GeoSearchControls/GeoSearchButton.tsx","../src/components/GeoSearchControls/GeoSearchToggle.tsx","../src/widgets/geo-search/GeoSearchRenderer.js","../src/components/GeoSearchControls/GeoSearchControls.tsx","../src/widgets/geo-search/defaultTemplates.tsx","../src/widgets/geo-search/geo-search.ts","../src/components/RefinementList/RefinementListItem.tsx","../src/components/SearchBox/SearchBox.tsx","../src/components/RefinementList/RefinementList.tsx","../src/widgets/hierarchical-menu/defaultTemplates.tsx","../src/widgets/hierarchical-menu/hierarchical-menu.tsx","../src/widgets/hits/defaultTemplates.ts","../src/widgets/hits/hits.tsx","../src/components/Hits/Hits.tsx","../src/components/Selector/Selector.tsx","../src/widgets/hits-per-page/hits-per-page.tsx","../src/widgets/infinite-hits/defaultTemplates.ts","../src/widgets/infinite-hits/infinite-hits.tsx","../src/components/InfiniteHits/InfiniteHits.tsx","../src/widgets/menu/defaultTemplates.tsx","../src/widgets/menu/menu.tsx","../src/components/MenuSelect/MenuSelect.tsx","../src/widgets/menu-select/defaultTemplates.ts","../src/widgets/menu-select/menu-select.tsx","../src/widgets/numeric-menu/defaultTemplates.tsx","../src/widgets/numeric-menu/numeric-menu.tsx","../src/components/Pagination/Pagination.tsx","../src/widgets/pagination/pagination.tsx","../../../node_modules/preact/hooks/dist/hooks.module.js","../src/components/Panel/Panel.tsx","../src/widgets/panel/panel.tsx","../src/components/PoweredBy/PoweredBy.tsx","../src/widgets/powered-by/powered-by.tsx","../src/widgets/query-rule-context/query-rule-context.tsx","../src/components/QueryRuleCustomData/QueryRuleCustomData.tsx","../src/widgets/query-rule-custom-data/query-rule-custom-data.tsx","../src/components/RangeInput/RangeInput.tsx","../src/widgets/range-input/range-input.tsx","../src/components/Slider/Rheostat.tsx","../src/components/Slider/Pit.tsx","../src/components/Slider/Slider.tsx","../src/widgets/range-slider/range-slider.tsx","../src/widgets/rating-menu/defaultTemplates.tsx","../src/widgets/rating-menu/rating-menu.tsx","../src/widgets/search-box/defaultTemplates.tsx","../src/widgets/refinement-list/defaultTemplates.tsx","../src/widgets/refinement-list/refinement-list.tsx","../src/components/RelevantSort/RelevantSort.tsx","../src/widgets/relevant-sort/defaultTemplates.ts","../src/widgets/relevant-sort/relevant-sort.tsx","../src/widgets/search-box/search-box.tsx","../src/widgets/sort-by/sort-by.tsx","../src/components/Stats/Stats.tsx","../src/widgets/stats/stats.tsx","../src/widgets/voice-search/defaultTemplates.tsx","../src/components/ToggleRefinement/ToggleRefinement.tsx","../src/widgets/toggle-refinement/defaultTemplates.ts","../src/widgets/toggle-refinement/toggle-refinement.tsx","../src/components/VoiceSearch/VoiceSearch.tsx","../src/widgets/voice-search/voice-search.tsx","../src/widgets/index.ts","../src/widgets/configure/configure.ts","../src/widgets/configure-related-items/configure-related-items.ts","../src/widgets/geo-search/createHTMLMarker.ts","../src/widgets/places/places.ts","../src/middlewares/createInsightsMiddleware.ts","../src/lib/utils/getAppIdAndApiKey.ts","../src/lib/stateMappings/singleIndex.ts","../src/lib/infiniteHitsCache/sessionStorage.ts","../src/index.ts"],"sourcesContent":["'use strict';\n\nfunction clone(value) {\n  if (typeof value === 'object' && value !== null) {\n    return _merge(Array.isArray(value) ? [] : {}, value);\n  }\n  return value;\n}\n\nfunction isObjectOrArrayOrFunction(value) {\n  return (\n    typeof value === 'function' ||\n    Array.isArray(value) ||\n    Object.prototype.toString.call(value) === '[object Object]'\n  );\n}\n\nfunction _merge(target, source) {\n  if (target === source) {\n    return target;\n  }\n\n  for (var key in source) {\n    if (\n      !Object.prototype.hasOwnProperty.call(source, key) ||\n      key === '__proto__'\n    ) {\n      continue;\n    }\n\n    var sourceVal = source[key];\n    var targetVal = target[key];\n\n    if (typeof targetVal !== 'undefined' && typeof sourceVal === 'undefined') {\n      continue;\n    }\n\n    if (\n      isObjectOrArrayOrFunction(targetVal) &&\n      isObjectOrArrayOrFunction(sourceVal)\n    ) {\n      target[key] = _merge(targetVal, sourceVal);\n    } else {\n      target[key] = clone(sourceVal);\n    }\n  }\n  return target;\n}\n\n/**\n * This method is like Object.assign, but recursively merges own and inherited\n * enumerable keyed properties of source objects into the destination object.\n *\n * NOTE: this behaves like lodash/merge, but:\n * - does mutate functions if they are a source\n * - treats non-plain objects as plain\n * - does not work for circular objects\n * - treats sparse arrays as sparse\n * - does not convert Array-like objects (Arguments, NodeLists, etc.) to arrays\n *\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n */\n\nfunction merge(target) {\n  if (!isObjectOrArrayOrFunction(target)) {\n    target = {};\n  }\n\n  for (var i = 1, l = arguments.length; i < l; i++) {\n    var source = arguments[i];\n\n    if (isObjectOrArrayOrFunction(source)) {\n      _merge(target, source);\n    }\n  }\n  return target;\n}\n\nmodule.exports = merge;\n","'use strict';\n\n// NOTE: this behaves like lodash/defaults, but doesn't mutate the target\n// it also preserve keys order\nmodule.exports = function defaultsPure() {\n  var sources = Array.prototype.slice.call(arguments);\n\n  return sources.reduceRight(function(acc, source) {\n    Object.keys(Object(source)).forEach(function(key) {\n      if (source[key] === undefined) {\n        return;\n      }\n      if (acc[key] !== undefined) {\n        // remove if already added, so that we can add it in correct order\n        delete acc[key];\n      }\n      acc[key] = source[key];\n    });\n    return acc;\n  }, {});\n};\n","'use strict';\n\nfunction intersection(arr1, arr2) {\n  return arr1.filter(function(value, index) {\n    return (\n      arr2.indexOf(value) > -1 &&\n      arr1.indexOf(value) === index /* skips duplicates */\n    );\n  });\n}\n\nmodule.exports = intersection;\n","'use strict';\n\n// @MAJOR can be replaced by native Array#find when we change support\nmodule.exports = function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return undefined;\n  }\n\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return array[i];\n    }\n  }\n};\n","'use strict';\n\nfunction valToNumber(v) {\n  if (typeof v === 'number') {\n    return v;\n  } else if (typeof v === 'string') {\n    return parseFloat(v);\n  } else if (Array.isArray(v)) {\n    return v.map(valToNumber);\n  }\n\n  throw new Error('The value should be a number, a parsable string or an array of those.');\n}\n\nmodule.exports = valToNumber;\n","'use strict';\n\n// https://github.com/babel/babel/blob/3aaafae053fa75febb3aa45d45b6f00646e30ba4/packages/babel-helpers/src/helpers.js#L604-L620\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source === null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key;\n  var i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;\n","'use strict';\n\nfunction objectHasKeys(obj) {\n  return obj && Object.keys(obj).length > 0;\n}\n\nmodule.exports = objectHasKeys;\n","'use strict';\n\n/**\n * Functions to manipulate refinement lists\n *\n * The RefinementList is not formally defined through a prototype but is based\n * on a specific structure.\n *\n * @module SearchParameters.refinementList\n *\n * @typedef {string[]} SearchParameters.refinementList.Refinements\n * @typedef {Object.<string, SearchParameters.refinementList.Refinements>} SearchParameters.refinementList.RefinementList\n */\n\nvar defaultsPure = require('../functions/defaultsPure');\nvar omit = require('../functions/omit');\nvar objectHasKeys = require('../functions/objectHasKeys');\n\nvar lib = {\n  /**\n   * Adds a refinement to a RefinementList\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} value the value of the refinement, if the value is not a string it will be converted\n   * @return {RefinementList} a new and updated refinement list\n   */\n  addRefinement: function addRefinement(refinementList, attribute, value) {\n    if (lib.isRefined(refinementList, attribute, value)) {\n      return refinementList;\n    }\n\n    var valueAsString = '' + value;\n\n    var facetRefinement = !refinementList[attribute] ?\n      [valueAsString] :\n      refinementList[attribute].concat(valueAsString);\n\n    var mod = {};\n\n    mod[attribute] = facetRefinement;\n\n    return defaultsPure({}, mod, refinementList);\n  },\n  /**\n   * Removes refinement(s) for an attribute:\n   *  - if the value is specified removes the refinement for the value on the attribute\n   *  - if no value is specified removes all the refinements for this attribute\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} [value] the value of the refinement\n   * @return {RefinementList} a new and updated refinement lst\n   */\n  removeRefinement: function removeRefinement(refinementList, attribute, value) {\n    if (value === undefined) {\n      // we use the \"filter\" form of clearRefinement, since it leaves empty values as-is\n      // the form with a string will remove the attribute completely\n      return lib.clearRefinement(refinementList, function(v, f) {\n        return attribute === f;\n      });\n    }\n\n    var valueAsString = '' + value;\n\n    return lib.clearRefinement(refinementList, function(v, f) {\n      return attribute === f && valueAsString === v;\n    });\n  },\n  /**\n   * Toggles the refinement value for an attribute.\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} value the value of the refinement\n   * @return {RefinementList} a new and updated list\n   */\n  toggleRefinement: function toggleRefinement(refinementList, attribute, value) {\n    if (value === undefined) throw new Error('toggleRefinement should be used with a value');\n\n    if (lib.isRefined(refinementList, attribute, value)) {\n      return lib.removeRefinement(refinementList, attribute, value);\n    }\n\n    return lib.addRefinement(refinementList, attribute, value);\n  },\n  /**\n   * Clear all or parts of a RefinementList. Depending on the arguments, three\n   * kinds of behavior can happen:\n   *  - if no attribute is provided: clears the whole list\n   *  - if an attribute is provided as a string: clears the list for the specific attribute\n   *  - if an attribute is provided as a function: discards the elements for which the function returns true\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} [attribute] the attribute or function to discard\n   * @param {string} [refinementType] optional parameter to give more context to the attribute function\n   * @return {RefinementList} a new and updated refinement list\n   */\n  clearRefinement: function clearRefinement(refinementList, attribute, refinementType) {\n    if (attribute === undefined) {\n      if (!objectHasKeys(refinementList)) {\n        return refinementList;\n      }\n      return {};\n    } else if (typeof attribute === 'string') {\n      return omit(refinementList, [attribute]);\n    } else if (typeof attribute === 'function') {\n      var hasChanged = false;\n\n      var newRefinementList = Object.keys(refinementList).reduce(function(memo, key) {\n        var values = refinementList[key] || [];\n        var facetList = values.filter(function(value) {\n          return !attribute(value, key, refinementType);\n        });\n\n        if (facetList.length !== values.length) {\n          hasChanged = true;\n        }\n        memo[key] = facetList;\n\n        return memo;\n      }, {});\n\n      if (hasChanged) return newRefinementList;\n      return refinementList;\n    }\n  },\n  /**\n   * Test if the refinement value is used for the attribute. If no refinement value\n   * is provided, test if the refinementList contains any refinement for the\n   * given attribute.\n   * @param {RefinementList} refinementList the list of refinement\n   * @param {string} attribute name of the attribute\n   * @param {string} [refinementValue] value of the filter/refinement\n   * @return {boolean}\n   */\n  isRefined: function isRefined(refinementList, attribute, refinementValue) {\n    var containsRefinements = !!refinementList[attribute] &&\n      refinementList[attribute].length > 0;\n\n    if (refinementValue === undefined || !containsRefinements) {\n      return containsRefinements;\n    }\n\n    var refinementValueAsString = '' + refinementValue;\n\n    return refinementList[attribute].indexOf(refinementValueAsString) !== -1;\n  }\n};\n\nmodule.exports = lib;\n","'use strict';\n\nvar merge = require('../functions/merge');\nvar defaultsPure = require('../functions/defaultsPure');\nvar intersection = require('../functions/intersection');\nvar find = require('../functions/find');\nvar valToNumber = require('../functions/valToNumber');\nvar omit = require('../functions/omit');\nvar objectHasKeys = require('../functions/objectHasKeys');\nvar isValidUserToken = require('../utils/isValidUserToken');\n\nvar RefinementList = require('./RefinementList');\n\n/**\n * isEqual, but only for numeric refinement values, possible values:\n * - 5\n * - [5]\n * - [[5]]\n * - [[5,5],[4]]\n */\nfunction isEqualNumericRefinement(a, b) {\n  if (Array.isArray(a) && Array.isArray(b)) {\n    return (\n      a.length === b.length &&\n      a.every(function(el, i) {\n        return isEqualNumericRefinement(b[i], el);\n      })\n    );\n  }\n  return a === b;\n}\n\n/**\n * like _.find but using deep equality to be able to use it\n * to find arrays.\n * @private\n * @param {any[]} array array to search into (elements are base or array of base)\n * @param {any} searchedValue the value we're looking for (base or array of base)\n * @return {any} the searched value or undefined\n */\nfunction findArray(array, searchedValue) {\n  return find(array, function(currentValue) {\n    return isEqualNumericRefinement(currentValue, searchedValue);\n  });\n}\n\n/**\n * The facet list is the structure used to store the list of values used to\n * filter a single attribute.\n * @typedef {string[]} SearchParameters.FacetList\n */\n\n/**\n * Structure to store numeric filters with the operator as the key. The supported operators\n * are `=`, `>`, `<`, `>=`, `<=` and `!=`.\n * @typedef {Object.<string, Array.<number|number[]>>} SearchParameters.OperatorList\n */\n\n/**\n * SearchParameters is the data structure that contains all the information\n * usable for making a search to Algolia API. It doesn't do the search itself,\n * nor does it contains logic about the parameters.\n * It is an immutable object, therefore it has been created in a way that each\n * changes does not change the object itself but returns a copy with the\n * modification.\n * This object should probably not be instantiated outside of the helper. It will\n * be provided when needed. This object is documented for reference as you'll\n * get it from events generated by the {@link AlgoliaSearchHelper}.\n * If need be, instantiate the Helper from the factory function {@link SearchParameters.make}\n * @constructor\n * @classdesc contains all the parameters of a search\n * @param {object|SearchParameters} newParameters existing parameters or partial object\n * for the properties of a new SearchParameters\n * @see SearchParameters.make\n * @example <caption>SearchParameters of the first query in\n *   <a href=\"http://demos.algolia.com/instant-search-demo/\">the instant search demo</a></caption>\n{\n   \"query\": \"\",\n   \"disjunctiveFacets\": [\n      \"customerReviewCount\",\n      \"category\",\n      \"salePrice_range\",\n      \"manufacturer\"\n  ],\n   \"maxValuesPerFacet\": 30,\n   \"page\": 0,\n   \"hitsPerPage\": 10,\n   \"facets\": [\n      \"type\",\n      \"shipping\"\n  ]\n}\n */\nfunction SearchParameters(newParameters) {\n  var params = newParameters ? SearchParameters._parseNumbers(newParameters) : {};\n\n  if (params.userToken !== undefined && !isValidUserToken(params.userToken)) {\n    console.warn('[algoliasearch-helper] The `userToken` parameter is invalid. This can lead to wrong analytics.\\n  - Format: [a-zA-Z0-9_-]{1,64}');\n  }\n  /**\n   * This attribute contains the list of all the conjunctive facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * @member {string[]}\n   */\n  this.facets = params.facets || [];\n  /**\n   * This attribute contains the list of all the disjunctive facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * @member {string[]}\n   */\n  this.disjunctiveFacets = params.disjunctiveFacets || [];\n  /**\n   * This attribute contains the list of all the hierarchical facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * Hierarchical facets are a sub type of disjunctive facets that\n   * let you filter faceted attributes hierarchically.\n   * @member {string[]|object[]}\n   */\n  this.hierarchicalFacets = params.hierarchicalFacets || [];\n\n  // Refinements\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the conjunctive facets. Each facet must be properly\n   * defined in the `facets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n  this.facetsRefinements = params.facetsRefinements || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * excluded from the conjunctive facets. Each facet must be properly\n   * defined in the `facets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters excluded for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n  this.facetsExcludes = params.facetsExcludes || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the disjunctive facets. Each facet must be properly\n   * defined in the `disjunctiveFacets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n  this.disjunctiveFacetsRefinements = params.disjunctiveFacetsRefinements || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the numeric attributes.\n   *\n   * The key is the name of the attribute, and the value is the\n   * filters to apply to this attribute.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `numericFilters` attribute.\n   * @member {Object.<string, SearchParameters.OperatorList>}\n   */\n  this.numericRefinements = params.numericRefinements || {};\n  /**\n   * This attribute contains all the tags used to refine the query.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `tagFilters` attribute.\n   * @member {string[]}\n   */\n  this.tagRefinements = params.tagRefinements || [];\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the hierarchical facets. Each facet must be properly\n   * defined in the `hierarchicalFacets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name. The FacetList values\n   * are structured as a string that contain the values for each level\n   * separated by the configured separator.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n  this.hierarchicalFacetsRefinements = params.hierarchicalFacetsRefinements || {};\n\n  var self = this;\n  Object.keys(params).forEach(function(paramName) {\n    var isKeyKnown = SearchParameters.PARAMETERS.indexOf(paramName) !== -1;\n    var isValueDefined = params[paramName] !== undefined;\n\n    if (!isKeyKnown && isValueDefined) {\n      self[paramName] = params[paramName];\n    }\n  });\n}\n\n/**\n * List all the properties in SearchParameters and therefore all the known Algolia properties\n * This doesn't contain any beta/hidden features.\n * @private\n */\nSearchParameters.PARAMETERS = Object.keys(new SearchParameters());\n\n/**\n * @private\n * @param {object} partialState full or part of a state\n * @return {object} a new object with the number keys as number\n */\nSearchParameters._parseNumbers = function(partialState) {\n  // Do not reparse numbers in SearchParameters, they ought to be parsed already\n  if (partialState instanceof SearchParameters) return partialState;\n\n  var numbers = {};\n\n  var numberKeys = [\n    'aroundPrecision',\n    'aroundRadius',\n    'getRankingInfo',\n    'minWordSizefor2Typos',\n    'minWordSizefor1Typo',\n    'page',\n    'maxValuesPerFacet',\n    'distinct',\n    'minimumAroundRadius',\n    'hitsPerPage',\n    'minProximity'\n  ];\n\n  numberKeys.forEach(function(k) {\n    var value = partialState[k];\n    if (typeof value === 'string') {\n      var parsedValue = parseFloat(value);\n      // global isNaN is ok to use here, value is only number or NaN\n      numbers[k] = isNaN(parsedValue) ? value : parsedValue;\n    }\n  });\n\n  // there's two formats of insideBoundingBox, we need to parse\n  // the one which is an array of float geo rectangles\n  if (Array.isArray(partialState.insideBoundingBox)) {\n    numbers.insideBoundingBox = partialState.insideBoundingBox.map(function(geoRect) {\n      if (Array.isArray(geoRect)) {\n        return geoRect.map(function(value) {\n          return parseFloat(value);\n        });\n      }\n      return geoRect;\n    });\n  }\n\n  if (partialState.numericRefinements) {\n    var numericRefinements = {};\n    Object.keys(partialState.numericRefinements).forEach(function(attribute) {\n      var operators = partialState.numericRefinements[attribute] || {};\n      numericRefinements[attribute] = {};\n      Object.keys(operators).forEach(function(operator) {\n        var values = operators[operator];\n        var parsedValues = values.map(function(v) {\n          if (Array.isArray(v)) {\n            return v.map(function(vPrime) {\n              if (typeof vPrime === 'string') {\n                return parseFloat(vPrime);\n              }\n              return vPrime;\n            });\n          } else if (typeof v === 'string') {\n            return parseFloat(v);\n          }\n          return v;\n        });\n        numericRefinements[attribute][operator] = parsedValues;\n      });\n    });\n    numbers.numericRefinements = numericRefinements;\n  }\n\n  return merge({}, partialState, numbers);\n};\n\n/**\n * Factory for SearchParameters\n * @param {object|SearchParameters} newParameters existing parameters or partial\n * object for the properties of a new SearchParameters\n * @return {SearchParameters} frozen instance of SearchParameters\n */\nSearchParameters.make = function makeSearchParameters(newParameters) {\n  var instance = new SearchParameters(newParameters);\n\n  var hierarchicalFacets = newParameters.hierarchicalFacets || [];\n  hierarchicalFacets.forEach(function(facet) {\n    if (facet.rootPath) {\n      var currentRefinement = instance.getHierarchicalRefinement(facet.name);\n\n      if (currentRefinement.length > 0 && currentRefinement[0].indexOf(facet.rootPath) !== 0) {\n        instance = instance.clearRefinements(facet.name);\n      }\n\n      // get it again in case it has been cleared\n      currentRefinement = instance.getHierarchicalRefinement(facet.name);\n      if (currentRefinement.length === 0) {\n        instance = instance.toggleHierarchicalFacetRefinement(facet.name, facet.rootPath);\n      }\n    }\n  });\n\n  return instance;\n};\n\n/**\n * Validates the new parameters based on the previous state\n * @param {SearchParameters} currentState the current state\n * @param {object|SearchParameters} parameters the new parameters to set\n * @return {Error|null} Error if the modification is invalid, null otherwise\n */\nSearchParameters.validate = function(currentState, parameters) {\n  var params = parameters || {};\n\n  if (currentState.tagFilters && params.tagRefinements && params.tagRefinements.length > 0) {\n    return new Error(\n      '[Tags] Cannot switch from the managed tag API to the advanced API. It is probably ' +\n      'an error, if it is really what you want, you should first clear the tags with clearTags method.');\n  }\n\n  if (currentState.tagRefinements.length > 0 && params.tagFilters) {\n    return new Error(\n      '[Tags] Cannot switch from the advanced tag API to the managed API. It is probably ' +\n      'an error, if it is not, you should first clear the tags with clearTags method.');\n  }\n\n  if (\n    currentState.numericFilters &&\n    params.numericRefinements &&\n    objectHasKeys(params.numericRefinements)\n  ) {\n    return new Error(\n      \"[Numeric filters] Can't switch from the advanced to the managed API. It\" +\n        ' is probably an error, if this is really what you want, you have to first' +\n        ' clear the numeric filters.'\n    );\n  }\n\n  if (objectHasKeys(currentState.numericRefinements) && params.numericFilters) {\n    return new Error(\n      \"[Numeric filters] Can't switch from the managed API to the advanced. It\" +\n      ' is probably an error, if this is really what you want, you have to first' +\n      ' clear the numeric filters.');\n  }\n\n  return null;\n};\n\nSearchParameters.prototype = {\n  constructor: SearchParameters,\n\n  /**\n   * Remove all refinements (disjunctive + conjunctive + excludes + numeric filters)\n   * @method\n   * @param {undefined|string|SearchParameters.clearCallback} [attribute] optional string or function\n   * - If not given, means to clear all the filters.\n   * - If `string`, means to clear all refinements for the `attribute` named filter.\n   * - If `function`, means to clear all the refinements that return truthy values.\n   * @return {SearchParameters}\n   */\n  clearRefinements: function clearRefinements(attribute) {\n    var patch = {\n      numericRefinements: this._clearNumericRefinements(attribute),\n      facetsRefinements: RefinementList.clearRefinement(\n        this.facetsRefinements,\n        attribute,\n        'conjunctiveFacet'\n      ),\n      facetsExcludes: RefinementList.clearRefinement(\n        this.facetsExcludes,\n        attribute,\n        'exclude'\n      ),\n      disjunctiveFacetsRefinements: RefinementList.clearRefinement(\n        this.disjunctiveFacetsRefinements,\n        attribute,\n        'disjunctiveFacet'\n      ),\n      hierarchicalFacetsRefinements: RefinementList.clearRefinement(\n        this.hierarchicalFacetsRefinements,\n        attribute,\n        'hierarchicalFacet'\n      )\n    };\n    if (\n      patch.numericRefinements === this.numericRefinements &&\n      patch.facetsRefinements === this.facetsRefinements &&\n      patch.facetsExcludes === this.facetsExcludes &&\n      patch.disjunctiveFacetsRefinements === this.disjunctiveFacetsRefinements &&\n      patch.hierarchicalFacetsRefinements === this.hierarchicalFacetsRefinements\n    ) {\n      return this;\n    }\n    return this.setQueryParameters(patch);\n  },\n  /**\n   * Remove all the refined tags from the SearchParameters\n   * @method\n   * @return {SearchParameters}\n   */\n  clearTags: function clearTags() {\n    if (this.tagFilters === undefined && this.tagRefinements.length === 0) return this;\n\n    return this.setQueryParameters({\n      tagFilters: undefined,\n      tagRefinements: []\n    });\n  },\n  /**\n   * Set the index.\n   * @method\n   * @param {string} index the index name\n   * @return {SearchParameters}\n   */\n  setIndex: function setIndex(index) {\n    if (index === this.index) return this;\n\n    return this.setQueryParameters({\n      index: index\n    });\n  },\n  /**\n   * Query setter\n   * @method\n   * @param {string} newQuery value for the new query\n   * @return {SearchParameters}\n   */\n  setQuery: function setQuery(newQuery) {\n    if (newQuery === this.query) return this;\n\n    return this.setQueryParameters({\n      query: newQuery\n    });\n  },\n  /**\n   * Page setter\n   * @method\n   * @param {number} newPage new page number\n   * @return {SearchParameters}\n   */\n  setPage: function setPage(newPage) {\n    if (newPage === this.page) return this;\n\n    return this.setQueryParameters({\n      page: newPage\n    });\n  },\n  /**\n   * Facets setter\n   * The facets are the simple facets, used for conjunctive (and) faceting.\n   * @method\n   * @param {string[]} facets all the attributes of the algolia records used for conjunctive faceting\n   * @return {SearchParameters}\n   */\n  setFacets: function setFacets(facets) {\n    return this.setQueryParameters({\n      facets: facets\n    });\n  },\n  /**\n   * Disjunctive facets setter\n   * Change the list of disjunctive (or) facets the helper chan handle.\n   * @method\n   * @param {string[]} facets all the attributes of the algolia records used for disjunctive faceting\n   * @return {SearchParameters}\n   */\n  setDisjunctiveFacets: function setDisjunctiveFacets(facets) {\n    return this.setQueryParameters({\n      disjunctiveFacets: facets\n    });\n  },\n  /**\n   * HitsPerPage setter\n   * Hits per page represents the number of hits retrieved for this query\n   * @method\n   * @param {number} n number of hits retrieved per page of results\n   * @return {SearchParameters}\n   */\n  setHitsPerPage: function setHitsPerPage(n) {\n    if (this.hitsPerPage === n) return this;\n\n    return this.setQueryParameters({\n      hitsPerPage: n\n    });\n  },\n  /**\n   * typoTolerance setter\n   * Set the value of typoTolerance\n   * @method\n   * @param {string} typoTolerance new value of typoTolerance (\"true\", \"false\", \"min\" or \"strict\")\n   * @return {SearchParameters}\n   */\n  setTypoTolerance: function setTypoTolerance(typoTolerance) {\n    if (this.typoTolerance === typoTolerance) return this;\n\n    return this.setQueryParameters({\n      typoTolerance: typoTolerance\n    });\n  },\n  /**\n   * Add a numeric filter for a given attribute\n   * When value is an array, they are combined with OR\n   * When value is a single value, it will combined with AND\n   * @method\n   * @param {string} attribute attribute to set the filter on\n   * @param {string} operator operator of the filter (possible values: =, >, >=, <, <=, !=)\n   * @param {number | number[]} value value of the filter\n   * @return {SearchParameters}\n   * @example\n   * // for price = 50 or 40\n   * searchparameter.addNumericRefinement('price', '=', [50, 40]);\n   * @example\n   * // for size = 38 and 40\n   * searchparameter.addNumericRefinement('size', '=', 38);\n   * searchparameter.addNumericRefinement('size', '=', 40);\n   */\n  addNumericRefinement: function(attribute, operator, v) {\n    var value = valToNumber(v);\n\n    if (this.isNumericRefined(attribute, operator, value)) return this;\n\n    var mod = merge({}, this.numericRefinements);\n\n    mod[attribute] = merge({}, mod[attribute]);\n\n    if (mod[attribute][operator]) {\n      // Array copy\n      mod[attribute][operator] = mod[attribute][operator].slice();\n      // Add the element. Concat can't be used here because value can be an array.\n      mod[attribute][operator].push(value);\n    } else {\n      mod[attribute][operator] = [value];\n    }\n\n    return this.setQueryParameters({\n      numericRefinements: mod\n    });\n  },\n  /**\n   * Get the list of conjunctive refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getConjunctiveRefinements: function(facetName) {\n    if (!this.isConjunctiveFacet(facetName)) {\n      return [];\n    }\n    return this.facetsRefinements[facetName] || [];\n  },\n  /**\n   * Get the list of disjunctive refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getDisjunctiveRefinements: function(facetName) {\n    if (!this.isDisjunctiveFacet(facetName)) {\n      return [];\n    }\n    return this.disjunctiveFacetsRefinements[facetName] || [];\n  },\n  /**\n   * Get the list of hierarchical refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getHierarchicalRefinement: function(facetName) {\n    // we send an array but we currently do not support multiple\n    // hierarchicalRefinements for a hierarchicalFacet\n    return this.hierarchicalFacetsRefinements[facetName] || [];\n  },\n  /**\n   * Get the list of exclude refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getExcludeRefinements: function(facetName) {\n    if (!this.isConjunctiveFacet(facetName)) {\n      return [];\n    }\n    return this.facetsExcludes[facetName] || [];\n  },\n\n  /**\n   * Remove all the numeric filter for a given (attribute, operator)\n   * @method\n   * @param {string} attribute attribute to set the filter on\n   * @param {string} [operator] operator of the filter (possible values: =, >, >=, <, <=, !=)\n   * @param {number} [number] the value to be removed\n   * @return {SearchParameters}\n   */\n  removeNumericRefinement: function(attribute, operator, paramValue) {\n    if (paramValue !== undefined) {\n      if (!this.isNumericRefined(attribute, operator, paramValue)) {\n        return this;\n      }\n      return this.setQueryParameters({\n        numericRefinements: this._clearNumericRefinements(function(value, key) {\n          return (\n            key === attribute &&\n            value.op === operator &&\n            isEqualNumericRefinement(value.val, valToNumber(paramValue))\n          );\n        })\n      });\n    } else if (operator !== undefined) {\n      if (!this.isNumericRefined(attribute, operator)) return this;\n      return this.setQueryParameters({\n        numericRefinements: this._clearNumericRefinements(function(value, key) {\n          return key === attribute && value.op === operator;\n        })\n      });\n    }\n\n    if (!this.isNumericRefined(attribute)) return this;\n    return this.setQueryParameters({\n      numericRefinements: this._clearNumericRefinements(function(value, key) {\n        return key === attribute;\n      })\n    });\n  },\n  /**\n   * Get the list of numeric refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {SearchParameters.OperatorList} list of refinements\n   */\n  getNumericRefinements: function(facetName) {\n    return this.numericRefinements[facetName] || {};\n  },\n  /**\n   * Return the current refinement for the (attribute, operator)\n   * @param {string} attribute attribute in the record\n   * @param {string} operator operator applied on the refined values\n   * @return {Array.<number|number[]>} refined values\n   */\n  getNumericRefinement: function(attribute, operator) {\n    return this.numericRefinements[attribute] && this.numericRefinements[attribute][operator];\n  },\n  /**\n   * Clear numeric filters.\n   * @method\n   * @private\n   * @param {string|SearchParameters.clearCallback} [attribute] optional string or function\n   * - If not given, means to clear all the filters.\n   * - If `string`, means to clear all refinements for the `attribute` named filter.\n   * - If `function`, means to clear all the refinements that return truthy values.\n   * @return {Object.<string, OperatorList>}\n   */\n  _clearNumericRefinements: function _clearNumericRefinements(attribute) {\n    if (attribute === undefined) {\n      if (!objectHasKeys(this.numericRefinements)) {\n        return this.numericRefinements;\n      }\n      return {};\n    } else if (typeof attribute === 'string') {\n      return omit(this.numericRefinements, [attribute]);\n    } else if (typeof attribute === 'function') {\n      var hasChanged = false;\n      var numericRefinements = this.numericRefinements;\n      var newNumericRefinements = Object.keys(numericRefinements).reduce(function(memo, key) {\n        var operators = numericRefinements[key];\n        var operatorList = {};\n\n        operators = operators || {};\n        Object.keys(operators).forEach(function(operator) {\n          var values = operators[operator] || [];\n          var outValues = [];\n          values.forEach(function(value) {\n            var predicateResult = attribute({val: value, op: operator}, key, 'numeric');\n            if (!predicateResult) outValues.push(value);\n          });\n          if (outValues.length !== values.length) {\n            hasChanged = true;\n          }\n          operatorList[operator] = outValues;\n        });\n\n        memo[key] = operatorList;\n\n        return memo;\n      }, {});\n\n      if (hasChanged) return newNumericRefinements;\n      return this.numericRefinements;\n    }\n  },\n  /**\n   * Add a facet to the facets attribute of the helper configuration, if it\n   * isn't already present.\n   * @method\n   * @param {string} facet facet name to add\n   * @return {SearchParameters}\n   */\n  addFacet: function addFacet(facet) {\n    if (this.isConjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.setQueryParameters({\n      facets: this.facets.concat([facet])\n    });\n  },\n  /**\n   * Add a disjunctive facet to the disjunctiveFacets attribute of the helper\n   * configuration, if it isn't already present.\n   * @method\n   * @param {string} facet disjunctive facet name to add\n   * @return {SearchParameters}\n   */\n  addDisjunctiveFacet: function addDisjunctiveFacet(facet) {\n    if (this.isDisjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.setQueryParameters({\n      disjunctiveFacets: this.disjunctiveFacets.concat([facet])\n    });\n  },\n  /**\n   * Add a hierarchical facet to the hierarchicalFacets attribute of the helper\n   * configuration.\n   * @method\n   * @param {object} hierarchicalFacet hierarchical facet to add\n   * @return {SearchParameters}\n   * @throws will throw an error if a hierarchical facet with the same name was already declared\n   */\n  addHierarchicalFacet: function addHierarchicalFacet(hierarchicalFacet) {\n    if (this.isHierarchicalFacet(hierarchicalFacet.name)) {\n      throw new Error(\n        'Cannot declare two hierarchical facets with the same name: `' + hierarchicalFacet.name + '`');\n    }\n\n    return this.setQueryParameters({\n      hierarchicalFacets: this.hierarchicalFacets.concat([hierarchicalFacet])\n    });\n  },\n  /**\n   * Add a refinement on a \"normal\" facet\n   * @method\n   * @param {string} facet attribute to apply the faceting on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters}\n   */\n  addFacetRefinement: function addFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n    if (RefinementList.isRefined(this.facetsRefinements, facet, value)) return this;\n\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.addRefinement(this.facetsRefinements, facet, value)\n    });\n  },\n  /**\n   * Exclude a value from a \"normal\" facet\n   * @method\n   * @param {string} facet attribute to apply the exclusion on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters}\n   */\n  addExcludeRefinement: function addExcludeRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n    if (RefinementList.isRefined(this.facetsExcludes, facet, value)) return this;\n\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.addRefinement(this.facetsExcludes, facet, value)\n    });\n  },\n  /**\n   * Adds a refinement on a disjunctive facet.\n   * @method\n   * @param {string} facet attribute to apply the faceting on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters}\n   */\n  addDisjunctiveFacetRefinement: function addDisjunctiveFacetRefinement(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(\n        facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');\n    }\n\n    if (RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value)) return this;\n\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.addRefinement(\n        this.disjunctiveFacetsRefinements, facet, value)\n    });\n  },\n  /**\n   * addTagRefinement adds a tag to the list used to filter the results\n   * @param {string} tag tag to be added\n   * @return {SearchParameters}\n   */\n  addTagRefinement: function addTagRefinement(tag) {\n    if (this.isTagRefined(tag)) return this;\n\n    var modification = {\n      tagRefinements: this.tagRefinements.concat(tag)\n    };\n\n    return this.setQueryParameters(modification);\n  },\n  /**\n   * Remove a facet from the facets attribute of the helper configuration, if it\n   * is present.\n   * @method\n   * @param {string} facet facet name to remove\n   * @return {SearchParameters}\n   */\n  removeFacet: function removeFacet(facet) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      facets: this.facets.filter(function(f) {\n        return f !== facet;\n      })\n    });\n  },\n  /**\n   * Remove a disjunctive facet from the disjunctiveFacets attribute of the\n   * helper configuration, if it is present.\n   * @method\n   * @param {string} facet disjunctive facet name to remove\n   * @return {SearchParameters}\n   */\n  removeDisjunctiveFacet: function removeDisjunctiveFacet(facet) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      disjunctiveFacets: this.disjunctiveFacets.filter(function(f) {\n        return f !== facet;\n      })\n    });\n  },\n  /**\n   * Remove a hierarchical facet from the hierarchicalFacets attribute of the\n   * helper configuration, if it is present.\n   * @method\n   * @param {string} facet hierarchical facet name to remove\n   * @return {SearchParameters}\n   */\n  removeHierarchicalFacet: function removeHierarchicalFacet(facet) {\n    if (!this.isHierarchicalFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      hierarchicalFacets: this.hierarchicalFacets.filter(function(f) {\n        return f.name !== facet;\n      })\n    });\n  },\n  /**\n   * Remove a refinement set on facet. If a value is provided, it will clear the\n   * refinement for the given value, otherwise it will clear all the refinement\n   * values for the faceted attribute.\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} [value] value used to filter\n   * @return {SearchParameters}\n   */\n  removeFacetRefinement: function removeFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n    if (!RefinementList.isRefined(this.facetsRefinements, facet, value)) return this;\n\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.removeRefinement(this.facetsRefinements, facet, value)\n    });\n  },\n  /**\n   * Remove a negative refinement on a facet\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} value value used to filter\n   * @return {SearchParameters}\n   */\n  removeExcludeRefinement: function removeExcludeRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n    if (!RefinementList.isRefined(this.facetsExcludes, facet, value)) return this;\n\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.removeRefinement(this.facetsExcludes, facet, value)\n    });\n  },\n  /**\n   * Remove a refinement on a disjunctive facet\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} value value used to filter\n   * @return {SearchParameters}\n   */\n  removeDisjunctiveFacetRefinement: function removeDisjunctiveFacetRefinement(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(\n        facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');\n    }\n    if (!RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value)) return this;\n\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.removeRefinement(\n        this.disjunctiveFacetsRefinements, facet, value)\n    });\n  },\n  /**\n   * Remove a tag from the list of tag refinements\n   * @method\n   * @param {string} tag the tag to remove\n   * @return {SearchParameters}\n   */\n  removeTagRefinement: function removeTagRefinement(tag) {\n    if (!this.isTagRefined(tag)) return this;\n\n    var modification = {\n      tagRefinements: this.tagRefinements.filter(function(t) {\n        return t !== tag;\n      })\n    };\n\n    return this.setQueryParameters(modification);\n  },\n  /**\n   * Generic toggle refinement method to use with facet, disjunctive facets\n   * and hierarchical facets\n   * @param  {string} facet the facet to refine\n   * @param  {string} value the associated value\n   * @return {SearchParameters}\n   * @throws will throw an error if the facet is not declared in the settings of the helper\n   * @deprecated since version 2.19.0, see {@link SearchParameters#toggleFacetRefinement}\n   */\n  toggleRefinement: function toggleRefinement(facet, value) {\n    return this.toggleFacetRefinement(facet, value);\n  },\n  /**\n   * Generic toggle refinement method to use with facet, disjunctive facets\n   * and hierarchical facets\n   * @param  {string} facet the facet to refine\n   * @param  {string} value the associated value\n   * @return {SearchParameters}\n   * @throws will throw an error if the facet is not declared in the settings of the helper\n   */\n  toggleFacetRefinement: function toggleFacetRefinement(facet, value) {\n    if (this.isHierarchicalFacet(facet)) {\n      return this.toggleHierarchicalFacetRefinement(facet, value);\n    } else if (this.isConjunctiveFacet(facet)) {\n      return this.toggleConjunctiveFacetRefinement(facet, value);\n    } else if (this.isDisjunctiveFacet(facet)) {\n      return this.toggleDisjunctiveFacetRefinement(facet, value);\n    }\n\n    throw new Error('Cannot refine the undeclared facet ' + facet +\n      '; it should be added to the helper options facets, disjunctiveFacets or hierarchicalFacets');\n  },\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleConjunctiveFacetRefinement: function toggleConjunctiveFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.toggleRefinement(this.facetsRefinements, facet, value)\n    });\n  },\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleExcludeFacetRefinement: function toggleExcludeFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.toggleRefinement(this.facetsExcludes, facet, value)\n    });\n  },\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleDisjunctiveFacetRefinement: function toggleDisjunctiveFacetRefinement(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(\n        facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');\n    }\n\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.toggleRefinement(\n        this.disjunctiveFacetsRefinements, facet, value)\n    });\n  },\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleHierarchicalFacetRefinement: function toggleHierarchicalFacetRefinement(facet, value) {\n    if (!this.isHierarchicalFacet(facet)) {\n      throw new Error(\n        facet + ' is not defined in the hierarchicalFacets attribute of the helper configuration');\n    }\n\n    var separator = this._getHierarchicalFacetSeparator(this.getHierarchicalFacetByName(facet));\n\n    var mod = {};\n\n    var upOneOrMultipleLevel = this.hierarchicalFacetsRefinements[facet] !== undefined &&\n      this.hierarchicalFacetsRefinements[facet].length > 0 && (\n      // remove current refinement:\n      // refinement was 'beer > IPA', call is toggleRefine('beer > IPA'), refinement should be `beer`\n      this.hierarchicalFacetsRefinements[facet][0] === value ||\n      // remove a parent refinement of the current refinement:\n      //  - refinement was 'beer > IPA > Flying dog'\n      //  - call is toggleRefine('beer > IPA')\n      //  - refinement should be `beer`\n      this.hierarchicalFacetsRefinements[facet][0].indexOf(value + separator) === 0\n    );\n\n    if (upOneOrMultipleLevel) {\n      if (value.indexOf(separator) === -1) {\n        // go back to root level\n        mod[facet] = [];\n      } else {\n        mod[facet] = [value.slice(0, value.lastIndexOf(separator))];\n      }\n    } else {\n      mod[facet] = [value];\n    }\n\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure({}, mod, this.hierarchicalFacetsRefinements)\n    });\n  },\n\n  /**\n   * Adds a refinement on a hierarchical facet.\n   * @param {string} facet the facet name\n   * @param {string} path the hierarchical facet path\n   * @return {SearchParameter} the new state\n   * @throws Error if the facet is not defined or if the facet is refined\n   */\n  addHierarchicalFacetRefinement: function(facet, path) {\n    if (this.isHierarchicalFacetRefined(facet)) {\n      throw new Error(facet + ' is already refined.');\n    }\n    if (!this.isHierarchicalFacet(facet)) {\n      throw new Error(facet + ' is not defined in the hierarchicalFacets attribute of the helper configuration.');\n    }\n    var mod = {};\n    mod[facet] = [path];\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure({}, mod, this.hierarchicalFacetsRefinements)\n    });\n  },\n\n  /**\n   * Removes the refinement set on a hierarchical facet.\n   * @param {string} facet the facet name\n   * @return {SearchParameter} the new state\n   * @throws Error if the facet is not defined or if the facet is not refined\n   */\n  removeHierarchicalFacetRefinement: function(facet) {\n    if (!this.isHierarchicalFacetRefined(facet)) {\n      return this;\n    }\n    var mod = {};\n    mod[facet] = [];\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure({}, mod, this.hierarchicalFacetsRefinements)\n    });\n  },\n  /**\n   * Switch the tag refinement\n   * @method\n   * @param {string} tag the tag to remove or add\n   * @return {SearchParameters}\n   */\n  toggleTagRefinement: function toggleTagRefinement(tag) {\n    if (this.isTagRefined(tag)) {\n      return this.removeTagRefinement(tag);\n    }\n\n    return this.addTagRefinement(tag);\n  },\n  /**\n   * Test if the facet name is from one of the disjunctive facets\n   * @method\n   * @param {string} facet facet name to test\n   * @return {boolean}\n   */\n  isDisjunctiveFacet: function(facet) {\n    return this.disjunctiveFacets.indexOf(facet) > -1;\n  },\n  /**\n   * Test if the facet name is from one of the hierarchical facets\n   * @method\n   * @param {string} facetName facet name to test\n   * @return {boolean}\n   */\n  isHierarchicalFacet: function(facetName) {\n    return this.getHierarchicalFacetByName(facetName) !== undefined;\n  },\n  /**\n   * Test if the facet name is from one of the conjunctive/normal facets\n   * @method\n   * @param {string} facet facet name to test\n   * @return {boolean}\n   */\n  isConjunctiveFacet: function(facet) {\n    return this.facets.indexOf(facet) > -1;\n  },\n  /**\n   * Returns true if the facet is refined, either for a specific value or in\n   * general.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value, optional value. If passed will test that this value\n   * is filtering the given facet.\n   * @return {boolean} returns true if refined\n   */\n  isFacetRefined: function isFacetRefined(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return false;\n    }\n    return RefinementList.isRefined(this.facetsRefinements, facet, value);\n  },\n  /**\n   * Returns true if the facet contains exclusions or if a specific value is\n   * excluded.\n   *\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} [value] optional value. If passed will test that this value\n   * is filtering the given facet.\n   * @return {boolean} returns true if refined\n   */\n  isExcludeRefined: function isExcludeRefined(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return false;\n    }\n    return RefinementList.isRefined(this.facetsExcludes, facet, value);\n  },\n  /**\n   * Returns true if the facet contains a refinement, or if a value passed is a\n   * refinement for the facet.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value optional, will test if the value is used for refinement\n   * if there is one, otherwise will test if the facet contains any refinement\n   * @return {boolean}\n   */\n  isDisjunctiveFacetRefined: function isDisjunctiveFacetRefined(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      return false;\n    }\n    return RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value);\n  },\n  /**\n   * Returns true if the facet contains a refinement, or if a value passed is a\n   * refinement for the facet.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value optional, will test if the value is used for refinement\n   * if there is one, otherwise will test if the facet contains any refinement\n   * @return {boolean}\n   */\n  isHierarchicalFacetRefined: function isHierarchicalFacetRefined(facet, value) {\n    if (!this.isHierarchicalFacet(facet)) {\n      return false;\n    }\n\n    var refinements = this.getHierarchicalRefinement(facet);\n\n    if (!value) {\n      return refinements.length > 0;\n    }\n\n    return refinements.indexOf(value) !== -1;\n  },\n  /**\n   * Test if the triple (attribute, operator, value) is already refined.\n   * If only the attribute and the operator are provided, it tests if the\n   * contains any refinement value.\n   * @method\n   * @param {string} attribute attribute for which the refinement is applied\n   * @param {string} [operator] operator of the refinement\n   * @param {string} [value] value of the refinement\n   * @return {boolean} true if it is refined\n   */\n  isNumericRefined: function isNumericRefined(attribute, operator, value) {\n    if (value === undefined && operator === undefined) {\n      return !!this.numericRefinements[attribute];\n    }\n\n    var isOperatorDefined =\n      this.numericRefinements[attribute] &&\n      this.numericRefinements[attribute][operator] !== undefined;\n\n    if (value === undefined || !isOperatorDefined) {\n      return isOperatorDefined;\n    }\n\n    var parsedValue = valToNumber(value);\n    var isAttributeValueDefined =\n      findArray(this.numericRefinements[attribute][operator], parsedValue) !==\n      undefined;\n\n    return isOperatorDefined && isAttributeValueDefined;\n  },\n  /**\n   * Returns true if the tag refined, false otherwise\n   * @method\n   * @param {string} tag the tag to check\n   * @return {boolean}\n   */\n  isTagRefined: function isTagRefined(tag) {\n    return this.tagRefinements.indexOf(tag) !== -1;\n  },\n  /**\n   * Returns the list of all disjunctive facets refined\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {string[]}\n   */\n  getRefinedDisjunctiveFacets: function getRefinedDisjunctiveFacets() {\n    var self = this;\n\n    // attributes used for numeric filter can also be disjunctive\n    var disjunctiveNumericRefinedFacets = intersection(\n      Object.keys(this.numericRefinements).filter(function(facet) {\n        return Object.keys(self.numericRefinements[facet]).length > 0;\n      }),\n      this.disjunctiveFacets\n    );\n\n    return Object.keys(this.disjunctiveFacetsRefinements).filter(function(facet) {\n      return self.disjunctiveFacetsRefinements[facet].length > 0;\n    })\n      .concat(disjunctiveNumericRefinedFacets)\n      .concat(this.getRefinedHierarchicalFacets());\n  },\n  /**\n   * Returns the list of all disjunctive facets refined\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {string[]}\n   */\n  getRefinedHierarchicalFacets: function getRefinedHierarchicalFacets() {\n    var self = this;\n    return intersection(\n      // enforce the order between the two arrays,\n      // so that refinement name index === hierarchical facet index\n      this.hierarchicalFacets.map(function(facet) { return facet.name; }),\n      Object.keys(this.hierarchicalFacetsRefinements).filter(function(facet) {\n        return self.hierarchicalFacetsRefinements[facet].length > 0;\n      })\n    );\n  },\n  /**\n   * Returned the list of all disjunctive facets not refined\n   * @method\n   * @return {string[]}\n   */\n  getUnrefinedDisjunctiveFacets: function() {\n    var refinedFacets = this.getRefinedDisjunctiveFacets();\n\n    return this.disjunctiveFacets.filter(function(f) {\n      return refinedFacets.indexOf(f) === -1;\n    });\n  },\n\n  managedParameters: [\n    'index',\n\n    'facets',\n    'disjunctiveFacets',\n    'facetsRefinements',\n    'hierarchicalFacets',\n    'facetsExcludes',\n\n    'disjunctiveFacetsRefinements',\n    'numericRefinements',\n    'tagRefinements',\n    'hierarchicalFacetsRefinements'\n  ],\n  getQueryParams: function getQueryParams() {\n    var managedParameters = this.managedParameters;\n\n    var queryParams = {};\n\n    var self = this;\n    Object.keys(this).forEach(function(paramName) {\n      var paramValue = self[paramName];\n      if (managedParameters.indexOf(paramName) === -1 && paramValue !== undefined) {\n        queryParams[paramName] = paramValue;\n      }\n    });\n\n    return queryParams;\n  },\n  /**\n   * Let the user set a specific value for a given parameter. Will return the\n   * same instance if the parameter is invalid or if the value is the same as the\n   * previous one.\n   * @method\n   * @param {string} parameter the parameter name\n   * @param {any} value the value to be set, must be compliant with the definition\n   * of the attribute on the object\n   * @return {SearchParameters} the updated state\n   */\n  setQueryParameter: function setParameter(parameter, value) {\n    if (this[parameter] === value) return this;\n\n    var modification = {};\n\n    modification[parameter] = value;\n\n    return this.setQueryParameters(modification);\n  },\n  /**\n   * Let the user set any of the parameters with a plain object.\n   * @method\n   * @param {object} params all the keys and the values to be updated\n   * @return {SearchParameters} a new updated instance\n   */\n  setQueryParameters: function setQueryParameters(params) {\n    if (!params) return this;\n\n    var error = SearchParameters.validate(this, params);\n\n    if (error) {\n      throw error;\n    }\n\n    var self = this;\n    var nextWithNumbers = SearchParameters._parseNumbers(params);\n    var previousPlainObject = Object.keys(this).reduce(function(acc, key) {\n      acc[key] = self[key];\n      return acc;\n    }, {});\n\n    var nextPlainObject = Object.keys(nextWithNumbers).reduce(\n      function(previous, key) {\n        var isPreviousValueDefined = previous[key] !== undefined;\n        var isNextValueDefined = nextWithNumbers[key] !== undefined;\n\n        if (isPreviousValueDefined && !isNextValueDefined) {\n          return omit(previous, [key]);\n        }\n\n        if (isNextValueDefined) {\n          previous[key] = nextWithNumbers[key];\n        }\n\n        return previous;\n      },\n      previousPlainObject\n    );\n\n    return new this.constructor(nextPlainObject);\n  },\n\n  /**\n   * Returns a new instance with the page reset. Two scenarios possible:\n   * the page is omitted -> return the given instance\n   * the page is set -> return a new instance with a page of 0\n   * @return {SearchParameters} a new updated instance\n   */\n  resetPage: function() {\n    if (this.page === undefined) {\n      return this;\n    }\n\n    return this.setPage(0);\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet separator or the default one (`>`)\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.separator or `>` as default\n   */\n  _getHierarchicalFacetSortBy: function(hierarchicalFacet) {\n    return hierarchicalFacet.sortBy || ['isRefined:desc', 'name:asc'];\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet separator or the default one (`>`)\n   * @private\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.separator or `>` as default\n   */\n  _getHierarchicalFacetSeparator: function(hierarchicalFacet) {\n    return hierarchicalFacet.separator || ' > ';\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet prefix path or null\n   * @private\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.rootPath or null as default\n   */\n  _getHierarchicalRootPath: function(hierarchicalFacet) {\n    return hierarchicalFacet.rootPath || null;\n  },\n\n  /**\n   * Helper function to check if we show the parent level of the hierarchicalFacet\n   * @private\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.showParentLevel or true as default\n   */\n  _getHierarchicalShowParentLevel: function(hierarchicalFacet) {\n    if (typeof hierarchicalFacet.showParentLevel === 'boolean') {\n      return hierarchicalFacet.showParentLevel;\n    }\n    return true;\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet by it's name\n   * @param  {string} hierarchicalFacetName\n   * @return {object} a hierarchicalFacet\n   */\n  getHierarchicalFacetByName: function(hierarchicalFacetName) {\n    return find(\n      this.hierarchicalFacets,\n      function(f) {\n        return f.name === hierarchicalFacetName;\n      }\n    );\n  },\n\n  /**\n   * Get the current breadcrumb for a hierarchical facet, as an array\n   * @param  {string} facetName Hierarchical facet name\n   * @return {array.<string>} the path as an array of string\n   */\n  getHierarchicalFacetBreadcrumb: function(facetName) {\n    if (!this.isHierarchicalFacet(facetName)) {\n      return [];\n    }\n\n    var refinement = this.getHierarchicalRefinement(facetName)[0];\n    if (!refinement) return [];\n\n    var separator = this._getHierarchicalFacetSeparator(\n      this.getHierarchicalFacetByName(facetName)\n    );\n    var path = refinement.split(separator);\n    return path.map(function(part) {\n      return part.trim();\n    });\n  },\n\n  toString: function() {\n    return JSON.stringify(this, null, 2);\n  }\n};\n\n/**\n * Callback used for clearRefinement method\n * @callback SearchParameters.clearCallback\n * @param {OperatorList|FacetList} value the value of the filter\n * @param {string} key the current attribute name\n * @param {string} type `numeric`, `disjunctiveFacet`, `conjunctiveFacet`, `hierarchicalFacet` or `exclude`\n * depending on the type of facet\n * @return {boolean} `true` if the element should be removed. `false` otherwise.\n */\nmodule.exports = SearchParameters;\n","'use strict';\n\nmodule.exports = function isValidUserToken(userToken) {\n  if (userToken === null) {\n    return false;\n  }\n  return /^[a-zA-Z0-9_-]{1,64}$/.test(userToken);\n};\n","'use strict';\n\nmodule.exports = function compact(array) {\n  if (!Array.isArray(array)) {\n    return [];\n  }\n\n  return array.filter(Boolean);\n};\n","'use strict';\n\n// @MAJOR can be replaced by native Array#findIndex when we change support\nmodule.exports = function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return -1;\n  }\n\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return i;\n    }\n  }\n  return -1;\n};\n","'use strict';\n\nvar find = require('./find');\n\n/**\n * Transform sort format from user friendly notation to lodash format\n * @param {string[]} sortBy array of predicate of the form \"attribute:order\"\n * @param {string[]} [defaults] array of predicate of the form \"attribute:order\"\n * @return {array.<string[]>} array containing 2 elements : attributes, orders\n */\nmodule.exports = function formatSort(sortBy, defaults) {\n  var defaultInstructions = (defaults || []).map(function(sort) {\n    return sort.split(':');\n  });\n\n  return sortBy.reduce(\n    function preparePredicate(out, sort) {\n      var sortInstruction = sort.split(':');\n\n      var matchingDefault = find(defaultInstructions, function(\n        defaultInstruction\n      ) {\n        return defaultInstruction[0] === sortInstruction[0];\n      });\n\n      if (sortInstruction.length > 1 || !matchingDefault) {\n        out[0].push(sortInstruction[0]);\n        out[1].push(sortInstruction[1]);\n        return out;\n      }\n\n      out[0].push(matchingDefault[0]);\n      out[1].push(matchingDefault[1]);\n      return out;\n    },\n    [[], []]\n  );\n};\n","'use strict';\n\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined;\n    var valIsNull = value === null;\n\n    var othIsDefined = other !== undefined;\n    var othIsNull = other === null;\n\n    if (\n      (!othIsNull && value > other) ||\n      (valIsNull && othIsDefined) ||\n      !valIsDefined\n    ) {\n      return 1;\n    }\n    if (\n      (!valIsNull && value < other) ||\n      (othIsNull && valIsDefined) ||\n      !othIsDefined\n    ) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\n/**\n * @param {Array<object>} collection object with keys in attributes\n * @param {Array<string>} iteratees attributes\n * @param {Array<string>} orders asc | desc\n */\nfunction orderBy(collection, iteratees, orders) {\n  if (!Array.isArray(collection)) {\n    return [];\n  }\n\n  if (!Array.isArray(orders)) {\n    orders = [];\n  }\n\n  var result = collection.map(function(value, index) {\n    return {\n      criteria: iteratees.map(function(iteratee) {\n        return value[iteratee];\n      }),\n      index: index,\n      value: value\n    };\n  });\n\n  result.sort(function comparer(object, other) {\n    var index = -1;\n\n    while (++index < object.criteria.length) {\n      var res = compareAscending(object.criteria[index], other.criteria[index]);\n      if (res) {\n        if (index >= orders.length) {\n          return res;\n        }\n        if (orders[index] === 'desc') {\n          return -res;\n        }\n        return res;\n      }\n    }\n\n    // This ensures a stable sort in V8 and other engines.\n    // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  });\n\n  return result.map(function(res) {\n    return res.value;\n  });\n}\n\nmodule.exports = orderBy;\n","'use strict';\n\n/**\n * Replaces a leading - with \\-\n * @private\n * @param {any} value the facet value to replace\n * @returns any\n */\nfunction escapeFacetValue(value) {\n  if (typeof value !== 'string') return value;\n\n  return String(value).replace(/^-/, '\\\\-');\n}\n\n/**\n * Replaces a leading \\- with -\n * @private\n * @param {any} value the escaped facet value\n * @returns any\n */\nfunction unescapeFacetValue(value) {\n  if (typeof value !== 'string') return value;\n\n  return value.replace(/^\\\\-/, '-');\n}\n\nmodule.exports = {\n  escapeFacetValue: escapeFacetValue,\n  unescapeFacetValue: unescapeFacetValue\n};\n","'use strict';\n\nmodule.exports = generateTrees;\n\nvar orderBy = require('../functions/orderBy');\nvar find = require('../functions/find');\nvar prepareHierarchicalFacetSortBy = require('../functions/formatSort');\nvar fv = require('../functions/escapeFacetValue');\nvar escapeFacetValue = fv.escapeFacetValue;\nvar unescapeFacetValue = fv.unescapeFacetValue;\n\nfunction generateTrees(state) {\n  return function generate(hierarchicalFacetResult, hierarchicalFacetIndex) {\n    var hierarchicalFacet = state.hierarchicalFacets[hierarchicalFacetIndex];\n    var hierarchicalFacetRefinement =\n      (state.hierarchicalFacetsRefinements[hierarchicalFacet.name] &&\n        state.hierarchicalFacetsRefinements[hierarchicalFacet.name][0]) ||\n      '';\n    var hierarchicalSeparator = state._getHierarchicalFacetSeparator(\n      hierarchicalFacet\n    );\n    var hierarchicalRootPath = state._getHierarchicalRootPath(\n      hierarchicalFacet\n    );\n    var hierarchicalShowParentLevel = state._getHierarchicalShowParentLevel(\n      hierarchicalFacet\n    );\n    var sortBy = prepareHierarchicalFacetSortBy(\n      state._getHierarchicalFacetSortBy(hierarchicalFacet)\n    );\n\n    var rootExhaustive = hierarchicalFacetResult.every(function(facetResult) {\n      return facetResult.exhaustive;\n    });\n\n    var generateTreeFn = generateHierarchicalTree(\n      sortBy,\n      hierarchicalSeparator,\n      hierarchicalRootPath,\n      hierarchicalShowParentLevel,\n      hierarchicalFacetRefinement\n    );\n\n    var results = hierarchicalFacetResult;\n\n    if (hierarchicalRootPath) {\n      results = hierarchicalFacetResult.slice(\n        hierarchicalRootPath.split(hierarchicalSeparator).length\n      );\n    }\n\n    return results.reduce(generateTreeFn, {\n      name: state.hierarchicalFacets[hierarchicalFacetIndex].name,\n      count: null, // root level, no count\n      isRefined: true, // root level, always refined\n      path: null, // root level, no path\n      escapedValue: null,\n      exhaustive: rootExhaustive,\n      data: null\n    });\n  };\n}\n\nfunction generateHierarchicalTree(\n  sortBy,\n  hierarchicalSeparator,\n  hierarchicalRootPath,\n  hierarchicalShowParentLevel,\n  currentRefinement\n) {\n  return function generateTree(\n    hierarchicalTree,\n    hierarchicalFacetResult,\n    currentHierarchicalLevel\n  ) {\n    var parent = hierarchicalTree;\n\n    if (currentHierarchicalLevel > 0) {\n      var level = 0;\n\n      parent = hierarchicalTree;\n\n      while (level < currentHierarchicalLevel) {\n        /**\n         * @type {object[]]} hierarchical data\n         */\n        var data = parent && Array.isArray(parent.data) ? parent.data : [];\n        parent = find(data, function(subtree) {\n          return subtree.isRefined;\n        });\n        level++;\n      }\n    }\n\n    // we found a refined parent, let's add current level data under it\n    if (parent) {\n      // filter values in case an object has multiple categories:\n      //   {\n      //     categories: {\n      //       level0: ['beers', 'bières'],\n      //       level1: ['beers > IPA', 'bières > Belges']\n      //     }\n      //   }\n      //\n      // If parent refinement is `beers`, then we do not want to have `bières > Belges`\n      // showing up\n\n      var picked = Object.keys(hierarchicalFacetResult.data)\n        .map(function(facetValue) {\n          return [facetValue, hierarchicalFacetResult.data[facetValue]];\n        })\n        .filter(function(tuple) {\n          var facetValue = tuple[0];\n          return onlyMatchingTree(\n            facetValue,\n            parent.path || hierarchicalRootPath,\n            currentRefinement,\n            hierarchicalSeparator,\n            hierarchicalRootPath,\n            hierarchicalShowParentLevel\n          );\n        });\n\n      parent.data = orderBy(\n        picked.map(function(tuple) {\n          var facetValue = tuple[0];\n          var facetCount = tuple[1];\n\n          return format(\n            facetCount,\n            facetValue,\n            hierarchicalSeparator,\n            unescapeFacetValue(currentRefinement),\n            hierarchicalFacetResult.exhaustive\n          );\n        }),\n        sortBy[0],\n        sortBy[1]\n      );\n    }\n\n    return hierarchicalTree;\n  };\n}\n\nfunction onlyMatchingTree(\n  facetValue,\n  parentPath,\n  currentRefinement,\n  hierarchicalSeparator,\n  hierarchicalRootPath,\n  hierarchicalShowParentLevel\n) {\n  // we want the facetValue is a child of hierarchicalRootPath\n  if (\n    hierarchicalRootPath &&\n    (facetValue.indexOf(hierarchicalRootPath) !== 0 ||\n      hierarchicalRootPath === facetValue)\n  ) {\n    return false;\n  }\n\n  // we always want root levels (only when there is no prefix path)\n  return (\n    (!hierarchicalRootPath &&\n      facetValue.indexOf(hierarchicalSeparator) === -1) ||\n    // if there is a rootPath, being root level mean 1 level under rootPath\n    (hierarchicalRootPath &&\n      facetValue.split(hierarchicalSeparator).length -\n        hierarchicalRootPath.split(hierarchicalSeparator).length ===\n        1) ||\n    // if current refinement is a root level and current facetValue is a root level,\n    // keep the facetValue\n    (facetValue.indexOf(hierarchicalSeparator) === -1 &&\n      currentRefinement.indexOf(hierarchicalSeparator) === -1) ||\n    // currentRefinement is a child of the facet value\n    currentRefinement.indexOf(facetValue) === 0 ||\n    // facetValue is a child of the current parent, add it\n    (facetValue.indexOf(parentPath + hierarchicalSeparator) === 0 &&\n      (hierarchicalShowParentLevel ||\n        facetValue.indexOf(currentRefinement) === 0))\n  );\n}\n\nfunction format(\n  facetCount,\n  facetValue,\n  hierarchicalSeparator,\n  currentRefinement,\n  exhaustive\n) {\n  var parts = facetValue.split(hierarchicalSeparator);\n  return {\n    name: parts[parts.length - 1].trim(),\n    path: facetValue,\n    escapedValue: escapeFacetValue(facetValue),\n    count: facetCount,\n    isRefined:\n      currentRefinement === facetValue ||\n      currentRefinement.indexOf(facetValue + hierarchicalSeparator) === 0,\n    exhaustive: exhaustive,\n    data: null\n  };\n}\n","'use strict';\n\nvar merge = require('../functions/merge');\nvar defaultsPure = require('../functions/defaultsPure');\nvar orderBy = require('../functions/orderBy');\nvar compact = require('../functions/compact');\nvar find = require('../functions/find');\nvar findIndex = require('../functions/findIndex');\nvar formatSort = require('../functions/formatSort');\nvar fv = require('../functions/escapeFacetValue');\nvar escapeFacetValue = fv.escapeFacetValue;\nvar unescapeFacetValue = fv.unescapeFacetValue;\n\nvar generateHierarchicalTree = require('./generate-hierarchical-tree');\n\n/**\n * @typedef SearchResults.Facet\n * @type {object}\n * @property {string} name name of the attribute in the record\n * @property {object} data the faceting data: value, number of entries\n * @property {object} stats undefined unless facet_stats is retrieved from algolia\n */\n\n/**\n * @typedef SearchResults.HierarchicalFacet\n * @type {object}\n * @property {string} name name of the current value given the hierarchical level, trimmed.\n * If root node, you get the facet name\n * @property {number} count number of objects matching this hierarchical value\n * @property {string} path the current hierarchical value full path\n * @property {boolean} isRefined `true` if the current value was refined, `false` otherwise\n * @property {HierarchicalFacet[]} data sub values for the current level\n */\n\n/**\n * @typedef SearchResults.FacetValue\n * @type {object}\n * @property {string} name the facet value itself\n * @property {number} count times this facet appears in the results\n * @property {boolean} isRefined is the facet currently selected\n * @property {boolean} isExcluded is the facet currently excluded (only for conjunctive facets)\n */\n\n/**\n * @typedef Refinement\n * @type {object}\n * @property {string} type the type of filter used:\n * `numeric`, `facet`, `exclude`, `disjunctive`, `hierarchical`\n * @property {string} attributeName name of the attribute used for filtering\n * @property {string} name the value of the filter\n * @property {number} numericValue the value as a number. Only for numeric filters.\n * @property {string} operator the operator used. Only for numeric filters.\n * @property {number} count the number of computed hits for this filter. Only on facets.\n * @property {boolean} exhaustive if the count is exhaustive\n */\n\n/**\n * @param {string[]} attributes\n */\nfunction getIndices(attributes) {\n  var indices = {};\n\n  attributes.forEach(function(val, idx) {\n    indices[val] = idx;\n  });\n\n  return indices;\n}\n\nfunction assignFacetStats(dest, facetStats, key) {\n  if (facetStats && facetStats[key]) {\n    dest.stats = facetStats[key];\n  }\n}\n\n/**\n * @typedef {Object} HierarchicalFacet\n * @property {string} name\n * @property {string[]} attributes\n */\n\n/**\n * @param {HierarchicalFacet[]} hierarchicalFacets\n * @param {string} hierarchicalAttributeName\n */\nfunction findMatchingHierarchicalFacetFromAttributeName(\n  hierarchicalFacets,\n  hierarchicalAttributeName\n) {\n  return find(hierarchicalFacets, function facetKeyMatchesAttribute(\n    hierarchicalFacet\n  ) {\n    var facetNames = hierarchicalFacet.attributes || [];\n    return facetNames.indexOf(hierarchicalAttributeName) > -1;\n  });\n}\n\n/*eslint-disable */\n/**\n * Constructor for SearchResults\n * @class\n * @classdesc SearchResults contains the results of a query to Algolia using the\n * {@link AlgoliaSearchHelper}.\n * @param {SearchParameters} state state that led to the response\n * @param {array.<object>} results the results from algolia client\n * @example <caption>SearchResults of the first query in\n * <a href=\"http://demos.algolia.com/instant-search-demo\">the instant search demo</a></caption>\n{\n   \"hitsPerPage\": 10,\n   \"processingTimeMS\": 2,\n   \"facets\": [\n      {\n         \"name\": \"type\",\n         \"data\": {\n            \"HardGood\": 6627,\n            \"BlackTie\": 550,\n            \"Music\": 665,\n            \"Software\": 131,\n            \"Game\": 456,\n            \"Movie\": 1571\n         },\n         \"exhaustive\": false\n      },\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"Free shipping\": 5507\n         },\n         \"name\": \"shipping\"\n      }\n  ],\n   \"hits\": [\n      {\n         \"thumbnailImage\": \"http://img.bbystatic.com/BestBuy_US/images/products/1688/1688832_54x108_s.gif\",\n         \"_highlightResult\": {\n            \"shortDescription\": {\n               \"matchLevel\": \"none\",\n               \"value\": \"Safeguard your PC, Mac, Android and iOS devices with comprehensive Internet protection\",\n               \"matchedWords\": []\n            },\n            \"category\": {\n               \"matchLevel\": \"none\",\n               \"value\": \"Computer Security Software\",\n               \"matchedWords\": []\n            },\n            \"manufacturer\": {\n               \"matchedWords\": [],\n               \"value\": \"Webroot\",\n               \"matchLevel\": \"none\"\n            },\n            \"name\": {\n               \"value\": \"Webroot SecureAnywhere Internet Security (3-Device) (1-Year Subscription) - Mac/Windows\",\n               \"matchedWords\": [],\n               \"matchLevel\": \"none\"\n            }\n         },\n         \"image\": \"http://img.bbystatic.com/BestBuy_US/images/products/1688/1688832_105x210_sc.jpg\",\n         \"shipping\": \"Free shipping\",\n         \"bestSellingRank\": 4,\n         \"shortDescription\": \"Safeguard your PC, Mac, Android and iOS devices with comprehensive Internet protection\",\n         \"url\": \"http://www.bestbuy.com/site/webroot-secureanywhere-internet-security-3-devi…d=1219060687969&skuId=1688832&cmp=RMX&ky=2d3GfEmNIzjA0vkzveHdZEBgpPCyMnLTJ\",\n         \"name\": \"Webroot SecureAnywhere Internet Security (3-Device) (1-Year Subscription) - Mac/Windows\",\n         \"category\": \"Computer Security Software\",\n         \"salePrice_range\": \"1 - 50\",\n         \"objectID\": \"1688832\",\n         \"type\": \"Software\",\n         \"customerReviewCount\": 5980,\n         \"salePrice\": 49.99,\n         \"manufacturer\": \"Webroot\"\n      },\n      ....\n  ],\n   \"nbHits\": 10000,\n   \"disjunctiveFacets\": [\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"5\": 183,\n            \"12\": 112,\n            \"7\": 149,\n            ...\n         },\n         \"name\": \"customerReviewCount\",\n         \"stats\": {\n            \"max\": 7461,\n            \"avg\": 157.939,\n            \"min\": 1\n         }\n      },\n      {\n         \"data\": {\n            \"Printer Ink\": 142,\n            \"Wireless Speakers\": 60,\n            \"Point & Shoot Cameras\": 48,\n            ...\n         },\n         \"name\": \"category\",\n         \"exhaustive\": false\n      },\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"> 5000\": 2,\n            \"1 - 50\": 6524,\n            \"501 - 2000\": 566,\n            \"201 - 500\": 1501,\n            \"101 - 200\": 1360,\n            \"2001 - 5000\": 47\n         },\n         \"name\": \"salePrice_range\"\n      },\n      {\n         \"data\": {\n            \"Dynex™\": 202,\n            \"Insignia™\": 230,\n            \"PNY\": 72,\n            ...\n         },\n         \"name\": \"manufacturer\",\n         \"exhaustive\": false\n      }\n  ],\n   \"query\": \"\",\n   \"nbPages\": 100,\n   \"page\": 0,\n   \"index\": \"bestbuy\"\n}\n **/\n/*eslint-enable */\nfunction SearchResults(state, results, options) {\n  var mainSubResponse = results[0];\n\n  this._rawResults = results;\n\n  var self = this;\n\n  // https://www.algolia.com/doc/api-reference/api-methods/search/#response\n  Object.keys(mainSubResponse).forEach(function(key) {\n    self[key] = mainSubResponse[key];\n  });\n\n  // Make every key of the result options reachable from the instance\n  Object.keys(options || {}).forEach(function(key) {\n    self[key] = options[key];\n  });\n\n  /**\n   * query used to generate the results\n   * @name query\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * The query as parsed by the engine given all the rules.\n   * @name parsedQuery\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * all the records that match the search parameters. Each record is\n   * augmented with a new attribute `_highlightResult`\n   * which is an object keyed by attribute and with the following properties:\n   *  - `value` : the value of the facet highlighted (html)\n   *  - `matchLevel`: full, partial or none depending on how the query terms match\n   * @name hits\n   * @member {object[]}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * index where the results come from\n   * @name index\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * number of hits per page requested\n   * @name hitsPerPage\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * total number of hits of this query on the index\n   * @name nbHits\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * total number of pages with respect to the number of hits per page and the total number of hits\n   * @name nbPages\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * current page\n   * @name page\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * The position if the position was guessed by IP.\n   * @name aroundLatLng\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   * @example \"48.8637,2.3615\",\n   */\n  /**\n   * The radius computed by Algolia.\n   * @name automaticRadius\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   * @example \"126792922\",\n   */\n  /**\n   * String identifying the server used to serve this request.\n   *\n   * getRankingInfo needs to be set to `true` for this to be returned\n   *\n   * @name serverUsed\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   * @example \"c7-use-2.algolia.net\",\n   */\n  /**\n   * Boolean that indicates if the computation of the counts did time out.\n   * @deprecated\n   * @name timeoutCounts\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * Boolean that indicates if the computation of the hits did time out.\n   * @deprecated\n   * @name timeoutHits\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * True if the counts of the facets is exhaustive\n   * @name exhaustiveFacetsCount\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * True if the number of hits is exhaustive\n   * @name exhaustiveNbHits\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * Contains the userData if they are set by a [query rule](https://www.algolia.com/doc/guides/query-rules/query-rules-overview/).\n   * @name userData\n   * @member {object[]}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * queryID is the unique identifier of the query used to generate the current search results.\n   * This value is only available if the `clickAnalytics` search parameter is set to `true`.\n   * @name queryID\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * sum of the processing time of all the queries\n   * @member {number}\n   */\n  this.processingTimeMS = results.reduce(function(sum, result) {\n    return result.processingTimeMS === undefined\n      ? sum\n      : sum + result.processingTimeMS;\n  }, 0);\n\n  /**\n   * disjunctive facets results\n   * @member {SearchResults.Facet[]}\n   */\n  this.disjunctiveFacets = [];\n  /**\n   * disjunctive facets results\n   * @member {SearchResults.HierarchicalFacet[]}\n   */\n  this.hierarchicalFacets = state.hierarchicalFacets.map(function initFutureTree() {\n    return [];\n  });\n  /**\n   * other facets results\n   * @member {SearchResults.Facet[]}\n   */\n  this.facets = [];\n\n  var disjunctiveFacets = state.getRefinedDisjunctiveFacets();\n\n  var facetsIndices = getIndices(state.facets);\n  var disjunctiveFacetsIndices = getIndices(state.disjunctiveFacets);\n  var nextDisjunctiveResult = 1;\n\n  // Since we send request only for disjunctive facets that have been refined,\n  // we get the facets information from the first, general, response.\n\n  var mainFacets = mainSubResponse.facets || {};\n\n  Object.keys(mainFacets).forEach(function(facetKey) {\n    var facetValueObject = mainFacets[facetKey];\n\n    var hierarchicalFacet = findMatchingHierarchicalFacetFromAttributeName(\n      state.hierarchicalFacets,\n      facetKey\n    );\n\n    if (hierarchicalFacet) {\n      // Place the hierarchicalFacet data at the correct index depending on\n      // the attributes order that was defined at the helper initialization\n      var facetIndex = hierarchicalFacet.attributes.indexOf(facetKey);\n      var idxAttributeName = findIndex(state.hierarchicalFacets, function(f) {\n        return f.name === hierarchicalFacet.name;\n      });\n      self.hierarchicalFacets[idxAttributeName][facetIndex] = {\n        attribute: facetKey,\n        data: facetValueObject,\n        exhaustive: mainSubResponse.exhaustiveFacetsCount\n      };\n    } else {\n      var isFacetDisjunctive = state.disjunctiveFacets.indexOf(facetKey) !== -1;\n      var isFacetConjunctive = state.facets.indexOf(facetKey) !== -1;\n      var position;\n\n      if (isFacetDisjunctive) {\n        position = disjunctiveFacetsIndices[facetKey];\n        self.disjunctiveFacets[position] = {\n          name: facetKey,\n          data: facetValueObject,\n          exhaustive: mainSubResponse.exhaustiveFacetsCount\n        };\n        assignFacetStats(self.disjunctiveFacets[position], mainSubResponse.facets_stats, facetKey);\n      }\n      if (isFacetConjunctive) {\n        position = facetsIndices[facetKey];\n        self.facets[position] = {\n          name: facetKey,\n          data: facetValueObject,\n          exhaustive: mainSubResponse.exhaustiveFacetsCount\n        };\n        assignFacetStats(self.facets[position], mainSubResponse.facets_stats, facetKey);\n      }\n    }\n  });\n\n  // Make sure we do not keep holes within the hierarchical facets\n  this.hierarchicalFacets = compact(this.hierarchicalFacets);\n\n  // aggregate the refined disjunctive facets\n  disjunctiveFacets.forEach(function(disjunctiveFacet) {\n    var result = results[nextDisjunctiveResult];\n    var facets = result && result.facets ? result.facets : {};\n    var hierarchicalFacet = state.getHierarchicalFacetByName(disjunctiveFacet);\n\n    // There should be only item in facets.\n    Object.keys(facets).forEach(function(dfacet) {\n      var facetResults = facets[dfacet];\n\n      var position;\n\n      if (hierarchicalFacet) {\n        position = findIndex(state.hierarchicalFacets, function(f) {\n          return f.name === hierarchicalFacet.name;\n        });\n        var attributeIndex = findIndex(self.hierarchicalFacets[position], function(f) {\n          return f.attribute === dfacet;\n        });\n\n        // previous refinements and no results so not able to find it\n        if (attributeIndex === -1) {\n          return;\n        }\n\n        self.hierarchicalFacets[position][attributeIndex].data = merge(\n          {},\n          self.hierarchicalFacets[position][attributeIndex].data,\n          facetResults\n        );\n      } else {\n        position = disjunctiveFacetsIndices[dfacet];\n\n        var dataFromMainRequest = mainSubResponse.facets && mainSubResponse.facets[dfacet] || {};\n\n        self.disjunctiveFacets[position] = {\n          name: dfacet,\n          data: defaultsPure({}, facetResults, dataFromMainRequest),\n          exhaustive: result.exhaustiveFacetsCount\n        };\n        assignFacetStats(self.disjunctiveFacets[position], result.facets_stats, dfacet);\n\n        if (state.disjunctiveFacetsRefinements[dfacet]) {\n          state.disjunctiveFacetsRefinements[dfacet].forEach(function(refinementValue) {\n            // add the disjunctive refinements if it is no more retrieved\n            if (!self.disjunctiveFacets[position].data[refinementValue] &&\n              state.disjunctiveFacetsRefinements[dfacet].indexOf(unescapeFacetValue(refinementValue)) > -1) {\n              self.disjunctiveFacets[position].data[refinementValue] = 0;\n            }\n          });\n        }\n      }\n    });\n    nextDisjunctiveResult++;\n  });\n\n  // if we have some parent level values for hierarchical facets, merge them\n  state.getRefinedHierarchicalFacets().forEach(function(refinedFacet) {\n    var hierarchicalFacet = state.getHierarchicalFacetByName(refinedFacet);\n    var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n    var currentRefinement = state.getHierarchicalRefinement(refinedFacet);\n    // if we are already at a root refinement (or no refinement at all), there is no\n    // root level values request\n    if (currentRefinement.length === 0 || currentRefinement[0].split(separator).length < 2) {\n      return;\n    }\n\n    results.slice(nextDisjunctiveResult).forEach(function(result) {\n      var facets = result && result.facets\n        ? result.facets\n        : {};\n\n      Object.keys(facets).forEach(function(dfacet) {\n        var facetResults = facets[dfacet];\n        var position = findIndex(state.hierarchicalFacets, function(f) {\n          return f.name === hierarchicalFacet.name;\n        });\n        var attributeIndex = findIndex(self.hierarchicalFacets[position], function(f) {\n          return f.attribute === dfacet;\n        });\n\n        // previous refinements and no results so not able to find it\n        if (attributeIndex === -1) {\n          return;\n        }\n\n        // when we always get root levels, if the hits refinement is `beers > IPA` (count: 5),\n        // then the disjunctive values will be `beers` (count: 100),\n        // but we do not want to display\n        //   | beers (100)\n        //     > IPA (5)\n        // We want\n        //   | beers (5)\n        //     > IPA (5)\n        var defaultData = {};\n\n        if (currentRefinement.length > 0) {\n          var root = currentRefinement[0].split(separator)[0];\n          defaultData[root] = self.hierarchicalFacets[position][attributeIndex].data[root];\n        }\n\n        self.hierarchicalFacets[position][attributeIndex].data = defaultsPure(\n          defaultData,\n          facetResults,\n          self.hierarchicalFacets[position][attributeIndex].data\n        );\n      });\n\n      nextDisjunctiveResult++;\n    });\n  });\n\n  // add the excludes\n  Object.keys(state.facetsExcludes).forEach(function(facetName) {\n    var excludes = state.facetsExcludes[facetName];\n    var position = facetsIndices[facetName];\n\n    self.facets[position] = {\n      name: facetName,\n      data: mainSubResponse.facets[facetName],\n      exhaustive: mainSubResponse.exhaustiveFacetsCount\n    };\n    excludes.forEach(function(facetValue) {\n      self.facets[position] = self.facets[position] || {name: facetName};\n      self.facets[position].data = self.facets[position].data || {};\n      self.facets[position].data[facetValue] = 0;\n    });\n  });\n\n  /**\n   * @type {Array}\n   */\n  this.hierarchicalFacets = this.hierarchicalFacets.map(generateHierarchicalTree(state));\n\n  /**\n   * @type {Array}\n   */\n  this.facets = compact(this.facets);\n  /**\n   * @type {Array}\n   */\n  this.disjunctiveFacets = compact(this.disjunctiveFacets);\n\n  this._state = state;\n}\n\n/**\n * Get a facet object with its name\n * @deprecated\n * @param {string} name name of the faceted attribute\n * @return {SearchResults.Facet} the facet object\n */\nSearchResults.prototype.getFacetByName = function(name) {\n  function predicate(facet) {\n    return facet.name === name;\n  }\n\n  return find(this.facets, predicate) ||\n    find(this.disjunctiveFacets, predicate) ||\n    find(this.hierarchicalFacets, predicate);\n};\n\n/**\n * Get the facet values of a specified attribute from a SearchResults object.\n * @private\n * @param {SearchResults} results the search results to search in\n * @param {string} attribute name of the faceted attribute to search for\n * @return {array|object} facet values. For the hierarchical facets it is an object.\n */\nfunction extractNormalizedFacetValues(results, attribute) {\n  function predicate(facet) {\n    return facet.name === attribute;\n  }\n\n  if (results._state.isConjunctiveFacet(attribute)) {\n    var facet = find(results.facets, predicate);\n    if (!facet) return [];\n\n    return Object.keys(facet.data).map(function(name) {\n      var value = escapeFacetValue(name);\n      return {\n        name: name,\n        escapedValue: value,\n        count: facet.data[name],\n        isRefined: results._state.isFacetRefined(attribute, value),\n        isExcluded: results._state.isExcludeRefined(attribute, name)\n      };\n    });\n  } else if (results._state.isDisjunctiveFacet(attribute)) {\n    var disjunctiveFacet = find(results.disjunctiveFacets, predicate);\n    if (!disjunctiveFacet) return [];\n\n    return Object.keys(disjunctiveFacet.data).map(function(name) {\n      var value = escapeFacetValue(name);\n      return {\n        name: name,\n        escapedValue: value,\n        count: disjunctiveFacet.data[name],\n        isRefined: results._state.isDisjunctiveFacetRefined(attribute, value)\n      };\n    });\n  } else if (results._state.isHierarchicalFacet(attribute)) {\n    return find(results.hierarchicalFacets, predicate);\n  }\n}\n\n/**\n * Sort nodes of a hierarchical or disjunctive facet results\n * @private\n * @param {function} sortFn\n * @param {HierarchicalFacet|Array} node node upon which we want to apply the sort\n * @param {string[]} names attribute names\n * @param {number} [level=0] current index in the names array\n */\nfunction recSort(sortFn, node, names, level) {\n  level = level || 0;\n\n  if (Array.isArray(node)) {\n    return sortFn(node, names[level]);\n  }\n\n  if (!node.data || node.data.length === 0) {\n    return node;\n  }\n\n  var children = node.data.map(function(childNode) {\n    return recSort(sortFn, childNode, names, level + 1);\n  });\n  var sortedChildren = sortFn(children, names[level]);\n  var newNode = defaultsPure({data: sortedChildren}, node);\n  return newNode;\n}\n\nSearchResults.DEFAULT_SORT = ['isRefined:desc', 'count:desc', 'name:asc'];\n\nfunction vanillaSortFn(order, data) {\n  return data.sort(order);\n}\n\n/**\n * @typedef FacetOrdering\n * @type {Object}\n * @property {string[]} [order]\n * @property {'count' | 'alpha' | 'hidden'} [sortRemainingBy]\n */\n\n/**\n * Sorts facet arrays via their facet ordering\n * @param {Array} facetValues the values\n * @param {FacetOrdering} facetOrdering the ordering\n * @returns {Array}\n */\nfunction sortViaFacetOrdering(facetValues, facetOrdering) {\n  var orderedFacets = [];\n  var remainingFacets = [];\n\n  var order = facetOrdering.order || [];\n  /**\n   * an object with the keys being the values in order, the values their index:\n   * ['one', 'two'] -> { one: 0, two: 1 }\n   */\n  var reverseOrder = order.reduce(function(acc, name, i) {\n    acc[name] = i;\n    return acc;\n  }, {});\n\n  facetValues.forEach(function(item) {\n    // hierarchical facets get sorted using their raw name\n    var name = item.path || item.name;\n    if (reverseOrder[name] !== undefined) {\n      orderedFacets[reverseOrder[name]] = item;\n    } else {\n      remainingFacets.push(item);\n    }\n  });\n\n  orderedFacets = orderedFacets.filter(function(facet) {\n    return facet;\n  });\n\n  var sortRemainingBy = facetOrdering.sortRemainingBy;\n  var ordering;\n  if (sortRemainingBy === 'hidden') {\n    return orderedFacets;\n  } else if (sortRemainingBy === 'alpha') {\n    ordering = [['path', 'name'], ['asc', 'asc']];\n  } else {\n    ordering = [['count'], ['desc']];\n  }\n\n  return orderedFacets.concat(\n    orderBy(remainingFacets, ordering[0], ordering[1])\n  );\n}\n\n/**\n * @param {SearchResults} results the search results class\n * @param {string} attribute the attribute to retrieve ordering of\n * @returns {FacetOrdering=}\n */\nfunction getFacetOrdering(results, attribute) {\n  return (\n    results.renderingContent &&\n    results.renderingContent.facetOrdering &&\n    results.renderingContent.facetOrdering.values &&\n    results.renderingContent.facetOrdering.values[attribute]\n  );\n}\n\n/**\n * Get a the list of values for a given facet attribute. Those values are sorted\n * refinement first, descending count (bigger value on top), and name ascending\n * (alphabetical order). The sort formula can overridden using either string based\n * predicates or a function.\n *\n * This method will return all the values returned by the Algolia engine plus all\n * the values already refined. This means that it can happen that the\n * `maxValuesPerFacet` [configuration](https://www.algolia.com/doc/rest-api/search#param-maxValuesPerFacet)\n * might not be respected if you have facet values that are already refined.\n * @param {string} attribute attribute name\n * @param {object} opts configuration options.\n * @param {boolean} [opts.facetOrdering]\n * Force the use of facetOrdering from the result if a sortBy is present. If\n * sortBy isn't present, facetOrdering will be used automatically.\n * @param {Array.<string> | function} opts.sortBy\n * When using strings, it consists of\n * the name of the [FacetValue](#SearchResults.FacetValue) or the\n * [HierarchicalFacet](#SearchResults.HierarchicalFacet) attributes with the\n * order (`asc` or `desc`). For example to order the value by count, the\n * argument would be `['count:asc']`.\n *\n * If only the attribute name is specified, the ordering defaults to the one\n * specified in the default value for this attribute.\n *\n * When not specified, the order is\n * ascending.  This parameter can also be a function which takes two facet\n * values and should return a number, 0 if equal, 1 if the first argument is\n * bigger or -1 otherwise.\n *\n * The default value for this attribute `['isRefined:desc', 'count:desc', 'name:asc']`\n * @return {FacetValue[]|HierarchicalFacet|undefined} depending on the type of facet of\n * the attribute requested (hierarchical, disjunctive or conjunctive)\n * @example\n * helper.on('result', function(event){\n *   //get values ordered only by name ascending using the string predicate\n *   event.results.getFacetValues('city', {sortBy: ['name:asc']});\n *   //get values  ordered only by count ascending using a function\n *   event.results.getFacetValues('city', {\n *     // this is equivalent to ['count:asc']\n *     sortBy: function(a, b) {\n *       if (a.count === b.count) return 0;\n *       if (a.count > b.count)   return 1;\n *       if (b.count > a.count)   return -1;\n *     }\n *   });\n * });\n */\nSearchResults.prototype.getFacetValues = function(attribute, opts) {\n  var facetValues = extractNormalizedFacetValues(this, attribute);\n  if (!facetValues) {\n    return undefined;\n  }\n\n  var options = defaultsPure({}, opts, {\n    sortBy: SearchResults.DEFAULT_SORT,\n    // if no sortBy is given, attempt to sort based on facetOrdering\n    // if it is given, we still allow to sort via facet ordering first\n    facetOrdering: !(opts && opts.sortBy)\n  });\n\n  var results = this;\n  var attributes;\n  if (Array.isArray(facetValues)) {\n    attributes = [attribute];\n  } else {\n    var config = results._state.getHierarchicalFacetByName(facetValues.name);\n    attributes = config.attributes;\n  }\n\n  return recSort(function(data, facetName) {\n    if (options.facetOrdering) {\n      var facetOrdering = getFacetOrdering(results, facetName);\n      if (Boolean(facetOrdering)) {\n        return sortViaFacetOrdering(data, facetOrdering);\n      }\n    }\n\n    if (Array.isArray(options.sortBy)) {\n      var order = formatSort(options.sortBy, SearchResults.DEFAULT_SORT);\n      return orderBy(data, order[0], order[1]);\n    } else if (typeof options.sortBy === 'function') {\n      return vanillaSortFn(options.sortBy, data);\n    }\n    throw new Error(\n      'options.sortBy is optional but if defined it must be ' +\n        'either an array of string (predicates) or a sorting function'\n    );\n  }, facetValues, attributes);\n};\n\n/**\n * Returns the facet stats if attribute is defined and the facet contains some.\n * Otherwise returns undefined.\n * @param {string} attribute name of the faceted attribute\n * @return {object} The stats of the facet\n */\nSearchResults.prototype.getFacetStats = function(attribute) {\n  if (this._state.isConjunctiveFacet(attribute)) {\n    return getFacetStatsIfAvailable(this.facets, attribute);\n  } else if (this._state.isDisjunctiveFacet(attribute)) {\n    return getFacetStatsIfAvailable(this.disjunctiveFacets, attribute);\n  }\n\n  return undefined;\n};\n\n/**\n * @typedef {Object} FacetListItem\n * @property {string} name\n */\n\n/**\n * @param {FacetListItem[]} facetList (has more items, but enough for here)\n * @param {string} facetName\n */\nfunction getFacetStatsIfAvailable(facetList, facetName) {\n  var data = find(facetList, function(facet) {\n    return facet.name === facetName;\n  });\n  return data && data.stats;\n}\n\n/**\n * Returns all refinements for all filters + tags. It also provides\n * additional information: count and exhaustiveness for each filter.\n *\n * See the [refinement type](#Refinement) for an exhaustive view of the available\n * data.\n *\n * Note that for a numeric refinement, results are grouped per operator, this\n * means that it will return responses for operators which are empty.\n *\n * @return {Array.<Refinement>} all the refinements\n */\nSearchResults.prototype.getRefinements = function() {\n  var state = this._state;\n  var results = this;\n  var res = [];\n\n  Object.keys(state.facetsRefinements).forEach(function(attributeName) {\n    state.facetsRefinements[attributeName].forEach(function(name) {\n      res.push(getRefinement(state, 'facet', attributeName, name, results.facets));\n    });\n  });\n\n  Object.keys(state.facetsExcludes).forEach(function(attributeName) {\n    state.facetsExcludes[attributeName].forEach(function(name) {\n      res.push(getRefinement(state, 'exclude', attributeName, name, results.facets));\n    });\n  });\n\n  Object.keys(state.disjunctiveFacetsRefinements).forEach(function(attributeName) {\n    state.disjunctiveFacetsRefinements[attributeName].forEach(function(name) {\n      res.push(getRefinement(state, 'disjunctive', attributeName, name, results.disjunctiveFacets));\n    });\n  });\n\n  Object.keys(state.hierarchicalFacetsRefinements).forEach(function(attributeName) {\n    state.hierarchicalFacetsRefinements[attributeName].forEach(function(name) {\n      res.push(getHierarchicalRefinement(state, attributeName, name, results.hierarchicalFacets));\n    });\n  });\n\n\n  Object.keys(state.numericRefinements).forEach(function(attributeName) {\n    var operators = state.numericRefinements[attributeName];\n    Object.keys(operators).forEach(function(operator) {\n      operators[operator].forEach(function(value) {\n        res.push({\n          type: 'numeric',\n          attributeName: attributeName,\n          name: value,\n          numericValue: value,\n          operator: operator\n        });\n      });\n    });\n  });\n\n  state.tagRefinements.forEach(function(name) {\n    res.push({type: 'tag', attributeName: '_tags', name: name});\n  });\n\n  return res;\n};\n\n/**\n * @typedef {Object} Facet\n * @property {string} name\n * @property {Object} data\n * @property {boolean} exhaustive\n */\n\n/**\n * @param {*} state\n * @param {*} type\n * @param {string} attributeName\n * @param {*} name\n * @param {Facet[]} resultsFacets\n */\nfunction getRefinement(state, type, attributeName, name, resultsFacets) {\n  var facet = find(resultsFacets, function(f) {\n    return f.name === attributeName;\n  });\n  var count = facet && facet.data && facet.data[name] ? facet.data[name] : 0;\n  var exhaustive = (facet && facet.exhaustive) || false;\n\n  return {\n    type: type,\n    attributeName: attributeName,\n    name: name,\n    count: count,\n    exhaustive: exhaustive\n  };\n}\n\n/**\n * @param {*} state\n * @param {string} attributeName\n * @param {*} name\n * @param {Facet[]} resultsFacets\n */\nfunction getHierarchicalRefinement(state, attributeName, name, resultsFacets) {\n  var facetDeclaration = state.getHierarchicalFacetByName(attributeName);\n  var separator = state._getHierarchicalFacetSeparator(facetDeclaration);\n  var split = name.split(separator);\n  var rootFacet = find(resultsFacets, function(facet) {\n    return facet.name === attributeName;\n  });\n\n  var facet = split.reduce(function(intermediateFacet, part) {\n    var newFacet =\n      intermediateFacet && find(intermediateFacet.data, function(f) {\n        return f.name === part;\n      });\n    return newFacet !== undefined ? newFacet : intermediateFacet;\n  }, rootFacet);\n\n  var count = (facet && facet.count) || 0;\n  var exhaustive = (facet && facet.exhaustive) || false;\n  var path = (facet && facet.path) || '';\n\n  return {\n    type: 'hierarchical',\n    attributeName: attributeName,\n    name: path,\n    count: count,\n    exhaustive: exhaustive\n  };\n}\n\nmodule.exports = SearchResults;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\n// EventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","'use strict';\n\nfunction inherits(ctor, superCtor) {\n  ctor.prototype = Object.create(superCtor.prototype, {\n    constructor: {\n      value: ctor,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n}\n\nmodule.exports = inherits;\n","'use strict';\n\nvar EventEmitter = require('@algolia/events');\nvar inherits = require('../functions/inherits');\n\n/**\n * A DerivedHelper is a way to create sub requests to\n * Algolia from a main helper.\n * @class\n * @classdesc The DerivedHelper provides an event based interface for search callbacks:\n *  - search: when a search is triggered using the `search()` method.\n *  - result: when the response is retrieved from Algolia and is processed.\n *    This event contains a {@link SearchResults} object and the\n *    {@link SearchParameters} corresponding to this answer.\n */\nfunction DerivedHelper(mainHelper, fn) {\n  this.main = mainHelper;\n  this.fn = fn;\n  this.lastResults = null;\n}\n\ninherits(DerivedHelper, EventEmitter);\n\n/**\n * Detach this helper from the main helper\n * @return {undefined}\n * @throws Error if the derived helper is already detached\n */\nDerivedHelper.prototype.detach = function() {\n  this.removeAllListeners();\n  this.main.detachDerivedHelper(this);\n};\n\nDerivedHelper.prototype.getModifiedState = function(parameters) {\n  return this.fn(parameters);\n};\n\nmodule.exports = DerivedHelper;\n","'use strict';\n\nvar merge = require('./functions/merge');\n\nfunction sortObject(obj) {\n  return Object.keys(obj)\n    .sort(function(a, b) {\n      return a.localeCompare(b);\n    })\n    .reduce(function(acc, curr) {\n      acc[curr] = obj[curr];\n      return acc;\n    }, {});\n}\n\nvar requestBuilder = {\n  /**\n   * Get all the queries to send to the client, those queries can used directly\n   * with the Algolia client.\n   * @private\n   * @return {object[]} The queries\n   */\n  _getQueries: function getQueries(index, state) {\n    var queries = [];\n\n    // One query for the hits\n    queries.push({\n      indexName: index,\n      params: requestBuilder._getHitsSearchParams(state)\n    });\n\n    // One for each disjunctive facets\n    state.getRefinedDisjunctiveFacets().forEach(function(refinedFacet) {\n      queries.push({\n        indexName: index,\n        params: requestBuilder._getDisjunctiveFacetSearchParams(state, refinedFacet)\n      });\n    });\n\n    // More to get the parent levels of the hierarchical facets when refined\n    state.getRefinedHierarchicalFacets().forEach(function(refinedFacet) {\n      var hierarchicalFacet = state.getHierarchicalFacetByName(refinedFacet);\n      var currentRefinement = state.getHierarchicalRefinement(refinedFacet);\n      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n      // If we are deeper than level 0 (starting from `beer > IPA`)\n      // we want to get all parent values\n      if (currentRefinement.length > 0 && currentRefinement[0].split(separator).length > 1) {\n        // We generate a map of the filters we will use for our facet values queries\n        var filtersMap = currentRefinement[0].split(separator).slice(0, -1).reduce(\n          function createFiltersMap(map, segment, level) {\n            return map.concat({\n              attribute: hierarchicalFacet.attributes[level],\n              value: level === 0\n                ? segment\n                : [map[map.length - 1].value, segment].join(separator)\n            });\n          }\n        , []);\n\n        filtersMap.forEach(function(filter, level) {\n          var params = requestBuilder._getDisjunctiveFacetSearchParams(\n            state,\n            filter.attribute,\n            level === 0\n          );\n\n          // Keep facet filters unrelated to current hierarchical attributes\n          function hasHierarchicalFacetFilter(value) {\n            return hierarchicalFacet.attributes.some(function(attribute) {\n              return attribute === value.split(':')[0];\n            });\n          }\n\n          var filteredFacetFilters = (params.facetFilters || []).reduce(function(acc, facetFilter) {\n            if (Array.isArray(facetFilter)) {\n              var filtered = facetFilter.filter(function(filterValue) {\n                return !hasHierarchicalFacetFilter(filterValue);\n              });\n\n              if (filtered.length > 0) {\n                acc.push(filtered);\n              }\n            }\n\n            if (typeof facetFilter === 'string' && !hasHierarchicalFacetFilter(facetFilter)) {\n              acc.push(facetFilter);\n            }\n\n            return acc;\n          }, []);\n\n          var parent = filtersMap[level - 1];\n          if (level > 0) {\n            params.facetFilters = filteredFacetFilters.concat(parent.attribute + ':' + parent.value);\n          } else {\n            params.facetFilters = filteredFacetFilters.length > 0 ? filteredFacetFilters : undefined;\n          }\n\n          queries.push({indexName: index, params: params});\n        });\n      }\n    });\n\n    return queries;\n  },\n\n  /**\n   * Build search parameters used to fetch hits\n   * @private\n   * @return {object.<string, any>}\n   */\n  _getHitsSearchParams: function(state) {\n    var facets = state.facets\n      .concat(state.disjunctiveFacets)\n      .concat(requestBuilder._getHitsHierarchicalFacetsAttributes(state));\n\n\n    var facetFilters = requestBuilder._getFacetFilters(state);\n    var numericFilters = requestBuilder._getNumericFilters(state);\n    var tagFilters = requestBuilder._getTagFilters(state);\n    var additionalParams = {\n      facets: facets.indexOf('*') > -1 ? ['*'] : facets,\n      tagFilters: tagFilters\n    };\n\n    if (facetFilters.length > 0) {\n      additionalParams.facetFilters = facetFilters;\n    }\n\n    if (numericFilters.length > 0) {\n      additionalParams.numericFilters = numericFilters;\n    }\n\n    return sortObject(merge({}, state.getQueryParams(), additionalParams));\n  },\n\n  /**\n   * Build search parameters used to fetch a disjunctive facet\n   * @private\n   * @param  {string} facet the associated facet name\n   * @param  {boolean} hierarchicalRootLevel ?? FIXME\n   * @return {object}\n   */\n  _getDisjunctiveFacetSearchParams: function(state, facet, hierarchicalRootLevel) {\n    var facetFilters = requestBuilder._getFacetFilters(state, facet, hierarchicalRootLevel);\n    var numericFilters = requestBuilder._getNumericFilters(state, facet);\n    var tagFilters = requestBuilder._getTagFilters(state);\n    var additionalParams = {\n      hitsPerPage: 0,\n      page: 0,\n      analytics: false,\n      clickAnalytics: false\n    };\n\n    if (tagFilters.length > 0) {\n      additionalParams.tagFilters = tagFilters;\n    }\n\n    var hierarchicalFacet = state.getHierarchicalFacetByName(facet);\n\n    if (hierarchicalFacet) {\n      additionalParams.facets = requestBuilder._getDisjunctiveHierarchicalFacetAttribute(\n        state,\n        hierarchicalFacet,\n        hierarchicalRootLevel\n      );\n    } else {\n      additionalParams.facets = facet;\n    }\n\n    if (numericFilters.length > 0) {\n      additionalParams.numericFilters = numericFilters;\n    }\n\n    if (facetFilters.length > 0) {\n      additionalParams.facetFilters = facetFilters;\n    }\n\n    return sortObject(merge({}, state.getQueryParams(), additionalParams));\n  },\n\n  /**\n   * Return the numeric filters in an algolia request fashion\n   * @private\n   * @param {string} [facetName] the name of the attribute for which the filters should be excluded\n   * @return {string[]} the numeric filters in the algolia format\n   */\n  _getNumericFilters: function(state, facetName) {\n    if (state.numericFilters) {\n      return state.numericFilters;\n    }\n\n    var numericFilters = [];\n\n    Object.keys(state.numericRefinements).forEach(function(attribute) {\n      var operators = state.numericRefinements[attribute] || {};\n      Object.keys(operators).forEach(function(operator) {\n        var values = operators[operator] || [];\n        if (facetName !== attribute) {\n          values.forEach(function(value) {\n            if (Array.isArray(value)) {\n              var vs = value.map(function(v) {\n                return attribute + operator + v;\n              });\n              numericFilters.push(vs);\n            } else {\n              numericFilters.push(attribute + operator + value);\n            }\n          });\n        }\n      });\n    });\n\n    return numericFilters;\n  },\n\n  /**\n   * Return the tags filters depending\n   * @private\n   * @return {string}\n   */\n  _getTagFilters: function(state) {\n    if (state.tagFilters) {\n      return state.tagFilters;\n    }\n\n    return state.tagRefinements.join(',');\n  },\n\n\n  /**\n   * Build facetFilters parameter based on current refinements. The array returned\n   * contains strings representing the facet filters in the algolia format.\n   * @private\n   * @param  {string} [facet] if set, the current disjunctive facet\n   * @return {array.<string>}\n   */\n  _getFacetFilters: function(state, facet, hierarchicalRootLevel) {\n    var facetFilters = [];\n\n    var facetsRefinements = state.facetsRefinements || {};\n    Object.keys(facetsRefinements).forEach(function(facetName) {\n      var facetValues = facetsRefinements[facetName] || [];\n      facetValues.forEach(function(facetValue) {\n        facetFilters.push(facetName + ':' + facetValue);\n      });\n    });\n\n    var facetsExcludes = state.facetsExcludes || {};\n    Object.keys(facetsExcludes).forEach(function(facetName) {\n      var facetValues = facetsExcludes[facetName] || [];\n      facetValues.forEach(function(facetValue) {\n        facetFilters.push(facetName + ':-' + facetValue);\n      });\n    });\n\n    var disjunctiveFacetsRefinements = state.disjunctiveFacetsRefinements || {};\n    Object.keys(disjunctiveFacetsRefinements).forEach(function(facetName) {\n      var facetValues = disjunctiveFacetsRefinements[facetName] || [];\n      if (facetName === facet || !facetValues || facetValues.length === 0) {\n        return;\n      }\n      var orFilters = [];\n\n      facetValues.forEach(function(facetValue) {\n        orFilters.push(facetName + ':' + facetValue);\n      });\n\n      facetFilters.push(orFilters);\n    });\n\n    var hierarchicalFacetsRefinements = state.hierarchicalFacetsRefinements || {};\n    Object.keys(hierarchicalFacetsRefinements).forEach(function(facetName) {\n      var facetValues = hierarchicalFacetsRefinements[facetName] || [];\n      var facetValue = facetValues[0];\n\n      if (facetValue === undefined) {\n        return;\n      }\n\n      var hierarchicalFacet = state.getHierarchicalFacetByName(facetName);\n      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n      var rootPath = state._getHierarchicalRootPath(hierarchicalFacet);\n      var attributeToRefine;\n      var attributesIndex;\n\n      // we ask for parent facet values only when the `facet` is the current hierarchical facet\n      if (facet === facetName) {\n        // if we are at the root level already, no need to ask for facet values, we get them from\n        // the hits query\n        if (facetValue.indexOf(separator) === -1 || (!rootPath && hierarchicalRootLevel === true) ||\n          (rootPath && rootPath.split(separator).length === facetValue.split(separator).length)) {\n          return;\n        }\n\n        if (!rootPath) {\n          attributesIndex = facetValue.split(separator).length - 2;\n          facetValue = facetValue.slice(0, facetValue.lastIndexOf(separator));\n        } else {\n          attributesIndex = rootPath.split(separator).length - 1;\n          facetValue = rootPath;\n        }\n\n        attributeToRefine = hierarchicalFacet.attributes[attributesIndex];\n      } else {\n        attributesIndex = facetValue.split(separator).length - 1;\n\n        attributeToRefine = hierarchicalFacet.attributes[attributesIndex];\n      }\n\n      if (attributeToRefine) {\n        facetFilters.push([attributeToRefine + ':' + facetValue]);\n      }\n    });\n\n    return facetFilters;\n  },\n\n  _getHitsHierarchicalFacetsAttributes: function(state) {\n    var out = [];\n\n    return state.hierarchicalFacets.reduce(\n      // ask for as much levels as there's hierarchical refinements\n      function getHitsAttributesForHierarchicalFacet(allAttributes, hierarchicalFacet) {\n        var hierarchicalRefinement = state.getHierarchicalRefinement(hierarchicalFacet.name)[0];\n\n        // if no refinement, ask for root level\n        if (!hierarchicalRefinement) {\n          allAttributes.push(hierarchicalFacet.attributes[0]);\n          return allAttributes;\n        }\n\n        var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n        var level = hierarchicalRefinement.split(separator).length;\n        var newAttributes = hierarchicalFacet.attributes.slice(0, level + 1);\n\n        return allAttributes.concat(newAttributes);\n      }, out);\n  },\n\n  _getDisjunctiveHierarchicalFacetAttribute: function(state, hierarchicalFacet, rootLevel) {\n    var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n    if (rootLevel === true) {\n      var rootPath = state._getHierarchicalRootPath(hierarchicalFacet);\n      var attributeIndex = 0;\n\n      if (rootPath) {\n        attributeIndex = rootPath.split(separator).length;\n      }\n      return [hierarchicalFacet.attributes[attributeIndex]];\n    }\n\n    var hierarchicalRefinement = state.getHierarchicalRefinement(hierarchicalFacet.name)[0] || '';\n    // if refinement is 'beers > IPA > Flying dog',\n    // then we want `facets: ['beers > IPA']` as disjunctive facet (parent level values)\n\n    var parentLevel = hierarchicalRefinement.split(separator).length - 1;\n    return hierarchicalFacet.attributes.slice(0, parentLevel + 1);\n  },\n\n  getSearchForFacetQuery: function(facetName, query, maxFacetHits, state) {\n    var stateForSearchForFacetValues = state.isDisjunctiveFacet(facetName) ?\n      state.clearRefinements(facetName) :\n      state;\n    var searchForFacetSearchParameters = {\n      facetQuery: query,\n      facetName: facetName\n    };\n    if (typeof maxFacetHits === 'number') {\n      searchForFacetSearchParameters.maxFacetHits = maxFacetHits;\n    }\n    return sortObject(merge(\n      {},\n      requestBuilder._getHitsSearchParams(stateForSearchForFacetValues),\n      searchForFacetSearchParameters\n    ));\n  }\n};\n\nmodule.exports = requestBuilder;\n","'use strict';\n\nmodule.exports = '3.11.1';\n","'use strict';\n\nvar SearchParameters = require('./SearchParameters');\nvar SearchResults = require('./SearchResults');\nvar DerivedHelper = require('./DerivedHelper');\nvar requestBuilder = require('./requestBuilder');\n\nvar EventEmitter = require('@algolia/events');\nvar inherits = require('./functions/inherits');\nvar objectHasKeys = require('./functions/objectHasKeys');\nvar omit = require('./functions/omit');\nvar merge = require('./functions/merge');\n\nvar version = require('./version');\nvar escapeFacetValue = require('./functions/escapeFacetValue').escapeFacetValue;\n\n/**\n * Event triggered when a parameter is set or updated\n * @event AlgoliaSearchHelper#event:change\n * @property {object} event\n * @property {SearchParameters} event.state the current parameters with the latest changes applied\n * @property {SearchResults} event.results the previous results received from Algolia. `null` before the first request\n * @example\n * helper.on('change', function(event) {\n *   console.log('The parameters have changed');\n * });\n */\n\n/**\n * Event triggered when a main search is sent to Algolia\n * @event AlgoliaSearchHelper#event:search\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search\n * @property {SearchResults} event.results the results from the previous search. `null` if it is the first search.\n * @example\n * helper.on('search', function(event) {\n *   console.log('Search sent');\n * });\n */\n\n/**\n * Event triggered when a search using `searchForFacetValues` is sent to Algolia\n * @event AlgoliaSearchHelper#event:searchForFacetValues\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search it is the first search.\n * @property {string} event.facet the facet searched into\n * @property {string} event.query the query used to search in the facets\n * @example\n * helper.on('searchForFacetValues', function(event) {\n *   console.log('searchForFacetValues sent');\n * });\n */\n\n/**\n * Event triggered when a search using `searchOnce` is sent to Algolia\n * @event AlgoliaSearchHelper#event:searchOnce\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search it is the first search.\n * @example\n * helper.on('searchOnce', function(event) {\n *   console.log('searchOnce sent');\n * });\n */\n\n/**\n * Event triggered when the results are retrieved from Algolia\n * @event AlgoliaSearchHelper#event:result\n * @property {object} event\n * @property {SearchResults} event.results the results received from Algolia\n * @property {SearchParameters} event.state the parameters used to query Algolia. Those might be different from the one in the helper instance (for example if the network is unreliable).\n * @example\n * helper.on('result', function(event) {\n *   console.log('Search results received');\n * });\n */\n\n/**\n * Event triggered when Algolia sends back an error. For example, if an unknown parameter is\n * used, the error can be caught using this event.\n * @event AlgoliaSearchHelper#event:error\n * @property {object} event\n * @property {Error} event.error the error returned by the Algolia.\n * @example\n * helper.on('error', function(event) {\n *   console.log('Houston we got a problem.');\n * });\n */\n\n/**\n * Event triggered when the queue of queries have been depleted (with any result or outdated queries)\n * @event AlgoliaSearchHelper#event:searchQueueEmpty\n * @example\n * helper.on('searchQueueEmpty', function() {\n *   console.log('No more search pending');\n *   // This is received before the result event if we're not expecting new results\n * });\n *\n * helper.search();\n */\n\n/**\n * Initialize a new AlgoliaSearchHelper\n * @class\n * @classdesc The AlgoliaSearchHelper is a class that ease the management of the\n * search. It provides an event based interface for search callbacks:\n *  - change: when the internal search state is changed.\n *    This event contains a {@link SearchParameters} object and the\n *    {@link SearchResults} of the last result if any.\n *  - search: when a search is triggered using the `search()` method.\n *  - result: when the response is retrieved from Algolia and is processed.\n *    This event contains a {@link SearchResults} object and the\n *    {@link SearchParameters} corresponding to this answer.\n *  - error: when the response is an error. This event contains the error returned by the server.\n * @param  {AlgoliaSearch} client an AlgoliaSearch client\n * @param  {string} index the index name to query\n * @param  {SearchParameters | object} options an object defining the initial\n * config of the search. It doesn't have to be a {SearchParameters},\n * just an object containing the properties you need from it.\n */\nfunction AlgoliaSearchHelper(client, index, options) {\n  if (typeof client.addAlgoliaAgent === 'function') {\n    client.addAlgoliaAgent('JS Helper (' + version + ')');\n  }\n\n  this.setClient(client);\n  var opts = options || {};\n  opts.index = index;\n  this.state = SearchParameters.make(opts);\n  this.lastResults = null;\n  this._queryId = 0;\n  this._lastQueryIdReceived = -1;\n  this.derivedHelpers = [];\n  this._currentNbQueries = 0;\n}\n\ninherits(AlgoliaSearchHelper, EventEmitter);\n\n/**\n * Start the search with the parameters set in the state. When the\n * method is called, it triggers a `search` event. The results will\n * be available through the `result` event. If an error occurs, an\n * `error` will be fired instead.\n * @return {AlgoliaSearchHelper}\n * @fires search\n * @fires result\n * @fires error\n * @chainable\n */\nAlgoliaSearchHelper.prototype.search = function() {\n  this._search({onlyWithDerivedHelpers: false});\n  return this;\n};\n\nAlgoliaSearchHelper.prototype.searchOnlyWithDerivedHelpers = function() {\n  this._search({onlyWithDerivedHelpers: true});\n  return this;\n};\n\n/**\n * Gets the search query parameters that would be sent to the Algolia Client\n * for the hits\n * @return {object} Query Parameters\n */\nAlgoliaSearchHelper.prototype.getQuery = function() {\n  var state = this.state;\n  return requestBuilder._getHitsSearchParams(state);\n};\n\n/**\n * Start a search using a modified version of the current state. This method does\n * not trigger the helper lifecycle and does not modify the state kept internally\n * by the helper. This second aspect means that the next search call will be the\n * same as a search call before calling searchOnce.\n * @param {object} options can contain all the parameters that can be set to SearchParameters\n * plus the index\n * @param {function} [callback] optional callback executed when the response from the\n * server is back.\n * @return {promise|undefined} if a callback is passed the method returns undefined\n * otherwise it returns a promise containing an object with two keys :\n *  - content with a SearchResults\n *  - state with the state used for the query as a SearchParameters\n * @example\n * // Changing the number of records returned per page to 1\n * // This example uses the callback API\n * var state = helper.searchOnce({hitsPerPage: 1},\n *   function(error, content, state) {\n *     // if an error occurred it will be passed in error, otherwise its value is null\n *     // content contains the results formatted as a SearchResults\n *     // state is the instance of SearchParameters used for this search\n *   });\n * @example\n * // Changing the number of records returned per page to 1\n * // This example uses the promise API\n * var state1 = helper.searchOnce({hitsPerPage: 1})\n *                 .then(promiseHandler);\n *\n * function promiseHandler(res) {\n *   // res contains\n *   // {\n *   //   content : SearchResults\n *   //   state   : SearchParameters (the one used for this specific search)\n *   // }\n * }\n */\nAlgoliaSearchHelper.prototype.searchOnce = function(options, cb) {\n  var tempState = !options ? this.state : this.state.setQueryParameters(options);\n  var queries = requestBuilder._getQueries(tempState.index, tempState);\n  var self = this;\n\n  this._currentNbQueries++;\n\n  this.emit('searchOnce', {\n    state: tempState\n  });\n\n  if (cb) {\n    this.client\n      .search(queries)\n      .then(function(content) {\n        self._currentNbQueries--;\n        if (self._currentNbQueries === 0) {\n          self.emit('searchQueueEmpty');\n        }\n\n        cb(null, new SearchResults(tempState, content.results), tempState);\n      })\n      .catch(function(err) {\n        self._currentNbQueries--;\n        if (self._currentNbQueries === 0) {\n          self.emit('searchQueueEmpty');\n        }\n\n        cb(err, null, tempState);\n      });\n\n    return undefined;\n  }\n\n  return this.client.search(queries).then(function(content) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    return {\n      content: new SearchResults(tempState, content.results),\n      state: tempState,\n      _originalResponse: content\n    };\n  }, function(e) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    throw e;\n  });\n};\n\n /**\n * Start the search for answers with the parameters set in the state.\n * This method returns a promise.\n * @param {Object} options - the options for answers API call\n * @param {string[]} options.attributesForPrediction - Attributes to use for predictions. If empty, `searchableAttributes` is used instead.\n * @param {string[]} options.queryLanguages - The languages in the query. Currently only supports ['en'].\n * @param {number} options.nbHits - Maximum number of answers to retrieve from the Answers Engine. Cannot be greater than 1000.\n *\n * @return {promise} the answer results\n */\nAlgoliaSearchHelper.prototype.findAnswers = function(options) {\n  var state = this.state;\n  var derivedHelper = this.derivedHelpers[0];\n  if (!derivedHelper) {\n    return Promise.resolve([]);\n  }\n  var derivedState = derivedHelper.getModifiedState(state);\n  var data = merge(\n    {\n      attributesForPrediction: options.attributesForPrediction,\n      nbHits: options.nbHits\n    },\n    {\n      params: omit(requestBuilder._getHitsSearchParams(derivedState), [\n        'attributesToSnippet',\n        'hitsPerPage',\n        'restrictSearchableAttributes',\n        'snippetEllipsisText' // FIXME remove this line once the engine is fixed.\n      ])\n    }\n  );\n\n  var errorMessage = 'search for answers was called, but this client does not have a function client.initIndex(index).findAnswers';\n  if (typeof this.client.initIndex !== 'function') {\n    throw new Error(errorMessage);\n  }\n  var index = this.client.initIndex(derivedState.index);\n  if (typeof index.findAnswers !== 'function') {\n    throw new Error(errorMessage);\n  }\n  return index.findAnswers(derivedState.query, options.queryLanguages, data);\n};\n\n/**\n * Structure of each result when using\n * [`searchForFacetValues()`](reference.html#AlgoliaSearchHelper#searchForFacetValues)\n * @typedef FacetSearchHit\n * @type {object}\n * @property {string} value the facet value\n * @property {string} highlighted the facet value highlighted with the query string\n * @property {number} count number of occurrence of this facet value\n * @property {boolean} isRefined true if the value is already refined\n */\n\n/**\n * Structure of the data resolved by the\n * [`searchForFacetValues()`](reference.html#AlgoliaSearchHelper#searchForFacetValues)\n * promise.\n * @typedef FacetSearchResult\n * @type {object}\n * @property {FacetSearchHit} facetHits the results for this search for facet values\n * @property {number} processingTimeMS time taken by the query inside the engine\n */\n\n/**\n * Search for facet values based on an query and the name of a faceted attribute. This\n * triggers a search and will return a promise. On top of using the query, it also sends\n * the parameters from the state so that the search is narrowed down to only the possible values.\n *\n * See the description of [FacetSearchResult](reference.html#FacetSearchResult)\n * @param {string} facet the name of the faceted attribute\n * @param {string} query the string query for the search\n * @param {number} [maxFacetHits] the maximum number values returned. Should be > 0 and <= 100\n * @param {object} [userState] the set of custom parameters to use on top of the current state. Setting a property to `undefined` removes\n * it in the generated query.\n * @return {promise.<FacetSearchResult>} the results of the search\n */\nAlgoliaSearchHelper.prototype.searchForFacetValues = function(facet, query, maxFacetHits, userState) {\n  var clientHasSFFV = typeof this.client.searchForFacetValues === 'function';\n  var clientHasInitIndex = typeof this.client.initIndex === 'function';\n  if (\n    !clientHasSFFV &&\n    !clientHasInitIndex &&\n    typeof this.client.search !== 'function'\n  ) {\n    throw new Error(\n      'search for facet values (searchable) was called, but this client does not have a function client.searchForFacetValues or client.initIndex(index).searchForFacetValues'\n    );\n  }\n\n  var state = this.state.setQueryParameters(userState || {});\n  var isDisjunctive = state.isDisjunctiveFacet(facet);\n  var algoliaQuery = requestBuilder.getSearchForFacetQuery(facet, query, maxFacetHits, state);\n\n  this._currentNbQueries++;\n  var self = this;\n  var searchForFacetValuesPromise;\n  // newer algoliasearch ^3.27.1 - ~4.0.0\n  if (clientHasSFFV) {\n    searchForFacetValuesPromise = this.client.searchForFacetValues([\n      {indexName: state.index, params: algoliaQuery}\n    ]);\n    // algoliasearch < 3.27.1\n  } else if (clientHasInitIndex) {\n    searchForFacetValuesPromise = this.client\n      .initIndex(state.index)\n      .searchForFacetValues(algoliaQuery);\n    // algoliasearch ~5.0.0\n  } else {\n    // @MAJOR only use client.search\n    delete algoliaQuery.facetName;\n    searchForFacetValuesPromise = this.client\n      .search([\n        {\n          type: 'facet',\n          facet: facet,\n          indexName: state.index,\n          params: algoliaQuery\n        }\n      ])\n      .then(function processResponse(response) {\n        return response.results[0];\n      });\n  }\n\n  this.emit('searchForFacetValues', {\n    state: state,\n    facet: facet,\n    query: query\n  });\n\n  return searchForFacetValuesPromise.then(function addIsRefined(content) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n\n    content = Array.isArray(content) ? content[0] : content;\n\n    content.facetHits.forEach(function(f) {\n      f.escapedValue = escapeFacetValue(f.value);\n      f.isRefined = isDisjunctive\n        ? state.isDisjunctiveFacetRefined(facet, f.escapedValue)\n        : state.isFacetRefined(facet, f.escapedValue);\n    });\n\n    return content;\n  }, function(e) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    throw e;\n  });\n};\n\n/**\n * Sets the text query used for the search.\n *\n * This method resets the current page to 0.\n * @param  {string} q the user query\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setQuery = function(q) {\n  this._change({\n    state: this.state.resetPage().setQuery(q),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Remove all the types of refinements except tags. A string can be provided to remove\n * only the refinements of a specific attribute. For more advanced use case, you can\n * provide a function instead. This function should follow the\n * [clearCallback definition](#SearchParameters.clearCallback).\n *\n * This method resets the current page to 0.\n * @param {string} [name] optional name of the facet / attribute on which we want to remove all refinements\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n * @example\n * // Removing all the refinements\n * helper.clearRefinements().search();\n * @example\n * // Removing all the filters on a the category attribute.\n * helper.clearRefinements('category').search();\n * @example\n * // Removing only the exclude filters on the category facet.\n * helper.clearRefinements(function(value, attribute, type) {\n *   return type === 'exclude' && attribute === 'category';\n * }).search();\n */\nAlgoliaSearchHelper.prototype.clearRefinements = function(name) {\n  this._change({\n    state: this.state.resetPage().clearRefinements(name),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Remove all the tag filters.\n *\n * This method resets the current page to 0.\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.clearTags = function() {\n  this._change({\n    state: this.state.resetPage().clearTags(),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Adds a disjunctive filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addDisjunctiveFacetRefinement = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().addDisjunctiveFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addDisjunctiveFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.addDisjunctiveRefine = function() {\n  return this.addDisjunctiveFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Adds a refinement on a hierarchical facet. It will throw\n * an exception if the facet is not defined or if the facet\n * is already refined.\n *\n * This method resets the current page to 0.\n * @param {string} facet the facet name\n * @param {string} path the hierarchical facet path\n * @return {AlgoliaSearchHelper}\n * @throws Error if the facet is not defined or if the facet is refined\n * @chainable\n * @fires change\n */\nAlgoliaSearchHelper.prototype.addHierarchicalFacetRefinement = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().addHierarchicalFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Adds a an numeric filter to an attribute with the `operator` and `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} attribute the attribute on which the numeric filter applies\n * @param  {string} operator the operator of the filter\n * @param  {number} value the value of the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addNumericRefinement = function(attribute, operator, value) {\n  this._change({\n    state: this.state.resetPage().addNumericRefinement(attribute, operator, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Adds a filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addFacetRefinement = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().addFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.addRefine = function() {\n  return this.addFacetRefinement.apply(this, arguments);\n};\n\n\n/**\n * Adds a an exclusion filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addFacetExclusion = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().addExcludeRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addFacetExclusion}\n */\nAlgoliaSearchHelper.prototype.addExclude = function() {\n  return this.addFacetExclusion.apply(this, arguments);\n};\n\n/**\n * Adds a tag filter with the `tag` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param {string} tag the tag to add to the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addTag = function(tag) {\n  this._change({\n    state: this.state.resetPage().addTagRefinement(tag),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Removes an numeric filter to an attribute with the `operator` and `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * Some parameters are optional, triggering different behavior:\n *  - if the value is not provided, then all the numeric value will be removed for the\n *  specified attribute/operator couple.\n *  - if the operator is not provided either, then all the numeric filter on this attribute\n *  will be removed.\n *\n * This method resets the current page to 0.\n * @param  {string} attribute the attribute on which the numeric filter applies\n * @param  {string} [operator] the operator of the filter\n * @param  {number} [value] the value of the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeNumericRefinement = function(attribute, operator, value) {\n  this._change({\n    state: this.state.resetPage().removeNumericRefinement(attribute, operator, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Removes a disjunctive filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeDisjunctiveFacetRefinement = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().removeDisjunctiveFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeDisjunctiveFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.removeDisjunctiveRefine = function() {\n  return this.removeDisjunctiveFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Removes the refinement set on a hierarchical facet.\n * @param {string} facet the facet name\n * @return {AlgoliaSearchHelper}\n * @throws Error if the facet is not defined or if the facet is not refined\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeHierarchicalFacetRefinement = function(facet) {\n  this._change({\n    state: this.state.resetPage().removeHierarchicalFacetRefinement(facet),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Removes a filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeFacetRefinement = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().removeFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.removeRefine = function() {\n  return this.removeFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Removes an exclusion filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeFacetExclusion = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().removeExcludeRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeFacetExclusion}\n */\nAlgoliaSearchHelper.prototype.removeExclude = function() {\n  return this.removeFacetExclusion.apply(this, arguments);\n};\n\n/**\n * Removes a tag filter with the `tag` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param {string} tag tag to remove from the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeTag = function(tag) {\n  this._change({\n    state: this.state.resetPage().removeTagRefinement(tag),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Adds or removes an exclusion filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.toggleFacetExclusion = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().toggleExcludeFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#toggleFacetExclusion}\n */\nAlgoliaSearchHelper.prototype.toggleExclude = function() {\n  return this.toggleFacetExclusion.apply(this, arguments);\n};\n\n/**\n * Adds or removes a filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method can be used for conjunctive, disjunctive and hierarchical filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper}\n * @throws Error will throw an error if the facet is not declared in the settings of the helper\n * @fires change\n * @chainable\n * @deprecated since version 2.19.0, see {@link AlgoliaSearchHelper#toggleFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.toggleRefinement = function(facet, value) {\n  return this.toggleFacetRefinement(facet, value);\n};\n\n/**\n * Adds or removes a filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method can be used for conjunctive, disjunctive and hierarchical filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper}\n * @throws Error will throw an error if the facet is not declared in the settings of the helper\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.toggleFacetRefinement = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().toggleFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#toggleFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.toggleRefine = function() {\n  return this.toggleFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Adds or removes a tag filter with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method resets the current page to 0.\n * @param {string} tag tag to remove or add\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.toggleTag = function(tag) {\n  this._change({\n    state: this.state.resetPage().toggleTagRefinement(tag),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Increments the page number by one.\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n * @example\n * helper.setPage(0).nextPage().getPage();\n * // returns 1\n */\nAlgoliaSearchHelper.prototype.nextPage = function() {\n  var page = this.state.page || 0;\n  return this.setPage(page + 1);\n};\n\n/**\n * Decrements the page number by one.\n * @fires change\n * @return {AlgoliaSearchHelper}\n * @chainable\n * @example\n * helper.setPage(1).previousPage().getPage();\n * // returns 0\n */\nAlgoliaSearchHelper.prototype.previousPage = function() {\n  var page = this.state.page || 0;\n  return this.setPage(page - 1);\n};\n\n/**\n * @private\n */\nfunction setCurrentPage(page) {\n  if (page < 0) throw new Error('Page requested below 0.');\n\n  this._change({\n    state: this.state.setPage(page),\n    isPageReset: false\n  });\n\n  return this;\n}\n\n/**\n * Change the current page\n * @deprecated\n * @param  {number} page The page number\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setCurrentPage = setCurrentPage;\n\n/**\n * Updates the current page.\n * @function\n * @param  {number} page The page number\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setPage = setCurrentPage;\n\n/**\n * Updates the name of the index that will be targeted by the query.\n *\n * This method resets the current page to 0.\n * @param {string} name the index name\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setIndex = function(name) {\n  this._change({\n    state: this.state.resetPage().setIndex(name),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Update a parameter of the search. This method reset the page\n *\n * The complete list of parameters is available on the\n * [Algolia website](https://www.algolia.com/doc/rest#query-an-index).\n * The most commonly used parameters have their own [shortcuts](#query-parameters-shortcuts)\n * or benefit from higher-level APIs (all the kind of filters and facets have their own API)\n *\n * This method resets the current page to 0.\n * @param {string} parameter name of the parameter to update\n * @param {any} value new value of the parameter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n * @example\n * helper.setQueryParameter('hitsPerPage', 20).search();\n */\nAlgoliaSearchHelper.prototype.setQueryParameter = function(parameter, value) {\n  this._change({\n    state: this.state.resetPage().setQueryParameter(parameter, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Set the whole state (warning: will erase previous state)\n * @param {SearchParameters} newState the whole new state\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setState = function(newState) {\n  this._change({\n    state: SearchParameters.make(newState),\n    isPageReset: false\n  });\n\n  return this;\n};\n\n/**\n * Override the current state without triggering a change event.\n * Do not use this method unless you know what you are doing. (see the example\n * for a legit use case)\n * @param {SearchParameters} newState the whole new state\n * @return {AlgoliaSearchHelper}\n * @example\n *  helper.on('change', function(state){\n *    // In this function you might want to find a way to store the state in the url/history\n *    updateYourURL(state)\n *  })\n *  window.onpopstate = function(event){\n *    // This is naive though as you should check if the state is really defined etc.\n *    helper.overrideStateWithoutTriggeringChangeEvent(event.state).search()\n *  }\n * @chainable\n */\nAlgoliaSearchHelper.prototype.overrideStateWithoutTriggeringChangeEvent = function(newState) {\n  this.state = new SearchParameters(newState);\n  return this;\n};\n\n/**\n * Check if an attribute has any numeric, conjunctive, disjunctive or hierarchical filters.\n * @param {string} attribute the name of the attribute\n * @return {boolean} true if the attribute is filtered by at least one value\n * @example\n * // hasRefinements works with numeric, conjunctive, disjunctive and hierarchical filters\n * helper.hasRefinements('price'); // false\n * helper.addNumericRefinement('price', '>', 100);\n * helper.hasRefinements('price'); // true\n *\n * helper.hasRefinements('color'); // false\n * helper.addFacetRefinement('color', 'blue');\n * helper.hasRefinements('color'); // true\n *\n * helper.hasRefinements('material'); // false\n * helper.addDisjunctiveFacetRefinement('material', 'plastic');\n * helper.hasRefinements('material'); // true\n *\n * helper.hasRefinements('categories'); // false\n * helper.toggleFacetRefinement('categories', 'kitchen > knife');\n * helper.hasRefinements('categories'); // true\n *\n */\nAlgoliaSearchHelper.prototype.hasRefinements = function(attribute) {\n  if (objectHasKeys(this.state.getNumericRefinements(attribute))) {\n    return true;\n  } else if (this.state.isConjunctiveFacet(attribute)) {\n    return this.state.isFacetRefined(attribute);\n  } else if (this.state.isDisjunctiveFacet(attribute)) {\n    return this.state.isDisjunctiveFacetRefined(attribute);\n  } else if (this.state.isHierarchicalFacet(attribute)) {\n    return this.state.isHierarchicalFacetRefined(attribute);\n  }\n\n  // there's currently no way to know that the user did call `addNumericRefinement` at some point\n  // thus we cannot distinguish if there once was a numeric refinement that was cleared\n  // so we will return false in every other situations to be consistent\n  // while what we should do here is throw because we did not find the attribute in any type\n  // of refinement\n  return false;\n};\n\n/**\n * Check if a value is excluded for a specific faceted attribute. If the value\n * is omitted then the function checks if there is any excluding refinements.\n *\n * @param  {string}  facet name of the attribute for used for faceting\n * @param  {string}  [value] optional value. If passed will test that this value\n   * is filtering the given facet.\n * @return {boolean} true if refined\n * @example\n * helper.isExcludeRefined('color'); // false\n * helper.isExcludeRefined('color', 'blue') // false\n * helper.isExcludeRefined('color', 'red') // false\n *\n * helper.addFacetExclusion('color', 'red');\n *\n * helper.isExcludeRefined('color'); // true\n * helper.isExcludeRefined('color', 'blue') // false\n * helper.isExcludeRefined('color', 'red') // true\n */\nAlgoliaSearchHelper.prototype.isExcluded = function(facet, value) {\n  return this.state.isExcludeRefined(facet, value);\n};\n\n/**\n * @deprecated since 2.4.0, see {@link AlgoliaSearchHelper#hasRefinements}\n */\nAlgoliaSearchHelper.prototype.isDisjunctiveRefined = function(facet, value) {\n  return this.state.isDisjunctiveFacetRefined(facet, value);\n};\n\n/**\n * Check if the string is a currently filtering tag.\n * @param {string} tag tag to check\n * @return {boolean}\n */\nAlgoliaSearchHelper.prototype.hasTag = function(tag) {\n  return this.state.isTagRefined(tag);\n};\n\n/**\n * @deprecated since 2.4.0, see {@link AlgoliaSearchHelper#hasTag}\n */\nAlgoliaSearchHelper.prototype.isTagRefined = function() {\n  return this.hasTagRefinements.apply(this, arguments);\n};\n\n\n/**\n * Get the name of the currently used index.\n * @return {string}\n * @example\n * helper.setIndex('highestPrice_products').getIndex();\n * // returns 'highestPrice_products'\n */\nAlgoliaSearchHelper.prototype.getIndex = function() {\n  return this.state.index;\n};\n\nfunction getCurrentPage() {\n  return this.state.page;\n}\n\n/**\n * Get the currently selected page\n * @deprecated\n * @return {number} the current page\n */\nAlgoliaSearchHelper.prototype.getCurrentPage = getCurrentPage;\n/**\n * Get the currently selected page\n * @function\n * @return {number} the current page\n */\nAlgoliaSearchHelper.prototype.getPage = getCurrentPage;\n\n/**\n * Get all the tags currently set to filters the results.\n *\n * @return {string[]} The list of tags currently set.\n */\nAlgoliaSearchHelper.prototype.getTags = function() {\n  return this.state.tagRefinements;\n};\n\n/**\n * Get the list of refinements for a given attribute. This method works with\n * conjunctive, disjunctive, excluding and numerical filters.\n *\n * See also SearchResults#getRefinements\n *\n * @param {string} facetName attribute name used for faceting\n * @return {Array.<FacetRefinement|NumericRefinement>} All Refinement are objects that contain a value, and\n * a type. Numeric also contains an operator.\n * @example\n * helper.addNumericRefinement('price', '>', 100);\n * helper.getRefinements('price');\n * // [\n * //   {\n * //     \"value\": [\n * //       100\n * //     ],\n * //     \"operator\": \">\",\n * //     \"type\": \"numeric\"\n * //   }\n * // ]\n * @example\n * helper.addFacetRefinement('color', 'blue');\n * helper.addFacetExclusion('color', 'red');\n * helper.getRefinements('color');\n * // [\n * //   {\n * //     \"value\": \"blue\",\n * //     \"type\": \"conjunctive\"\n * //   },\n * //   {\n * //     \"value\": \"red\",\n * //     \"type\": \"exclude\"\n * //   }\n * // ]\n * @example\n * helper.addDisjunctiveFacetRefinement('material', 'plastic');\n * // [\n * //   {\n * //     \"value\": \"plastic\",\n * //     \"type\": \"disjunctive\"\n * //   }\n * // ]\n */\nAlgoliaSearchHelper.prototype.getRefinements = function(facetName) {\n  var refinements = [];\n\n  if (this.state.isConjunctiveFacet(facetName)) {\n    var conjRefinements = this.state.getConjunctiveRefinements(facetName);\n\n    conjRefinements.forEach(function(r) {\n      refinements.push({\n        value: r,\n        type: 'conjunctive'\n      });\n    });\n\n    var excludeRefinements = this.state.getExcludeRefinements(facetName);\n\n    excludeRefinements.forEach(function(r) {\n      refinements.push({\n        value: r,\n        type: 'exclude'\n      });\n    });\n  } else if (this.state.isDisjunctiveFacet(facetName)) {\n    var disjRefinements = this.state.getDisjunctiveRefinements(facetName);\n\n    disjRefinements.forEach(function(r) {\n      refinements.push({\n        value: r,\n        type: 'disjunctive'\n      });\n    });\n  }\n\n  var numericRefinements = this.state.getNumericRefinements(facetName);\n\n  Object.keys(numericRefinements).forEach(function(operator) {\n    var value = numericRefinements[operator];\n\n    refinements.push({\n      value: value,\n      operator: operator,\n      type: 'numeric'\n    });\n  });\n\n  return refinements;\n};\n\n/**\n * Return the current refinement for the (attribute, operator)\n * @param {string} attribute attribute in the record\n * @param {string} operator operator applied on the refined values\n * @return {Array.<number|number[]>} refined values\n */\nAlgoliaSearchHelper.prototype.getNumericRefinement = function(attribute, operator) {\n  return this.state.getNumericRefinement(attribute, operator);\n};\n\n/**\n * Get the current breadcrumb for a hierarchical facet, as an array\n * @param  {string} facetName Hierarchical facet name\n * @return {array.<string>} the path as an array of string\n */\nAlgoliaSearchHelper.prototype.getHierarchicalFacetBreadcrumb = function(facetName) {\n  return this.state.getHierarchicalFacetBreadcrumb(facetName);\n};\n\n// /////////// PRIVATE\n\n/**\n * Perform the underlying queries\n * @private\n * @return {undefined}\n * @fires search\n * @fires result\n * @fires error\n */\nAlgoliaSearchHelper.prototype._search = function(options) {\n  var state = this.state;\n  var states = [];\n  var mainQueries = [];\n\n  if (!options.onlyWithDerivedHelpers) {\n    mainQueries = requestBuilder._getQueries(state.index, state);\n\n    states.push({\n      state: state,\n      queriesCount: mainQueries.length,\n      helper: this\n    });\n\n    this.emit('search', {\n      state: state,\n      results: this.lastResults\n    });\n  }\n\n  var derivedQueries = this.derivedHelpers.map(function(derivedHelper) {\n    var derivedState = derivedHelper.getModifiedState(state);\n    var derivedStateQueries = requestBuilder._getQueries(derivedState.index, derivedState);\n\n    states.push({\n      state: derivedState,\n      queriesCount: derivedStateQueries.length,\n      helper: derivedHelper\n    });\n\n    derivedHelper.emit('search', {\n      state: derivedState,\n      results: derivedHelper.lastResults\n    });\n\n    return derivedStateQueries;\n  });\n\n  var queries = Array.prototype.concat.apply(mainQueries, derivedQueries);\n  var queryId = this._queryId++;\n\n  this._currentNbQueries++;\n\n  try {\n    this.client.search(queries)\n      .then(this._dispatchAlgoliaResponse.bind(this, states, queryId))\n      .catch(this._dispatchAlgoliaError.bind(this, queryId));\n  } catch (error) {\n    // If we reach this part, we're in an internal error state\n    this.emit('error', {\n      error: error\n    });\n  }\n};\n\n/**\n * Transform the responses as sent by the server and transform them into a user\n * usable object that merge the results of all the batch requests. It will dispatch\n * over the different helper + derived helpers (when there are some).\n * @private\n * @param {array.<{SearchParameters, AlgoliaQueries, AlgoliaSearchHelper}>}\n *  state state used for to generate the request\n * @param {number} queryId id of the current request\n * @param {object} content content of the response\n * @return {undefined}\n */\nAlgoliaSearchHelper.prototype._dispatchAlgoliaResponse = function(states, queryId, content) {\n  // FIXME remove the number of outdated queries discarded instead of just one\n\n  if (queryId < this._lastQueryIdReceived) {\n    // Outdated answer\n    return;\n  }\n\n  this._currentNbQueries -= (queryId - this._lastQueryIdReceived);\n  this._lastQueryIdReceived = queryId;\n\n  if (this._currentNbQueries === 0) this.emit('searchQueueEmpty');\n\n  var results = content.results.slice();\n\n  states.forEach(function(s) {\n    var state = s.state;\n    var queriesCount = s.queriesCount;\n    var helper = s.helper;\n    var specificResults = results.splice(0, queriesCount);\n\n    var formattedResponse = helper.lastResults = new SearchResults(state, specificResults);\n\n    helper.emit('result', {\n      results: formattedResponse,\n      state: state\n    });\n  });\n};\n\nAlgoliaSearchHelper.prototype._dispatchAlgoliaError = function(queryId, error) {\n  if (queryId < this._lastQueryIdReceived) {\n    // Outdated answer\n    return;\n  }\n\n  this._currentNbQueries -= queryId - this._lastQueryIdReceived;\n  this._lastQueryIdReceived = queryId;\n\n  this.emit('error', {\n    error: error\n  });\n\n  if (this._currentNbQueries === 0) this.emit('searchQueueEmpty');\n};\n\nAlgoliaSearchHelper.prototype.containsRefinement = function(query, facetFilters, numericFilters, tagFilters) {\n  return query ||\n    facetFilters.length !== 0 ||\n    numericFilters.length !== 0 ||\n    tagFilters.length !== 0;\n};\n\n/**\n * Test if there are some disjunctive refinements on the facet\n * @private\n * @param {string} facet the attribute to test\n * @return {boolean}\n */\nAlgoliaSearchHelper.prototype._hasDisjunctiveRefinements = function(facet) {\n  return this.state.disjunctiveRefinements[facet] &&\n    this.state.disjunctiveRefinements[facet].length > 0;\n};\n\nAlgoliaSearchHelper.prototype._change = function(event) {\n  var state = event.state;\n  var isPageReset = event.isPageReset;\n\n  if (state !== this.state) {\n    this.state = state;\n\n    this.emit('change', {\n      state: this.state,\n      results: this.lastResults,\n      isPageReset: isPageReset\n    });\n  }\n};\n\n/**\n * Clears the cache of the underlying Algolia client.\n * @return {AlgoliaSearchHelper}\n */\nAlgoliaSearchHelper.prototype.clearCache = function() {\n  this.client.clearCache && this.client.clearCache();\n  return this;\n};\n\n/**\n * Updates the internal client instance. If the reference of the clients\n * are equal then no update is actually done.\n * @param  {AlgoliaSearch} newClient an AlgoliaSearch client\n * @return {AlgoliaSearchHelper}\n */\nAlgoliaSearchHelper.prototype.setClient = function(newClient) {\n  if (this.client === newClient) return this;\n\n  if (typeof newClient.addAlgoliaAgent === 'function') {\n    newClient.addAlgoliaAgent('JS Helper (' + version + ')');\n  }\n  this.client = newClient;\n\n  return this;\n};\n\n/**\n * Gets the instance of the currently used client.\n * @return {AlgoliaSearch}\n */\nAlgoliaSearchHelper.prototype.getClient = function() {\n  return this.client;\n};\n\n/**\n * Creates an derived instance of the Helper. A derived helper\n * is a way to request other indices synchronised with the lifecycle\n * of the main Helper. This mechanism uses the multiqueries feature\n * of Algolia to aggregate all the requests in a single network call.\n *\n * This method takes a function that is used to create a new SearchParameter\n * that will be used to create requests to Algolia. Those new requests\n * are created just before the `search` event. The signature of the function\n * is `SearchParameters -> SearchParameters`.\n *\n * This method returns a new DerivedHelper which is an EventEmitter\n * that fires the same `search`, `result` and `error` events. Those\n * events, however, will receive data specific to this DerivedHelper\n * and the SearchParameters that is returned by the call of the\n * parameter function.\n * @param {function} fn SearchParameters -> SearchParameters\n * @return {DerivedHelper}\n */\nAlgoliaSearchHelper.prototype.derive = function(fn) {\n  var derivedHelper = new DerivedHelper(this, fn);\n  this.derivedHelpers.push(derivedHelper);\n  return derivedHelper;\n};\n\n/**\n * This method detaches a derived Helper from the main one. Prefer using the one from the\n * derived helper itself, to remove the event listeners too.\n * @private\n * @return {undefined}\n * @throws Error\n */\nAlgoliaSearchHelper.prototype.detachDerivedHelper = function(derivedHelper) {\n  var pos = this.derivedHelpers.indexOf(derivedHelper);\n  if (pos === -1) throw new Error('Derived helper already detached');\n  this.derivedHelpers.splice(pos, 1);\n};\n\n/**\n * This method returns true if there is currently at least one on-going search.\n * @return {boolean} true if there is a search pending\n */\nAlgoliaSearchHelper.prototype.hasPendingRequests = function() {\n  return this._currentNbQueries > 0;\n};\n\n/**\n * @typedef AlgoliaSearchHelper.NumericRefinement\n * @type {object}\n * @property {number[]} value the numbers that are used for filtering this attribute with\n * the operator specified.\n * @property {string} operator the faceting data: value, number of entries\n * @property {string} type will be 'numeric'\n */\n\n/**\n * @typedef AlgoliaSearchHelper.FacetRefinement\n * @type {object}\n * @property {string} value the string use to filter the attribute\n * @property {string} type the type of filter: 'conjunctive', 'disjunctive', 'exclude'\n */\n\nmodule.exports = AlgoliaSearchHelper;\n","'use strict';\n\nvar AlgoliaSearchHelper = require('./src/algoliasearch.helper');\n\nvar SearchParameters = require('./src/SearchParameters');\nvar SearchResults = require('./src/SearchResults');\n\n/**\n * The algoliasearchHelper module is the function that will let its\n * contains everything needed to use the Algoliasearch\n * Helper. It is a also a function that instanciate the helper.\n * To use the helper, you also need the Algolia JS client v3.\n * @example\n * //using the UMD build\n * var client = algoliasearch('latency', '6be0576ff61c053d5f9a3225e2a90f76');\n * var helper = algoliasearchHelper(client, 'bestbuy', {\n *   facets: ['shipping'],\n *   disjunctiveFacets: ['category']\n * });\n * helper.on('result', function(event) {\n *   console.log(event.results);\n * });\n * helper\n *   .toggleFacetRefinement('category', 'Movies & TV Shows')\n *   .toggleFacetRefinement('shipping', 'Free shipping')\n *   .search();\n * @example\n * // The helper is an event emitter using the node API\n * helper.on('result', updateTheResults);\n * helper.once('result', updateTheResults);\n * helper.removeListener('result', updateTheResults);\n * helper.removeAllListeners('result');\n * @module algoliasearchHelper\n * @param  {AlgoliaSearch} client an AlgoliaSearch client\n * @param  {string} index the name of the index to query\n * @param  {SearchParameters|object} opts an object defining the initial config of the search. It doesn't have to be a {SearchParameters}, just an object containing the properties you need from it.\n * @return {AlgoliaSearchHelper}\n */\nfunction algoliasearchHelper(client, index, opts) {\n  return new AlgoliaSearchHelper(client, index, opts);\n}\n\n/**\n * The version currently used\n * @member module:algoliasearchHelper.version\n * @type {number}\n */\nalgoliasearchHelper.version = require('./src/version.js');\n\n/**\n * Constructor for the Helper.\n * @member module:algoliasearchHelper.AlgoliaSearchHelper\n * @type {AlgoliaSearchHelper}\n */\nalgoliasearchHelper.AlgoliaSearchHelper = AlgoliaSearchHelper;\n\n/**\n * Constructor for the object containing all the parameters of the search.\n * @member module:algoliasearchHelper.SearchParameters\n * @type {SearchParameters}\n */\nalgoliasearchHelper.SearchParameters = SearchParameters;\n\n/**\n * Constructor for the object containing the results of the search.\n * @member module:algoliasearchHelper.SearchResults\n * @type {SearchResults}\n */\nalgoliasearchHelper.SearchResults = SearchResults;\n\nmodule.exports = algoliasearchHelper;\n","export function noop(..._args: any[]): void {}\n","import { noop } from './noop';\n\ntype Warn = (message: string) => void;\n\ntype Warning = {\n  (condition: boolean, message: string): void;\n  cache: { [message: string]: boolean };\n};\n\n/**\n * Logs a warning when this function is called, in development environment only.\n */\nlet deprecate = <TCallback extends (...args: any[]) => any>(\n  fn: TCallback,\n  // @ts-ignore this parameter is used in the __DEV__ branch\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  message: string\n) => fn;\n\n/**\n * Logs a warning\n * This is used to log issues in development environment only.\n */\nlet warn: Warn = noop;\n\n/**\n * Logs a warning if the condition is not met.\n * This is used to log issues in development environment only.\n */\nlet warning = noop as Warning;\n\nif (__DEV__) {\n  warn = (message) => {\n    // eslint-disable-next-line no-console\n    console.warn(`[InstantSearch.js]: ${message.trim()}`);\n  };\n\n  deprecate = (fn, message) => {\n    let hasAlreadyPrinted = false;\n\n    return function (...args) {\n      if (!hasAlreadyPrinted) {\n        hasAlreadyPrinted = true;\n\n        warn(message);\n      }\n\n      return fn(...args);\n    } as typeof fn;\n  };\n\n  warning = ((condition, message) => {\n    if (condition) {\n      return;\n    }\n\n    const hasAlreadyPrinted = warning.cache[message];\n\n    if (!hasAlreadyPrinted) {\n      warning.cache[message] = true;\n\n      warn(message);\n    }\n  }) as Warning;\n\n  warning.cache = {};\n}\n\nexport { warn, deprecate, warning };\n","import type { Renderer } from '../../types/connector';\nimport { getObjectType } from './getObjectType';\n\nexport function checkRendering<TRenderOptions, TWidgetParams>(\n  rendering: Renderer<TRenderOptions, TWidgetParams>,\n  usage: string\n): void {\n  if (rendering === undefined || typeof rendering !== 'function') {\n    throw new Error(`The render function is not valid (received type ${getObjectType(\n      rendering\n    )}).\n\n${usage}`);\n  }\n}\n","export function getObjectType(object: unknown): string {\n  return Object.prototype.toString.call(object).slice(8, -1);\n}\n","import type {\n  AlgoliaSearchHelper,\n  SearchParameters,\n} from 'algoliasearch-helper';\n\n/**\n * Clears the refinements of a SearchParameters object based on rules provided.\n * The included attributes list is applied before the excluded attributes list. If the list\n * is not provided, this list of all the currently refined attributes is used as included attributes.\n * @returns search parameters with refinements cleared\n */\nexport function clearRefinements({\n  helper,\n  attributesToClear = [],\n}: {\n  helper: AlgoliaSearchHelper;\n  attributesToClear?: string[];\n}): SearchParameters {\n  let finalState = helper.state.setPage(0);\n\n  finalState = attributesToClear.reduce((state, attribute) => {\n    if (finalState.isNumericRefined(attribute)) {\n      return state.removeNumericRefinement(attribute);\n    }\n    if (finalState.isHierarchicalFacet(attribute)) {\n      return state.removeHierarchicalFacetRefinement(attribute);\n    }\n    if (finalState.isDisjunctiveFacet(attribute)) {\n      return state.removeDisjunctiveFacetRefinement(attribute);\n    }\n    if (finalState.isConjunctiveFacet(attribute)) {\n      return state.removeFacetRefinement(attribute);\n    }\n\n    return state;\n  }, finalState);\n\n  if (attributesToClear.indexOf('query') !== -1) {\n    finalState = finalState.setQuery('');\n  }\n\n  return finalState;\n}\n","/**\n * This implementation is taken from Lodash implementation.\n * See: https://github.com/lodash/lodash/blob/4.17.11-npm/escape.js\n */\n\n// Used to map characters to HTML entities.\nconst htmlEntities = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n};\n\n// Used to match HTML entities and HTML characters.\nconst regexUnescapedHtml = /[&<>\"']/g;\nconst regexHasUnescapedHtml = RegExp(regexUnescapedHtml.source);\n\n/**\n * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n * corresponding HTML entities.\n */\nexport function escape(value: string): string {\n  return value && regexHasUnescapedHtml.test(value)\n    ? value.replace(\n        regexUnescapedHtml,\n        (character) => htmlEntities[character as keyof typeof htmlEntities]\n      )\n    : value;\n}\n\n/**\n * This implementation is taken from Lodash implementation.\n * See: https://github.com/lodash/lodash/blob/4.17.11-npm/unescape.js\n */\n\n// Used to map HTML entities to characters.\nconst htmlCharacters = {\n  '&amp;': '&',\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&#39;': \"'\",\n};\n\n// Used to match HTML entities and HTML characters.\nconst regexEscapedHtml = /&(amp|quot|lt|gt|#39);/g;\nconst regexHasEscapedHtml = RegExp(regexEscapedHtml.source);\n\n/**\n * Converts the HTML entities \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n * characters.\n */\nexport function unescape(value: string): string {\n  return value && regexHasEscapedHtml.test(value)\n    ? value.replace(\n        regexEscapedHtml,\n        (character) => htmlCharacters[character as keyof typeof htmlCharacters]\n      )\n    : value;\n}\n","/**\n * This implementation is taken from Lodash implementation.\n * See: https://github.com/lodash/lodash/blob/master/isPlainObject.js\n */\n\nfunction getTag(value: any): string {\n  if (value === null) {\n    return value === undefined ? '[object Undefined]' : '[object Null]';\n  }\n\n  return Object.prototype.toString.call(value);\n}\n\nfunction isObjectLike(value: any): boolean {\n  return typeof value === 'object' && value !== null;\n}\n\n/**\n * Checks if `value` is a plain object.\n *\n * A plain object is an object created by the `Object`\n * constructor or with a `[[Prototype]]` of `null`.\n */\nexport function isPlainObject(value: any): boolean {\n  if (!isObjectLike(value) || getTag(value) !== '[object Object]') {\n    return false;\n  }\n\n  if (Object.getPrototypeOf(value) === null) {\n    return true;\n  }\n\n  let proto = value;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(value) === proto;\n}\n","import { escape } from './escape-html';\nimport { isPlainObject } from './isPlainObject';\nimport type { Hit, FacetHit, EscapedHits } from '../../types';\n\nexport const TAG_PLACEHOLDER = {\n  highlightPreTag: '__ais-highlight__',\n  highlightPostTag: '__/ais-highlight__',\n};\n\nexport const TAG_REPLACEMENT = {\n  highlightPreTag: '<mark>',\n  highlightPostTag: '</mark>',\n};\n\nfunction replaceTagsAndEscape(value: string): string {\n  return escape(value)\n    .replace(\n      new RegExp(TAG_PLACEHOLDER.highlightPreTag, 'g'),\n      TAG_REPLACEMENT.highlightPreTag\n    )\n    .replace(\n      new RegExp(TAG_PLACEHOLDER.highlightPostTag, 'g'),\n      TAG_REPLACEMENT.highlightPostTag\n    );\n}\n\nfunction recursiveEscape(input: any): any {\n  if (isPlainObject(input) && typeof input.value !== 'string') {\n    return Object.keys(input).reduce(\n      (acc, key) => ({\n        ...acc,\n        [key]: recursiveEscape(input[key]),\n      }),\n      {}\n    );\n  }\n\n  if (Array.isArray(input)) {\n    return input.map(recursiveEscape);\n  }\n\n  return {\n    ...input,\n    value: replaceTagsAndEscape(input.value),\n  };\n}\n\nexport function escapeHits<THit extends Hit>(\n  hits: THit[] | EscapedHits<THit>\n): EscapedHits<THit> {\n  if ((hits as EscapedHits).__escaped === undefined) {\n    // We don't override the value on hit because it will mutate the raw results\n    // instead we make a shallow copy and we assign the escaped values on it.\n    hits = hits.map(({ ...hit }) => {\n      if (hit._highlightResult) {\n        hit._highlightResult = recursiveEscape(hit._highlightResult);\n      }\n\n      if (hit._snippetResult) {\n        hit._snippetResult = recursiveEscape(hit._snippetResult);\n      }\n\n      return hit;\n    });\n\n    (hits as EscapedHits).__escaped = true;\n  }\n\n  return hits as EscapedHits<THit>;\n}\n\nexport function escapeFacets(facetHits: FacetHit[]): FacetHit[] {\n  return facetHits.map((h) => ({\n    ...h,\n    highlighted: replaceTagsAndEscape(h.highlighted),\n  }));\n}\n","import type { HighlightedParts } from '../../types';\nimport { TAG_REPLACEMENT } from './escape-highlight';\n\nexport function concatHighlightedParts(parts: HighlightedParts[]) {\n  const { highlightPreTag, highlightPostTag } = TAG_REPLACEMENT;\n\n  return parts\n    .map((part) =>\n      part.isHighlighted\n        ? highlightPreTag + part.value + highlightPostTag\n        : part.value\n    )\n    .join('');\n}\n","import type { AlgoliaSearchHelper } from 'algoliasearch-helper';\nimport type { InstantSearch } from '../../types';\nimport { isFacetRefined } from './isFacetRefined';\n\ntype BuiltInSendEventForFacet = (\n  eventType: string,\n  facetValue: string,\n  eventName?: string\n) => void;\ntype CustomSendEventForFacet = (customPayload: any) => void;\n\nexport type SendEventForFacet = BuiltInSendEventForFacet &\n  CustomSendEventForFacet;\n\ntype CreateSendEventForFacetOptions = {\n  instantSearchInstance: InstantSearch;\n  helper: AlgoliaSearchHelper;\n  attribute: string | ((facetValue: string) => string);\n  widgetType: string;\n};\n\nexport function createSendEventForFacet({\n  instantSearchInstance,\n  helper,\n  attribute: attr,\n  widgetType,\n}: CreateSendEventForFacetOptions): SendEventForFacet {\n  const sendEventForFacet: SendEventForFacet = (...args: any[]) => {\n    const [eventType, facetValue, eventName = 'Filter Applied'] = args;\n    const attribute = typeof attr === 'string' ? attr : attr(facetValue);\n\n    if (args.length === 1 && typeof args[0] === 'object') {\n      instantSearchInstance.sendEventToInsights(args[0]);\n    } else if (\n      eventType === 'click' &&\n      (args.length === 2 || args.length === 3)\n    ) {\n      if (!isFacetRefined(helper, attribute, facetValue)) {\n        // send event only when the facet is being checked \"ON\"\n        instantSearchInstance.sendEventToInsights({\n          insightsMethod: 'clickedFilters',\n          widgetType,\n          eventType,\n          payload: {\n            eventName,\n            index: helper.getIndex(),\n            filters: [`${attribute}:${facetValue}`],\n          },\n          attribute,\n        });\n      }\n    } else if (__DEV__) {\n      throw new Error(\n        `You need to pass two arguments like:\n  sendEvent('click', facetValue);\n\nIf you want to send a custom payload, you can pass one object: sendEvent(customPayload);\n`\n      );\n    }\n  };\n\n  return sendEventForFacet;\n}\n","import type { AlgoliaSearchHelper } from 'algoliasearch-helper';\n\nexport function isFacetRefined(\n  helper: AlgoliaSearchHelper,\n  facet: string,\n  value: string\n) {\n  if (helper.state.isHierarchicalFacet(facet)) {\n    return helper.state.isHierarchicalFacetRefined(facet, value);\n  } else if (helper.state.isConjunctiveFacet(facet)) {\n    return helper.state.isFacetRefined(facet, value);\n  } else {\n    return helper.state.isDisjunctiveFacetRefined(facet, value);\n  }\n}\n","export function serializePayload<TPayload>(payload: TPayload): string {\n  return btoa(encodeURIComponent(JSON.stringify(payload)));\n}\n\nexport function deserializePayload<TPayload>(serialized: string): TPayload {\n  return JSON.parse(decodeURIComponent(atob(serialized)));\n}\n","import type { InstantSearch, Hit, EscapedHits } from '../../types';\nimport { serializePayload } from './serializer';\nimport type { InsightsEvent } from '../../middlewares/createInsightsMiddleware';\n\ntype BuiltInSendEventForHits = (\n  eventType: string,\n  hits: Hit | Hit[],\n  eventName?: string\n) => void;\ntype CustomSendEventForHits = (customPayload: any) => void;\nexport type SendEventForHits = BuiltInSendEventForHits & CustomSendEventForHits;\n\ntype BuiltInBindEventForHits = (\n  eventType: string,\n  hits: Hit | Hit[],\n  eventName?: string\n) => string;\ntype CustomBindEventForHits = (customPayload: any) => string;\nexport type BindEventForHits = BuiltInBindEventForHits & CustomBindEventForHits;\n\nfunction chunk<TItem>(arr: TItem[], chunkSize: number = 20): TItem[][] {\n  const chunks: TItem[][] = [];\n  for (let i = 0; i < Math.ceil(arr.length / chunkSize); i++) {\n    chunks.push(arr.slice(i * chunkSize, (i + 1) * chunkSize));\n  }\n  return chunks;\n}\n\nconst buildPayloads = ({\n  index,\n  widgetType,\n  methodName,\n  args,\n  isSearchStalled,\n}: {\n  widgetType: string;\n  index: string;\n  methodName: 'sendEvent' | 'bindEvent';\n  args: any[];\n  isSearchStalled: boolean;\n}): InsightsEvent[] => {\n  // when there's only one argument, that means it's custom\n  if (args.length === 1 && typeof args[0] === 'object') {\n    return [args[0]];\n  }\n  const eventType: string = args[0];\n  const hits: Hit | Hit[] | EscapedHits = args[1];\n  const eventName: string | undefined = args[2];\n  if (!hits) {\n    if (__DEV__) {\n      throw new Error(\n        `You need to pass hit or hits as the second argument like:\n  ${methodName}(eventType, hit);\n  `\n      );\n    } else {\n      return [];\n    }\n  }\n  if ((eventType === 'click' || eventType === 'conversion') && !eventName) {\n    if (__DEV__) {\n      throw new Error(\n        `You need to pass eventName as the third argument for 'click' or 'conversion' events like:\n  ${methodName}('click', hit, 'Product Purchased');\n\n  To learn more about event naming: https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/in-depth/clicks-conversions-best-practices/\n  `\n      );\n    } else {\n      return [];\n    }\n  }\n  const hitsArray: Hit[] = Array.isArray(hits)\n    ? removeEscapedFromHits(hits)\n    : [hits];\n\n  if (hitsArray.length === 0) {\n    return [];\n  }\n  const queryID = hitsArray[0].__queryID;\n  const hitsChunks = chunk(hitsArray);\n  const objectIDsByChunk = hitsChunks.map((batch) =>\n    batch.map((hit) => hit.objectID)\n  );\n  const positionsByChunk = hitsChunks.map((batch) =>\n    batch.map((hit) => hit.__position)\n  );\n\n  if (eventType === 'view') {\n    if (isSearchStalled) {\n      return [];\n    }\n    return hitsChunks.map((batch, i) => {\n      return {\n        insightsMethod: 'viewedObjectIDs',\n        widgetType,\n        eventType,\n        payload: {\n          eventName: eventName || 'Hits Viewed',\n          index,\n          objectIDs: objectIDsByChunk[i],\n        },\n        hits: batch,\n      };\n    });\n  } else if (eventType === 'click') {\n    return hitsChunks.map((batch, i) => {\n      return {\n        insightsMethod: 'clickedObjectIDsAfterSearch',\n        widgetType,\n        eventType,\n        payload: {\n          eventName,\n          index,\n          queryID,\n          objectIDs: objectIDsByChunk[i],\n          positions: positionsByChunk[i],\n        },\n        hits: batch,\n      };\n    });\n  } else if (eventType === 'conversion') {\n    return hitsChunks.map((batch, i) => {\n      return {\n        insightsMethod: 'convertedObjectIDsAfterSearch',\n        widgetType,\n        eventType,\n        payload: {\n          eventName,\n          index,\n          queryID,\n          objectIDs: objectIDsByChunk[i],\n        },\n        hits: batch,\n      };\n    });\n  } else if (__DEV__) {\n    throw new Error(`eventType(\"${eventType}\") is not supported.\n    If you want to send a custom payload, you can pass one object: ${methodName}(customPayload);\n    `);\n  } else {\n    return [];\n  }\n};\n\nfunction removeEscapedFromHits(hits: Hit[] | EscapedHits): Hit[] {\n  // remove `hits.__escaped` without mutating\n  return hits.slice();\n}\n\nexport function createSendEventForHits({\n  instantSearchInstance,\n  index,\n  widgetType,\n}: {\n  instantSearchInstance: InstantSearch;\n  index: string;\n  widgetType: string;\n}): SendEventForHits {\n  const sendEventForHits: SendEventForHits = (...args: any[]) => {\n    const payloads = buildPayloads({\n      widgetType,\n      index,\n      methodName: 'sendEvent',\n      args,\n      isSearchStalled: instantSearchInstance.status === 'stalled',\n    });\n\n    payloads.forEach((payload) =>\n      instantSearchInstance.sendEventToInsights(payload)\n    );\n  };\n  return sendEventForHits;\n}\n\nexport function createBindEventForHits({\n  index,\n  widgetType,\n}: {\n  index: string;\n  widgetType: string;\n}): BindEventForHits {\n  const bindEventForHits: BindEventForHits = (...args: any[]) => {\n    const payloads = buildPayloads({\n      widgetType,\n      index,\n      methodName: 'bindEvent',\n      args,\n      isSearchStalled: false,\n    });\n\n    return payloads.length\n      ? `data-insights-event=${serializePayload(payloads)}`\n      : '';\n  };\n  return bindEventForHits;\n}\n","import type { Widget } from '../../types';\nimport type { IndexWidget } from '../../widgets/index/index';\n\nexport function isIndexWidget(\n  widget: Widget | IndexWidget\n): widget is IndexWidget {\n  return widget.$$type === 'ais.index';\n}\n","import type { UiState } from '../../types';\nimport type { IndexWidget } from '../../widgets/index/index';\nimport { isIndexWidget } from './isIndexWidget';\nimport { checkIndexUiState } from './checkIndexUiState';\n\nexport function setIndexHelperState<TUiState extends UiState>(\n  finalUiState: TUiState,\n  indexWidget: IndexWidget\n) {\n  const nextIndexUiState = finalUiState[indexWidget.getIndexId()] || {};\n\n  if (__DEV__) {\n    checkIndexUiState({\n      index: indexWidget,\n      indexUiState: nextIndexUiState,\n    });\n  }\n\n  indexWidget.getHelper()!.setState(\n    indexWidget.getWidgetSearchParameters(indexWidget.getHelper()!.state, {\n      uiState: nextIndexUiState,\n    })\n  );\n\n  indexWidget\n    .getWidgets()\n    .filter(isIndexWidget)\n    .forEach((widget) => setIndexHelperState(finalUiState, widget));\n}\n","import type { Awaited } from '../../types';\n\ntype Func = (...args: any[]) => any;\n\nexport type DebouncedFunction<TFunction extends Func> = (\n  this: ThisParameterType<TFunction>,\n  ...args: Parameters<TFunction>\n) => Promise<Awaited<ReturnType<TFunction>>>;\n\n// Debounce a function call to the trailing edge.\n// The debounced function returns a promise.\nexport function debounce<TFunction extends Func>(\n  func: TFunction,\n  wait: number\n): DebouncedFunction<TFunction> {\n  let lastTimeout: ReturnType<typeof setTimeout> | null = null;\n  return function (...args) {\n    return new Promise((resolve, reject) => {\n      if (lastTimeout) {\n        clearTimeout(lastTimeout);\n      }\n      lastTimeout = setTimeout(() => {\n        lastTimeout = null;\n        Promise.resolve(func(...args))\n          .then(resolve)\n          .catch(reject);\n      }, wait);\n    });\n  };\n}\n","const nextMicroTask = Promise.resolve();\n\ntype Callback = (...args: any[]) => void;\ntype Defer = {\n  wait(): Promise<void>;\n  cancel(): void;\n};\n\nexport function defer<TCallback extends Callback>(\n  callback: TCallback\n): TCallback & Defer {\n  let progress: Promise<void> | null = null;\n  let cancelled = false;\n\n  const fn = ((...args: Parameters<TCallback>) => {\n    if (progress !== null) {\n      return;\n    }\n\n    progress = nextMicroTask.then(() => {\n      progress = null;\n\n      if (cancelled) {\n        cancelled = false;\n        return;\n      }\n\n      callback(...args);\n    });\n  }) as TCallback & Defer;\n\n  fn.wait = () => {\n    if (progress === null) {\n      throw new Error(\n        'The deferred function should be called before calling `wait()`'\n      );\n    }\n\n    return progress;\n  };\n\n  fn.cancel = () => {\n    if (progress === null) {\n      return;\n    }\n\n    cancelled = true;\n  };\n\n  return fn;\n}\n","type WidgetParam = {\n  name: string;\n  connector?: boolean;\n};\n\nexport function createDocumentationLink({\n  name,\n  connector = false,\n}: WidgetParam): string {\n  return [\n    'https://www.algolia.com/doc/api-reference/widgets/',\n    name,\n    '/js/',\n    connector ? '#connector' : '',\n  ].join('');\n}\n\ntype DocumentationMessageGenerator = (message?: string) => string;\n\nexport function createDocumentationMessageGenerator(\n  ...widgets: WidgetParam[]\n): DocumentationMessageGenerator {\n  const links = widgets\n    .map((widget) => createDocumentationLink(widget))\n    .join(', ');\n\n  return (message?: string) =>\n    [message, `See documentation: ${links}`].filter(Boolean).join('\\n\\n');\n}\n","type FacetValue = string | number | boolean | undefined;\n\nexport function unescapeFacetValue<TFacetValue extends FacetValue>(\n  value: TFacetValue\n): TFacetValue {\n  if (typeof value === 'string') {\n    return value.replace(/^\\\\-/, '-') as TFacetValue;\n  }\n\n  return value;\n}\n\nexport function escapeFacetValue<TFacetValue extends FacetValue>(\n  value: TFacetValue\n): TFacetValue {\n  if ((typeof value === 'number' && value < 0) || typeof value === 'string') {\n    return String(value).replace(/^-/, '\\\\-') as TFacetValue;\n  }\n\n  return value;\n}\n","// We aren't using the native `Array.prototype.find` because the refactor away from Lodash is not\n// published as a major version.\n// Relying on the `find` polyfill on user-land, which before was only required for niche use-cases,\n// was decided as too risky.\n// @MAJOR Replace with the native `Array.prototype.find` method\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\nexport function find<TItem>(\n  items: TItem[],\n  predicate: (value: TItem, index: number, obj: TItem[]) => boolean\n): TItem | undefined {\n  let value: TItem;\n  for (let i = 0; i < items.length; i++) {\n    value = items[i];\n    // inlined for performance: if (Call(predicate, thisArg, [value, i, list])) {\n    if (predicate(value, i, items)) {\n      return value;\n    }\n  }\n\n  return undefined;\n}\n","const latLngRegExp = /^(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)$/;\n\nexport function aroundLatLngToPosition(value: string) {\n  const pattern = value.match(latLngRegExp);\n\n  // Since the value provided is the one send with the request, the API should\n  // throw an error due to the wrong format. So throw an error should be safe.\n  if (!pattern) {\n    throw new Error(`Invalid value for \"aroundLatLng\" parameter: \"${value}\"`);\n  }\n\n  return {\n    lat: parseFloat(pattern[1]),\n    lng: parseFloat(pattern[2]),\n  };\n}\n\nexport type LatLng = Array<[number, number, number, number]>;\n\nfunction insideBoundingBoxArrayToBoundingBox(value: LatLng) {\n  const [\n    [neLat, neLng, swLat, swLng] = [undefined, undefined, undefined, undefined],\n  ] = value;\n\n  // Since the value provided is the one send with the request, the API should\n  // throw an error due to the wrong format. So throw an error should be safe.\n  if (!neLat || !neLng || !swLat || !swLng) {\n    throw new Error(\n      `Invalid value for \"insideBoundingBox\" parameter: [${value}]`\n    );\n  }\n\n  return {\n    northEast: {\n      lat: neLat,\n      lng: neLng,\n    },\n    southWest: {\n      lat: swLat,\n      lng: swLng,\n    },\n  };\n}\n\nfunction insideBoundingBoxStringToBoundingBox(value: string) {\n  const [neLat, neLng, swLat, swLng] = value.split(',').map(parseFloat);\n\n  // Since the value provided is the one send with the request, the API should\n  // throw an error due to the wrong format. So throw an error should be safe.\n  if (!neLat || !neLng || !swLat || !swLng) {\n    throw new Error(\n      `Invalid value for \"insideBoundingBox\" parameter: \"${value}\"`\n    );\n  }\n\n  return {\n    northEast: {\n      lat: neLat,\n      lng: neLng,\n    },\n    southWest: {\n      lat: swLat,\n      lng: swLng,\n    },\n  };\n}\n\nexport function insideBoundingBoxToBoundingBox(value: string | LatLng) {\n  if (Array.isArray(value)) {\n    return insideBoundingBoxArrayToBoundingBox(value);\n  }\n\n  return insideBoundingBoxStringToBoundingBox(value);\n}\n","import { isDomElement } from './isDomElement';\n\n/**\n * Return the container. If it's a string, it is considered a\n * css selector and retrieves the first matching element. Otherwise\n * test if it validates that it's a correct DOMElement.\n *\n * @param {string|HTMLElement} selectorOrHTMLElement CSS Selector or container node.\n * @return {HTMLElement} Container node\n * @throws Error when the type is not correct\n */\nexport function getContainerNode(\n  selectorOrHTMLElement: string | HTMLElement\n): HTMLElement {\n  const isSelectorString = typeof selectorOrHTMLElement === 'string';\n  const domElement = isSelectorString\n    ? document.querySelector(selectorOrHTMLElement as string)\n    : selectorOrHTMLElement;\n\n  if (!isDomElement(domElement)) {\n    let errorMessage = 'Container must be `string` or `HTMLElement`.';\n\n    if (isSelectorString) {\n      errorMessage += ` Unable to find ${selectorOrHTMLElement}`;\n    }\n\n    throw new Error(errorMessage);\n  }\n\n  return domElement;\n}\n","export function isDomElement(object: any): object is HTMLElement {\n  return (\n    object instanceof HTMLElement || (Boolean(object) && object.nodeType > 0)\n  );\n}\n","import { TAG_REPLACEMENT } from './escape-highlight';\n\nexport function getHighlightedParts(highlightedValue: string) {\n  const { highlightPostTag, highlightPreTag } = TAG_REPLACEMENT;\n\n  const splitByPreTag = highlightedValue.split(highlightPreTag);\n  const firstValue = splitByPreTag.shift();\n  const elements = !firstValue\n    ? []\n    : [{ value: firstValue, isHighlighted: false }];\n\n  splitByPreTag.forEach((split) => {\n    const splitByPostTag = split.split(highlightPostTag);\n\n    elements.push({\n      value: splitByPostTag[0],\n      isHighlighted: true,\n    });\n\n    if (splitByPostTag[1] !== '') {\n      elements.push({\n        value: splitByPostTag[1],\n        isHighlighted: false,\n      });\n    }\n  });\n\n  return elements;\n}\n","import { unescape } from './escape-html';\nimport type { HighlightedParts } from '../../types';\n\nconst hasAlphanumeric = new RegExp(/\\w/i);\n\nexport function getHighlightFromSiblings(parts: HighlightedParts[], i: number) {\n  const current = parts[i];\n  const isNextHighlighted = parts[i + 1]?.isHighlighted || true;\n  const isPreviousHighlighted = parts[i - 1]?.isHighlighted || true;\n\n  if (\n    !hasAlphanumeric.test(unescape(current.value)) &&\n    isPreviousHighlighted === isNextHighlighted\n  ) {\n    return isPreviousHighlighted;\n  }\n\n  return current.isHighlighted;\n}\n","export function getPropertyByPath(\n  object: Record<string, any> | undefined,\n  path: string | string[]\n): any {\n  const parts = Array.isArray(path) ? path : path.split('.');\n\n  return parts.reduce((current, key) => current && current[key], object);\n}\n","import type { SearchParameters, SearchResults } from 'algoliasearch-helper';\nimport { find } from './find';\nimport { unescapeFacetValue, escapeFacetValue } from './escapeFacetValue';\n\nexport type FacetRefinement = {\n  type: 'facet' | 'disjunctive' | 'hierarchical';\n  attribute: string;\n  name: string;\n  escapedValue: string;\n  count?: number;\n  exhaustive?: boolean;\n};\n\nexport type TagRefinement = {\n  type: 'tag';\n  attribute: string;\n  name: string;\n};\n\nexport type QueryRefinement = {\n  type: 'query';\n  attribute: 'query';\n  query: string;\n  name: string;\n};\n\nexport type NumericRefinement = {\n  type: 'numeric';\n  numericValue: number;\n  operator: '<' | '<=' | '=' | '!=' | '>=' | '>';\n  attribute: string;\n  name: string;\n  count?: number;\n  exhaustive?: boolean;\n};\n\nexport type FacetExcludeRefinement = {\n  type: 'exclude';\n  exclude: boolean;\n  attribute: string;\n  name: string;\n  count?: number;\n  exhaustive?: boolean;\n};\n\nexport type Refinement =\n  | FacetRefinement\n  | QueryRefinement\n  | NumericRefinement\n  | FacetExcludeRefinement\n  | TagRefinement;\n\nfunction getRefinement(\n  state: SearchParameters,\n  type: FacetRefinement['type'],\n  attribute: FacetRefinement['attribute'],\n  name: FacetRefinement['name'],\n  resultsFacets: SearchResults['facets' | 'hierarchicalFacets'] = []\n): FacetRefinement {\n  const res: FacetRefinement = {\n    type,\n    attribute,\n    name,\n    escapedValue: escapeFacetValue(name),\n  };\n  let facet: any = find(\n    resultsFacets,\n    (resultsFacet) => resultsFacet.name === attribute\n  );\n  let count: number;\n\n  if (type === 'hierarchical') {\n    const facetDeclaration = state.getHierarchicalFacetByName(attribute);\n    const nameParts = name.split(facetDeclaration.separator);\n\n    const getFacetRefinement =\n      (facetData: any): ((refinementKey: string) => any) =>\n      (refinementKey: string): any =>\n        facetData[refinementKey];\n\n    for (let i = 0; facet !== undefined && i < nameParts.length; ++i) {\n      facet =\n        facet &&\n        facet.data &&\n        find(\n          Object.keys(facet.data).map(getFacetRefinement(facet.data)),\n          (refinement) => refinement.name === nameParts[i]\n        );\n    }\n\n    count = facet && facet.count;\n  } else {\n    count = facet && facet.data && facet.data[res.name];\n  }\n\n  if (count !== undefined) {\n    res.count = count;\n  }\n\n  if (facet && facet.exhaustive !== undefined) {\n    res.exhaustive = facet.exhaustive;\n  }\n\n  return res;\n}\n\nexport function getRefinements(\n  results: SearchResults | Record<string, never>,\n  state: SearchParameters,\n  includesQuery: boolean = false\n): Refinement[] {\n  const refinements: Refinement[] = [];\n  const {\n    facetsRefinements = {},\n    facetsExcludes = {},\n    disjunctiveFacetsRefinements = {},\n    hierarchicalFacetsRefinements = {},\n    numericRefinements = {},\n    tagRefinements = [],\n  } = state;\n\n  Object.keys(facetsRefinements).forEach((attribute) => {\n    const refinementNames = facetsRefinements[attribute];\n\n    refinementNames.forEach((refinementName) => {\n      refinements.push(\n        getRefinement(state, 'facet', attribute, refinementName, results.facets)\n      );\n    });\n  });\n\n  Object.keys(facetsExcludes).forEach((attribute) => {\n    const refinementNames = facetsExcludes[attribute];\n\n    refinementNames.forEach((refinementName) => {\n      refinements.push({\n        type: 'exclude',\n        attribute,\n        name: refinementName,\n        exclude: true,\n      });\n    });\n  });\n\n  Object.keys(disjunctiveFacetsRefinements).forEach((attribute) => {\n    const refinementNames = disjunctiveFacetsRefinements[attribute];\n\n    refinementNames.forEach((refinementName) => {\n      refinements.push(\n        getRefinement(\n          state,\n          'disjunctive',\n          attribute,\n          // We unescape any disjunctive refined values with `unescapeFacetValue` because\n          // they can be escaped on negative numeric values with `escapeFacetValue`.\n          unescapeFacetValue(refinementName),\n          results.disjunctiveFacets\n        )\n      );\n    });\n  });\n\n  Object.keys(hierarchicalFacetsRefinements).forEach((attribute) => {\n    const refinementNames = hierarchicalFacetsRefinements[attribute];\n\n    refinementNames.forEach((refinement) => {\n      refinements.push(\n        getRefinement(\n          state,\n          'hierarchical',\n          attribute,\n          refinement,\n          results.hierarchicalFacets\n        )\n      );\n    });\n  });\n\n  Object.keys(numericRefinements).forEach((attribute) => {\n    const operators = numericRefinements[attribute];\n\n    Object.keys(operators).forEach((operatorOriginal) => {\n      const operator = operatorOriginal as SearchParameters.Operator;\n      const valueOrValues = operators[operator];\n      const refinementNames = Array.isArray(valueOrValues)\n        ? valueOrValues\n        : [valueOrValues];\n\n      refinementNames.forEach((refinementName: any) => {\n        refinements.push({\n          type: 'numeric',\n          attribute,\n          name: `${refinementName}`,\n          numericValue: refinementName,\n          operator: operator as NumericRefinement['operator'],\n        });\n      });\n    });\n  });\n\n  tagRefinements.forEach((refinementName) => {\n    refinements.push({ type: 'tag', attribute: '_tags', name: refinementName });\n  });\n\n  if (includesQuery && state.query && state.query.trim()) {\n    refinements.push({\n      attribute: 'query',\n      type: 'query',\n      name: state.query,\n      query: state.query,\n    });\n  }\n\n  return refinements;\n}\n","import type { InitOptions, Widget } from '../../types';\nimport type { IndexWidget } from '../../widgets/index/index';\n\nexport function getWidgetAttribute(\n  widget: Widget | IndexWidget,\n  initOptions: InitOptions\n): string {\n  const renderState = widget.getWidgetRenderState?.(initOptions);\n\n  let attribute = null;\n\n  if (renderState && renderState.widgetParams) {\n    // casting as widgetParams is checked just before\n    const widgetParams = renderState.widgetParams as Record<string, unknown>;\n\n    if (widgetParams.attribute) {\n      attribute = widgetParams.attribute;\n    } else if (Array.isArray(widgetParams.attributes)) {\n      attribute = widgetParams.attributes[0];\n    }\n  }\n\n  if (typeof attribute !== 'string') {\n    throw new Error(`Could not find the attribute of the widget:\n\n${JSON.stringify(widget)}\n\nPlease check whether the widget's getWidgetRenderState returns widgetParams.attribute correctly.`);\n  }\n\n  return attribute;\n}\n","import type { AlgoliaHit } from '../../types';\n\nexport function addAbsolutePosition<THit extends AlgoliaHit>(\n  hits: THit[],\n  page: number,\n  hitsPerPage: number\n): Array<THit & { __position: number }> {\n  return hits.map((hit, idx) => ({\n    ...hit,\n    __position: hitsPerPage * page + idx + 1,\n  }));\n}\n","import type { AlgoliaHit } from '../../types';\n\nexport function addQueryID<THit extends AlgoliaHit>(\n  hits: THit[],\n  queryID?: string\n): Array<THit & { __queryID?: string }> {\n  if (!queryID) {\n    return hits;\n  }\n  return hits.map((hit) => ({\n    ...hit,\n    __queryID: queryID,\n  }));\n}\n","function isPrimitive(obj: any): boolean {\n  return obj !== Object(obj);\n}\n\nexport function isEqual(first: any, second: any): boolean {\n  if (first === second) {\n    return true;\n  }\n\n  if (\n    isPrimitive(first) ||\n    isPrimitive(second) ||\n    typeof first === 'function' ||\n    typeof second === 'function'\n  ) {\n    return first === second;\n  }\n\n  if (Object.keys(first).length !== Object.keys(second).length) {\n    return false;\n  }\n\n  // @TODO avoid for..of because of the large polyfill\n  // eslint-disable-next-line no-restricted-syntax\n  for (const key of Object.keys(first)) {\n    if (!(key in second)) {\n      return false;\n    }\n\n    if (!isEqual(first[key], second[key])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","// This is the `Number.isFinite()` polyfill recommended by MDN.\n// We do not provide any tests for this function.\n// See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite#Polyfill\n// @MAJOR Replace with the native `Number.isFinite` method\nexport function isFiniteNumber(value: any): value is number {\n  return typeof value === 'number' && isFinite(value);\n}\n","export function isSpecialClick(event: MouseEvent): boolean {\n  const isMiddleClick = event.button === 1;\n\n  return (\n    isMiddleClick ||\n    event.altKey ||\n    event.ctrlKey ||\n    event.metaKey ||\n    event.shiftKey\n  );\n}\n","export function uniq<TItem>(array: TItem[]): TItem[] {\n  return array.filter((value, index, self) => self.indexOf(value) === index);\n}\n","import type { SearchParameters } from 'algoliasearch-helper';\nimport { findIndex } from './findIndex';\nimport { uniq } from './uniq';\n\ntype Merger = (\n  left: SearchParameters,\n  right: SearchParameters\n) => SearchParameters;\n\nconst mergeWithRest: Merger = (left, right) => {\n  const {\n    facets,\n    disjunctiveFacets,\n    facetsRefinements,\n    facetsExcludes,\n    disjunctiveFacetsRefinements,\n    numericRefinements,\n    tagRefinements,\n    hierarchicalFacets,\n    hierarchicalFacetsRefinements,\n    ruleContexts,\n    ...rest\n  } = right;\n\n  return left.setQueryParameters(rest);\n};\n\n// Merge facets\nconst mergeFacets: Merger = (left, right) =>\n  right.facets!.reduce((_, name) => _.addFacet(name), left);\n\nconst mergeDisjunctiveFacets: Merger = (left, right) =>\n  right.disjunctiveFacets.reduce(\n    (_, name) => _.addDisjunctiveFacet(name),\n    left\n  );\n\nconst mergeHierarchicalFacets: Merger = (left, right) =>\n  left.setQueryParameters({\n    hierarchicalFacets: right.hierarchicalFacets.reduce((facets, facet) => {\n      const index = findIndex(facets, (_) => _.name === facet.name);\n\n      if (index === -1) {\n        return facets.concat(facet);\n      }\n\n      const nextFacets = facets.slice();\n      nextFacets.splice(index, 1, facet);\n\n      return nextFacets;\n    }, left.hierarchicalFacets),\n  });\n\n// Merge facet refinements\nconst mergeTagRefinements: Merger = (left, right) =>\n  right.tagRefinements.reduce((_, value) => _.addTagRefinement(value), left);\n\nconst mergeFacetRefinements: Merger = (left, right) =>\n  left.setQueryParameters({\n    facetsRefinements: {\n      ...left.facetsRefinements,\n      ...right.facetsRefinements,\n    },\n  });\n\nconst mergeFacetsExcludes: Merger = (left, right) =>\n  left.setQueryParameters({\n    facetsExcludes: {\n      ...left.facetsExcludes,\n      ...right.facetsExcludes,\n    },\n  });\n\nconst mergeDisjunctiveFacetsRefinements: Merger = (left, right) =>\n  left.setQueryParameters({\n    disjunctiveFacetsRefinements: {\n      ...left.disjunctiveFacetsRefinements,\n      ...right.disjunctiveFacetsRefinements,\n    },\n  });\n\nconst mergeNumericRefinements: Merger = (left, right) =>\n  left.setQueryParameters({\n    numericRefinements: {\n      ...left.numericRefinements,\n      ...right.numericRefinements,\n    },\n  });\n\nconst mergeHierarchicalFacetsRefinements: Merger = (left, right) =>\n  left.setQueryParameters({\n    hierarchicalFacetsRefinements: {\n      ...left.hierarchicalFacetsRefinements,\n      ...right.hierarchicalFacetsRefinements,\n    },\n  });\n\nconst mergeRuleContexts: Merger = (left, right) => {\n  const ruleContexts: string[] = uniq(\n    ([] as any)\n      .concat(left.ruleContexts)\n      .concat(right.ruleContexts)\n      .filter(Boolean)\n  );\n\n  if (ruleContexts.length > 0) {\n    return left.setQueryParameters({\n      ruleContexts,\n    });\n  }\n\n  return left;\n};\n\nexport const mergeSearchParameters = (\n  ...parameters: SearchParameters[]\n): SearchParameters =>\n  parameters.reduce((left, right) => {\n    const hierarchicalFacetsRefinementsMerged =\n      mergeHierarchicalFacetsRefinements(left, right);\n    const hierarchicalFacetsMerged = mergeHierarchicalFacets(\n      hierarchicalFacetsRefinementsMerged,\n      right\n    );\n    const tagRefinementsMerged = mergeTagRefinements(\n      hierarchicalFacetsMerged,\n      right\n    );\n    const numericRefinementsMerged = mergeNumericRefinements(\n      tagRefinementsMerged,\n      right\n    );\n    const disjunctiveFacetsRefinementsMerged =\n      mergeDisjunctiveFacetsRefinements(numericRefinementsMerged, right);\n    const facetsExcludesMerged = mergeFacetsExcludes(\n      disjunctiveFacetsRefinementsMerged,\n      right\n    );\n    const facetRefinementsMerged = mergeFacetRefinements(\n      facetsExcludesMerged,\n      right\n    );\n    const disjunctiveFacetsMerged = mergeDisjunctiveFacets(\n      facetRefinementsMerged,\n      right\n    );\n    const ruleContextsMerged = mergeRuleContexts(\n      disjunctiveFacetsMerged,\n      right\n    );\n    const facetsMerged = mergeFacets(ruleContextsMerged, right);\n\n    return mergeWithRest(facetsMerged, right);\n  });\n","// We aren't using the native `Array.prototype.findIndex` because the refactor away from Lodash is not\n// published as a major version.\n// Relying on the `findIndex` polyfill on user-land, which before was only required for niche use-cases,\n// was decided as too risky.\n// @MAJOR Replace with the native `Array.prototype.findIndex` method\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex\nexport function findIndex<TItem>(\n  array: TItem[],\n  comparator: (value: TItem) => boolean\n): number {\n  if (!Array.isArray(array)) {\n    return -1;\n  }\n\n  for (let i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return i;\n    }\n  }\n  return -1;\n}\n","type RangeOptions = {\n  start?: number;\n  end: number;\n  step?: number;\n};\n\nexport function range({ start = 0, end, step = 1 }: RangeOptions): number[] {\n  // We can't divide by 0 so we re-assign the step to 1 if it happens.\n  const limitStep = step === 0 ? 1 : step;\n\n  // In some cases the array to create has a decimal length.\n  // We therefore need to round the value.\n  // Example:\n  //   { start: 1, end: 5000, step: 500 }\n  //   => Array length = (5000 - 1) / 500 = 9.998\n  const arrayLength = Math.round((end - start) / limitStep);\n\n  return [...Array(arrayLength)].map(\n    (_, current) => start + current * limitStep\n  );\n}\n","import type { InstantSearch, UiState } from '../../types';\nimport type { IndexWidget } from '../../widgets/index/index';\n\nexport function createInitArgs(\n  instantSearchInstance: InstantSearch,\n  parent: IndexWidget,\n  uiState: UiState\n) {\n  const helper = parent.getHelper()!;\n  return {\n    uiState,\n    helper,\n    parent,\n    instantSearchInstance,\n    state: helper.state,\n    renderState: instantSearchInstance.renderState,\n    templatesConfig: instantSearchInstance.templatesConfig,\n    createURL: parent.createURL,\n    scopedResults: [],\n    searchMetadata: {\n      isSearchStalled: instantSearchInstance.status === 'stalled',\n    },\n    status: instantSearchInstance.status,\n    error: instantSearchInstance.error,\n  };\n}\n\nexport function createRenderArgs(\n  instantSearchInstance: InstantSearch,\n  parent: IndexWidget\n) {\n  const results = parent.getResults()!;\n\n  return {\n    helper: parent.getHelper()!,\n    parent,\n    instantSearchInstance,\n    results,\n    scopedResults: parent.getScopedResults(),\n    state: results._state,\n    renderState: instantSearchInstance.renderState,\n    templatesConfig: instantSearchInstance.templatesConfig,\n    createURL: parent.createURL,\n    searchMetadata: {\n      isSearchStalled: instantSearchInstance.status === 'stalled',\n    },\n    status: instantSearchInstance.status,\n    error: instantSearchInstance.error,\n  };\n}\n","import type { HighlightedParts } from '../../types';\nimport { getHighlightFromSiblings } from './getHighlightFromSiblings';\n\nexport function reverseHighlightedParts(parts: HighlightedParts[]) {\n  if (!parts.some((part) => part.isHighlighted)) {\n    return parts.map((part) => ({ ...part, isHighlighted: false }));\n  }\n\n  return parts.map((part, i) => ({\n    ...part,\n    isHighlighted: !getHighlightFromSiblings(parts, i),\n  }));\n}\n","// eslint-disable-next-line no-restricted-globals\ntype BrowserCallback<TReturn> = (params: { window: typeof window }) => TReturn;\ntype SafelyRunOnBrowserOptions<TReturn> = {\n  /**\n   * Fallback to run on server environments.\n   */\n  fallback: () => TReturn;\n};\n\n/**\n * Runs code on browser environments safely.\n */\nexport function safelyRunOnBrowser<TReturn>(\n  callback: BrowserCallback<TReturn>,\n  { fallback }: SafelyRunOnBrowserOptions<TReturn> = {\n    fallback: () => undefined as unknown as TReturn,\n  }\n): TReturn {\n  // eslint-disable-next-line no-restricted-globals\n  if (typeof window === 'undefined') {\n    return fallback();\n  }\n\n  // eslint-disable-next-line no-restricted-globals\n  return callback({ window });\n}\n","type ToArray<T> = T extends unknown[] ? T : T[];\n\nexport function toArray<T>(value: T): ToArray<T> {\n  return (Array.isArray(value) ? value : [value]) as ToArray<T>;\n}\n","import type {\n  AlgoliaSearchHelper as Helper,\n  DerivedHelper,\n  PlainSearchParameters,\n  SearchParameters,\n  SearchResults,\n  AlgoliaSearchHelper,\n} from 'algoliasearch-helper';\nimport algoliasearchHelper from 'algoliasearch-helper';\nimport type {\n  InstantSearch,\n  UiState,\n  IndexUiState,\n  Widget,\n  ScopedResult,\n  SearchClient,\n  IndexRenderState,\n} from '../../types';\nimport {\n  checkIndexUiState,\n  createDocumentationMessageGenerator,\n  resolveSearchParameters,\n  mergeSearchParameters,\n  warning,\n  isIndexWidget,\n  createInitArgs,\n  createRenderArgs,\n} from '../../lib/utils';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'index-widget',\n});\n\nexport type IndexWidgetParams = {\n  indexName: string;\n  indexId?: string;\n};\n\nexport type IndexInitOptions = {\n  instantSearchInstance: InstantSearch;\n  parent: IndexWidget | null;\n  uiState: UiState;\n};\n\nexport type IndexRenderOptions = {\n  instantSearchInstance: InstantSearch;\n};\n\ntype WidgetSearchParametersOptions = Parameters<\n  NonNullable<Widget['getWidgetSearchParameters']>\n>[1];\ntype LocalWidgetSearchParametersOptions = WidgetSearchParametersOptions & {\n  initialSearchParameters: SearchParameters;\n};\n\nexport type IndexWidgetDescription = {\n  $$type: 'ais.index';\n  $$widgetType: 'ais.index';\n};\n\nexport type IndexWidget = Omit<\n  Widget<IndexWidgetDescription & { widgetParams: IndexWidgetParams }>,\n  'getWidgetUiState' | 'getWidgetState'\n> & {\n  getIndexName(): string;\n  getIndexId(): string;\n  getHelper(): Helper | null;\n  getResults(): SearchResults | null;\n  getScopedResults(): ScopedResult[];\n  getParent(): IndexWidget | null;\n  getWidgets(): Array<Widget | IndexWidget>;\n  createURL(state: SearchParameters): string;\n\n  addWidgets(widgets: Array<Widget | IndexWidget>): IndexWidget;\n  removeWidgets(widgets: Array<Widget | IndexWidget>): IndexWidget;\n\n  init(options: IndexInitOptions): void;\n  render(options: IndexRenderOptions): void;\n  dispose(): void;\n  /**\n   * @deprecated\n   */\n  getWidgetState(uiState: UiState): UiState;\n  getWidgetUiState<TUiState extends UiState = UiState>(\n    uiState: TUiState\n  ): TUiState;\n  getWidgetSearchParameters(\n    searchParameters: SearchParameters,\n    searchParametersOptions: { uiState: IndexUiState }\n  ): SearchParameters;\n  refreshUiState(): void;\n};\n\n/**\n * This is the same content as helper._change / setState, but allowing for extra\n * UiState to be synchronized.\n * see: https://github.com/algolia/algoliasearch-helper-js/blob/6b835ffd07742f2d6b314022cce6848f5cfecd4a/src/algoliasearch.helper.js#L1311-L1324\n */\nfunction privateHelperSetState(\n  helper: AlgoliaSearchHelper,\n  {\n    state,\n    isPageReset,\n    _uiState,\n  }: {\n    state: SearchParameters;\n    isPageReset?: boolean;\n    _uiState?: IndexUiState;\n  }\n) {\n  if (state !== helper.state) {\n    helper.state = state;\n\n    helper.emit('change', {\n      state: helper.state,\n      results: helper.lastResults,\n      isPageReset,\n      _uiState,\n    });\n  }\n}\n\ntype WidgetUiStateOptions = Parameters<\n  NonNullable<Widget['getWidgetUiState']>\n>[1];\n\nfunction getLocalWidgetsUiState(\n  widgets: Array<Widget | IndexWidget>,\n  widgetStateOptions: WidgetUiStateOptions,\n  initialUiState: IndexUiState = {}\n) {\n  return widgets.reduce((uiState, widget) => {\n    if (isIndexWidget(widget)) {\n      return uiState;\n    }\n\n    if (!widget.getWidgetUiState && !widget.getWidgetState) {\n      return uiState;\n    }\n\n    if (widget.getWidgetUiState) {\n      return widget.getWidgetUiState(uiState, widgetStateOptions);\n    }\n\n    return widget.getWidgetState!(uiState, widgetStateOptions);\n  }, initialUiState);\n}\n\nfunction getLocalWidgetsSearchParameters(\n  widgets: Array<Widget | IndexWidget>,\n  widgetSearchParametersOptions: LocalWidgetSearchParametersOptions\n): SearchParameters {\n  const { initialSearchParameters, ...rest } = widgetSearchParametersOptions;\n\n  return widgets\n    .filter((widget) => !isIndexWidget(widget))\n    .reduce<SearchParameters>((state, widget) => {\n      if (!widget.getWidgetSearchParameters) {\n        return state;\n      }\n\n      return widget.getWidgetSearchParameters(state, rest);\n    }, initialSearchParameters);\n}\n\nfunction resetPageFromWidgets(widgets: Array<Widget | IndexWidget>): void {\n  const indexWidgets = widgets.filter(isIndexWidget);\n\n  if (indexWidgets.length === 0) {\n    return;\n  }\n\n  indexWidgets.forEach((widget) => {\n    const widgetHelper = widget.getHelper()!;\n\n    privateHelperSetState(widgetHelper, {\n      state: widgetHelper.state.resetPage(),\n      isPageReset: true,\n    });\n\n    resetPageFromWidgets(widget.getWidgets());\n  });\n}\n\nfunction resolveScopedResultsFromWidgets(\n  widgets: Array<Widget | IndexWidget>\n): ScopedResult[] {\n  const indexWidgets = widgets.filter(isIndexWidget);\n\n  return indexWidgets.reduce<ScopedResult[]>((scopedResults, current) => {\n    return scopedResults.concat(\n      {\n        indexId: current.getIndexId(),\n        results: current.getResults()!,\n        helper: current.getHelper()!,\n      },\n      ...resolveScopedResultsFromWidgets(current.getWidgets())\n    );\n  }, []);\n}\n\nconst index = (widgetParams: IndexWidgetParams): IndexWidget => {\n  if (widgetParams === undefined || widgetParams.indexName === undefined) {\n    throw new Error(withUsage('The `indexName` option is required.'));\n  }\n\n  const { indexName, indexId = indexName } = widgetParams;\n\n  let localWidgets: Array<Widget | IndexWidget> = [];\n  let localUiState: IndexUiState = {};\n  let localInstantSearchInstance: InstantSearch | null = null;\n  let localParent: IndexWidget | null = null;\n  let helper: Helper | null = null;\n  let derivedHelper: DerivedHelper | null = null;\n\n  return {\n    $$type: 'ais.index',\n    $$widgetType: 'ais.index',\n\n    getIndexName() {\n      return indexName;\n    },\n\n    getIndexId() {\n      return indexId;\n    },\n\n    getHelper() {\n      return helper;\n    },\n\n    getResults() {\n      return derivedHelper && derivedHelper.lastResults;\n    },\n\n    getScopedResults() {\n      const widgetParent = this.getParent();\n\n      // If the widget is the root, we consider itself as the only sibling.\n      const widgetSiblings = widgetParent ? widgetParent.getWidgets() : [this];\n\n      return resolveScopedResultsFromWidgets(widgetSiblings);\n    },\n\n    getParent() {\n      return localParent;\n    },\n\n    createURL(nextState: SearchParameters) {\n      return localInstantSearchInstance!._createURL({\n        [indexId]: getLocalWidgetsUiState(localWidgets, {\n          searchParameters: nextState,\n          helper: helper!,\n        }),\n      });\n    },\n\n    getWidgets() {\n      return localWidgets;\n    },\n\n    addWidgets(widgets) {\n      if (!Array.isArray(widgets)) {\n        throw new Error(\n          withUsage('The `addWidgets` method expects an array of widgets.')\n        );\n      }\n\n      if (\n        widgets.some(\n          (widget) =>\n            typeof widget.init !== 'function' &&\n            typeof widget.render !== 'function'\n        )\n      ) {\n        throw new Error(\n          withUsage(\n            'The widget definition expects a `render` and/or an `init` method.'\n          )\n        );\n      }\n\n      localWidgets = localWidgets.concat(widgets);\n\n      if (localInstantSearchInstance && Boolean(widgets.length)) {\n        privateHelperSetState(helper!, {\n          state: getLocalWidgetsSearchParameters(localWidgets, {\n            uiState: localUiState,\n            initialSearchParameters: helper!.state,\n          }),\n          _uiState: localUiState,\n        });\n\n        // We compute the render state before calling `init` in a separate loop\n        // to construct the whole render state object that is then passed to\n        // `init`.\n        widgets.forEach((widget) => {\n          if (widget.getRenderState) {\n            const renderState = widget.getRenderState(\n              localInstantSearchInstance!.renderState[this.getIndexId()] || {},\n              createInitArgs(\n                localInstantSearchInstance!,\n                this,\n                localInstantSearchInstance!._initialUiState\n              )\n            );\n\n            storeRenderState({\n              renderState,\n              instantSearchInstance: localInstantSearchInstance!,\n              parent: this,\n            });\n          }\n        });\n\n        widgets.forEach((widget) => {\n          if (widget.init) {\n            widget.init(\n              createInitArgs(\n                localInstantSearchInstance!,\n                this,\n                localInstantSearchInstance!._initialUiState\n              )\n            );\n          }\n        });\n\n        localInstantSearchInstance.scheduleSearch();\n      }\n\n      return this;\n    },\n\n    removeWidgets(widgets) {\n      if (!Array.isArray(widgets)) {\n        throw new Error(\n          withUsage('The `removeWidgets` method expects an array of widgets.')\n        );\n      }\n\n      if (widgets.some((widget) => typeof widget.dispose !== 'function')) {\n        throw new Error(\n          withUsage('The widget definition expects a `dispose` method.')\n        );\n      }\n\n      localWidgets = localWidgets.filter(\n        (widget) => widgets.indexOf(widget) === -1\n      );\n\n      if (localInstantSearchInstance && Boolean(widgets.length)) {\n        const nextState = widgets.reduce((state, widget) => {\n          // the `dispose` method exists at this point we already assert it\n          const next = widget.dispose!({\n            helper: helper!,\n            state,\n            parent: this,\n          });\n\n          return next || state;\n        }, helper!.state);\n\n        localUiState = getLocalWidgetsUiState(localWidgets, {\n          searchParameters: nextState,\n          helper: helper!,\n        });\n\n        helper!.setState(\n          getLocalWidgetsSearchParameters(localWidgets, {\n            uiState: localUiState,\n            initialSearchParameters: nextState,\n          })\n        );\n\n        if (localWidgets.length) {\n          localInstantSearchInstance.scheduleSearch();\n        }\n      }\n\n      return this;\n    },\n\n    init({ instantSearchInstance, parent, uiState }: IndexInitOptions) {\n      if (helper !== null) {\n        // helper is already initialized, therefore we do not need to set up\n        // any listeners\n        return;\n      }\n\n      localInstantSearchInstance = instantSearchInstance;\n      localParent = parent;\n      localUiState = uiState[indexId] || {};\n\n      // The `mainHelper` is already defined at this point. The instance is created\n      // inside InstantSearch at the `start` method, which occurs before the `init`\n      // step.\n      const mainHelper = instantSearchInstance.mainHelper!;\n      const parameters = getLocalWidgetsSearchParameters(localWidgets, {\n        uiState: localUiState,\n        initialSearchParameters: new algoliasearchHelper.SearchParameters({\n          index: indexName,\n        }),\n      });\n\n      // This Helper is only used for state management we do not care about the\n      // `searchClient`. Only the \"main\" Helper created at the `InstantSearch`\n      // level is aware of the client.\n      helper = algoliasearchHelper(\n        {} as SearchClient,\n        parameters.index,\n        parameters\n      );\n\n      // We forward the call to `search` to the \"main\" instance of the Helper\n      // which is responsible for managing the queries (it's the only one that is\n      // aware of the `searchClient`).\n      helper.search = () => {\n        if (instantSearchInstance.onStateChange) {\n          instantSearchInstance.onStateChange({\n            uiState: instantSearchInstance.mainIndex.getWidgetUiState({}),\n            setUiState: (nextState) =>\n              instantSearchInstance.setUiState(nextState, false),\n          });\n\n          // We don't trigger a search when controlled because it becomes the\n          // responsibility of `setUiState`.\n          return mainHelper;\n        }\n\n        return mainHelper.search();\n      };\n\n      helper.searchWithoutTriggeringOnStateChange = () => {\n        return mainHelper.search();\n      };\n\n      // We use the same pattern for the `searchForFacetValues`.\n      helper.searchForFacetValues = (\n        facetName,\n        facetValue,\n        maxFacetHits,\n        userState: PlainSearchParameters\n      ) => {\n        const state = helper!.state.setQueryParameters(userState);\n\n        return mainHelper.searchForFacetValues(\n          facetName,\n          facetValue,\n          maxFacetHits,\n          state\n        );\n      };\n\n      derivedHelper = mainHelper.derive(() =>\n        mergeSearchParameters(...resolveSearchParameters(this))\n      );\n\n      const indexInitialResults =\n        instantSearchInstance._initialResults?.[this.getIndexId()];\n\n      if (indexInitialResults) {\n        // We restore the shape of the results provided to the instance to respect\n        // the helper's structure.\n        const results = new algoliasearchHelper.SearchResults(\n          new algoliasearchHelper.SearchParameters(indexInitialResults.state),\n          indexInitialResults.results\n        );\n\n        derivedHelper.lastResults = results;\n        helper.lastResults = results;\n      }\n\n      // Subscribe to the Helper state changes for the page before widgets\n      // are initialized. This behavior mimics the original one of the Helper.\n      // It makes sense to replicate it at the `init` step. We have another\n      // listener on `change` below, once `init` is done.\n      helper.on('change', ({ isPageReset }) => {\n        if (isPageReset) {\n          resetPageFromWidgets(localWidgets);\n        }\n      });\n\n      derivedHelper.on('search', () => {\n        // The index does not manage the \"staleness\" of the search. This is the\n        // responsibility of the main instance. It does not make sense to manage\n        // it at the index level because it's either: all of them or none of them\n        // that are stalled. The queries are performed into a single network request.\n        instantSearchInstance.scheduleStalledRender();\n\n        if (__DEV__) {\n          checkIndexUiState({ index: this, indexUiState: localUiState });\n        }\n      });\n\n      derivedHelper.on('result', ({ results }) => {\n        // The index does not render the results it schedules a new render\n        // to let all the other indices emit their own results. It allows us to\n        // run the render process in one pass.\n        instantSearchInstance.scheduleRender();\n\n        // the derived helper is the one which actually searches, but the helper\n        // which is exposed e.g. via instance.helper, doesn't search, and thus\n        // does not have access to lastResults, which it used to in pre-federated\n        // search behavior.\n        helper!.lastResults = results;\n      });\n\n      // We compute the render state before calling `init` in a separate loop\n      // to construct the whole render state object that is then passed to\n      // `init`.\n      localWidgets.forEach((widget) => {\n        if (widget.getRenderState) {\n          const renderState = widget.getRenderState(\n            instantSearchInstance.renderState[this.getIndexId()] || {},\n            createInitArgs(instantSearchInstance, this, uiState)\n          );\n\n          storeRenderState({\n            renderState,\n            instantSearchInstance,\n            parent: this,\n          });\n        }\n      });\n\n      localWidgets.forEach((widget) => {\n        warning(\n          // if it has NO getWidgetState or if it has getWidgetUiState, we don't warn\n          // aka we warn if there's _only_ getWidgetState\n          !widget.getWidgetState || Boolean(widget.getWidgetUiState),\n          'The `getWidgetState` method is renamed `getWidgetUiState` and will no longer exist under that name in InstantSearch.js 5.x. Please use `getWidgetUiState` instead.'\n        );\n\n        if (widget.init) {\n          widget.init(createInitArgs(instantSearchInstance, this, uiState));\n        }\n      });\n\n      // Subscribe to the Helper state changes for the `uiState` once widgets\n      // are initialized. Until the first render, state changes are part of the\n      // configuration step. This is mainly for backward compatibility with custom\n      // widgets. When the subscription happens before the `init` step, the (static)\n      // configuration of the widget is pushed in the URL. That's what we want to avoid.\n      // https://github.com/algolia/instantsearch.js/pull/994/commits/4a672ae3fd78809e213de0368549ef12e9dc9454\n      helper.on('change', (event) => {\n        const { state } = event;\n\n        const _uiState = (event as any)._uiState;\n\n        localUiState = getLocalWidgetsUiState(\n          localWidgets,\n          {\n            searchParameters: state,\n            helper: helper!,\n          },\n          _uiState || {}\n        );\n\n        // We don't trigger an internal change when controlled because it\n        // becomes the responsibility of `setUiState`.\n        if (!instantSearchInstance.onStateChange) {\n          instantSearchInstance.onInternalStateChange();\n        }\n      });\n\n      if (indexInitialResults) {\n        // If there are initial results, we're not notified of the next results\n        // because we don't trigger an initial search. We therefore need to directly\n        // schedule a render that will render the results injected on the helper.\n        instantSearchInstance.scheduleRender();\n      }\n    },\n\n    render({ instantSearchInstance }: IndexRenderOptions) {\n      if (!this.getResults()) {\n        return;\n      }\n\n      localWidgets.forEach((widget) => {\n        if (widget.getRenderState) {\n          const renderState = widget.getRenderState(\n            instantSearchInstance.renderState[this.getIndexId()] || {},\n            createRenderArgs(instantSearchInstance, this)\n          );\n\n          storeRenderState({\n            renderState,\n            instantSearchInstance,\n            parent: this,\n          });\n        }\n      });\n\n      localWidgets.forEach((widget) => {\n        // At this point, all the variables used below are set. Both `helper`\n        // and `derivedHelper` have been created at the `init` step. The attribute\n        // `lastResults` might be `null` though. It's possible that a stalled render\n        // happens before the result e.g with a dynamically added index the request might\n        // be delayed. The render is triggered for the complete tree but some parts do\n        // not have results yet.\n\n        if (widget.render) {\n          widget.render(createRenderArgs(instantSearchInstance, this));\n        }\n      });\n    },\n\n    dispose() {\n      localWidgets.forEach((widget) => {\n        if (widget.dispose) {\n          // The dispose function is always called once the instance is started\n          // (it's an effect of `removeWidgets`). The index is initialized and\n          // the Helper is available. We don't care about the return value of\n          // `dispose` because the index is removed. We can't call `removeWidgets`\n          // because we want to keep the widgets on the instance, to allow idempotent\n          // operations on `add` & `remove`.\n          widget.dispose({\n            helper: helper!,\n            state: helper!.state,\n            parent: this,\n          });\n        }\n      });\n\n      localInstantSearchInstance = null;\n      localParent = null;\n      helper!.removeAllListeners();\n      helper = null;\n\n      derivedHelper!.detach();\n      derivedHelper = null;\n    },\n\n    getWidgetUiState<TUiState extends UiState = UiState>(uiState: TUiState) {\n      return localWidgets\n        .filter(isIndexWidget)\n        .reduce<TUiState>(\n          (previousUiState, innerIndex) =>\n            innerIndex.getWidgetUiState(previousUiState),\n          {\n            ...uiState,\n            [indexId]: {\n              ...uiState[indexId],\n              ...localUiState,\n            },\n          }\n        );\n    },\n\n    getWidgetState(uiState: UiState) {\n      warning(\n        false,\n        'The `getWidgetState` method is renamed `getWidgetUiState` and will no longer exist under that name in InstantSearch.js 5.x. Please use `getWidgetUiState` instead.'\n      );\n\n      return this.getWidgetUiState(uiState);\n    },\n\n    getWidgetSearchParameters(searchParameters, { uiState }) {\n      return getLocalWidgetsSearchParameters(localWidgets, {\n        uiState,\n        initialSearchParameters: searchParameters,\n      });\n    },\n\n    refreshUiState() {\n      localUiState = getLocalWidgetsUiState(\n        localWidgets,\n        {\n          searchParameters: this.getHelper()!.state,\n          helper: this.getHelper()!,\n        },\n        localUiState\n      );\n    },\n  };\n};\n\nexport default index;\n\nfunction storeRenderState({\n  renderState,\n  instantSearchInstance,\n  parent,\n}: {\n  renderState: IndexRenderState;\n  instantSearchInstance: InstantSearch;\n  parent?: IndexWidget;\n}) {\n  const parentIndexName = parent\n    ? parent.getIndexId()\n    : instantSearchInstance.mainIndex.getIndexId();\n\n  instantSearchInstance.renderState = {\n    ...instantSearchInstance.renderState,\n    [parentIndexName]: {\n      ...instantSearchInstance.renderState[parentIndexName],\n      ...renderState,\n    },\n  };\n}\n","import type { SearchParameters } from 'algoliasearch-helper';\nimport type { IndexWidget } from '../../widgets/index/index';\n\nexport function resolveSearchParameters(\n  current: IndexWidget\n): SearchParameters[] {\n  let parent = current.getParent();\n  let states = [current.getHelper()!.state];\n\n  while (parent !== null) {\n    states = [parent.getHelper()!.state].concat(states);\n    parent = parent.getParent();\n  }\n\n  return states;\n}\n","const NAMESPACE = 'ais';\n\ntype SuitOptions = {\n  descendantName?: string;\n  modifierName?: string;\n};\n\ntype SuitSelector = (names?: SuitOptions) => string;\n\nexport const component =\n  (componentName: string): SuitSelector =>\n  ({ descendantName, modifierName }: SuitOptions = {}) => {\n    const descendent = descendantName ? `-${descendantName}` : '';\n    const modifier = modifierName ? `--${modifierName}` : '';\n\n    return `${NAMESPACE}-${componentName}${descendent}${modifier}`;\n  };\n","import type { Hit } from '../types';\nimport { component } from '../lib/suit';\nimport { getPropertyByPath, TAG_REPLACEMENT, warning } from '../lib/utils';\n\nexport type HighlightOptions = {\n  // @MAJOR string should no longer be allowed to be a path, only array can be a path\n  attribute: string | string[];\n  highlightedTagName?: string;\n  hit: Partial<Hit>;\n  cssClasses?: Partial<{\n    highlighted: string;\n  }>;\n};\n\nconst suit = component('Highlight');\n\nexport default function highlight({\n  attribute,\n  highlightedTagName = 'mark',\n  hit,\n  cssClasses = {},\n}: HighlightOptions): string {\n  const highlightAttributeResult = getPropertyByPath(\n    hit._highlightResult,\n    attribute\n  );\n\n  // @MAJOR fallback to attribute value if highlight is not found\n  warning(\n    highlightAttributeResult,\n    `Could not enable highlight for \"${attribute}\", will display an empty string.\nPlease check whether this attribute exists and is either searchable or specified in \\`attributesToHighlight\\`.\n\nSee: https://alg.li/highlighting\n`\n  );\n\n  const { value: attributeValue = '' } = highlightAttributeResult || {};\n\n  // cx is not used, since it would be bundled as a dependency for Vue & Angular\n  const className =\n    suit({\n      descendantName: 'highlighted',\n    }) + (cssClasses.highlighted ? ` ${cssClasses.highlighted}` : '');\n\n  return attributeValue\n    .replace(\n      new RegExp(TAG_REPLACEMENT.highlightPreTag, 'g'),\n      `<${highlightedTagName} class=\"${className}\">`\n    )\n    .replace(\n      new RegExp(TAG_REPLACEMENT.highlightPostTag, 'g'),\n      `</${highlightedTagName}>`\n    );\n}\n","import type { Hit } from '../types';\nimport {\n  TAG_REPLACEMENT,\n  getPropertyByPath,\n  getHighlightedParts,\n  reverseHighlightedParts,\n  concatHighlightedParts,\n  warning,\n} from '../lib/utils';\nimport { component } from '../lib/suit';\n\nexport type ReverseHighlightOptions = {\n  // @MAJOR string should no longer be allowed to be a path, only array can be a path\n  attribute: string | string[];\n  highlightedTagName?: string;\n  hit: Partial<Hit>;\n  cssClasses?: Partial<{\n    highlighted: string;\n  }>;\n};\n\nconst suit = component('ReverseHighlight');\n\nexport default function reverseHighlight({\n  attribute,\n  highlightedTagName = 'mark',\n  hit,\n  cssClasses = {},\n}: ReverseHighlightOptions): string {\n  const highlightAttributeResult = getPropertyByPath(\n    hit._highlightResult,\n    attribute\n  );\n\n  // @MAJOR fallback to attribute value if highlight is not found\n  warning(\n    highlightAttributeResult,\n    `Could not enable reverse highlight for \"${attribute}\", will display an empty string.\nPlease check whether this attribute exists and is either searchable or specified in \\`attributesToHighlight\\`.\n\nSee: https://alg.li/highlighting\n`\n  );\n\n  const { value: attributeValue = '' } = highlightAttributeResult || {};\n\n  // cx is not used, since it would be bundled as a dependency for Vue & Angular\n  const className =\n    suit({\n      descendantName: 'highlighted',\n    }) + (cssClasses.highlighted ? ` ${cssClasses.highlighted}` : '');\n\n  const reverseHighlightedValue = concatHighlightedParts(\n    reverseHighlightedParts(getHighlightedParts(attributeValue))\n  );\n\n  return reverseHighlightedValue\n    .replace(\n      new RegExp(TAG_REPLACEMENT.highlightPreTag, 'g'),\n      `<${highlightedTagName} class=\"${className}\">`\n    )\n    .replace(\n      new RegExp(TAG_REPLACEMENT.highlightPostTag, 'g'),\n      `</${highlightedTagName}>`\n    );\n}\n","import type { Hit } from '../types';\nimport { component } from '../lib/suit';\nimport { TAG_REPLACEMENT, getPropertyByPath, warning } from '../lib/utils';\n\nexport type SnippetOptions = {\n  // @MAJOR string should no longer be allowed to be a path, only array can be a path\n  attribute: string | string[];\n  highlightedTagName?: string;\n  hit: Partial<Hit>;\n  cssClasses?: {\n    highlighted?: string;\n  };\n};\n\nconst suit = component('Snippet');\n\nexport default function snippet({\n  attribute,\n  highlightedTagName = 'mark',\n  hit,\n  cssClasses = {},\n}: SnippetOptions): string {\n  const snippetAttributeResult = getPropertyByPath(\n    hit._snippetResult,\n    attribute\n  );\n\n  // @MAJOR fallback to attribute value if snippet is not found\n  warning(\n    snippetAttributeResult,\n    `Could not enable snippet for \"${attribute}\", will display an empty string.\nPlease check whether this attribute exists and is specified in \\`attributesToSnippet\\`.\n\nSee: https://alg.li/highlighting\n`\n  );\n\n  const { value: attributeValue = '' } = snippetAttributeResult || {};\n\n  // cx is not used, since it would be bundled as a dependency for Vue & Angular\n  const className =\n    suit({\n      descendantName: 'highlighted',\n    }) + (cssClasses.highlighted ? ` ${cssClasses.highlighted}` : '');\n\n  return attributeValue\n    .replace(\n      new RegExp(TAG_REPLACEMENT.highlightPreTag, 'g'),\n      `<${highlightedTagName} class=\"${className}\">`\n    )\n    .replace(\n      new RegExp(TAG_REPLACEMENT.highlightPostTag, 'g'),\n      `</${highlightedTagName}>`\n    );\n}\n","import type { Hit } from '../types';\nimport {\n  TAG_REPLACEMENT,\n  getPropertyByPath,\n  getHighlightedParts,\n  reverseHighlightedParts,\n  concatHighlightedParts,\n  warning,\n} from '../lib/utils';\nimport { component } from '../lib/suit';\n\nexport type ReverseSnippetOptions = {\n  // @MAJOR string should no longer be allowed to be a path, only array can be a path\n  attribute: string | string[];\n  highlightedTagName?: string;\n  hit: Partial<Hit>;\n  cssClasses?: Partial<{\n    highlighted: string;\n  }>;\n};\n\nconst suit = component('ReverseSnippet');\n\nexport default function reverseSnippet({\n  attribute,\n  highlightedTagName = 'mark',\n  hit,\n  cssClasses = {},\n}: ReverseSnippetOptions): string {\n  const snippetAttributeResult = getPropertyByPath(\n    hit._snippetResult,\n    attribute\n  );\n\n  // @MAJOR fallback to attribute value if snippet is not found\n  warning(\n    snippetAttributeResult,\n    `Could not enable reverse snippet for \"${attribute}\", will display an empty string.\nPlease check whether this attribute exists and is specified in \\`attributesToSnippet\\`.\n\nSee: https://alg.li/highlighting\n`\n  );\n\n  const { value: attributeValue = '' } = snippetAttributeResult || {};\n\n  // cx is not used, since it would be bundled as a dependency for Vue & Angular\n  const className =\n    suit({\n      descendantName: 'highlighted',\n    }) + (cssClasses.highlighted ? ` ${cssClasses.highlighted}` : '');\n\n  const reverseHighlightedValue = concatHighlightedParts(\n    reverseHighlightedParts(getHighlightedParts(attributeValue))\n  );\n\n  return reverseHighlightedValue\n    .replace(\n      new RegExp(TAG_REPLACEMENT.highlightPreTag, 'g'),\n      `<${highlightedTagName} class=\"${className}\">`\n    )\n    .replace(\n      new RegExp(TAG_REPLACEMENT.highlightPostTag, 'g'),\n      `</${highlightedTagName}>`\n    );\n}\n","import type { InsightsClientMethod, InsightsClientPayload } from '../types';\nimport { warning, serializePayload, deserializePayload } from '../lib/utils';\n\nexport function readDataAttributes(domElement: HTMLElement): {\n  method: InsightsClientMethod;\n  payload: Partial<InsightsClientPayload>;\n} {\n  const method = domElement.getAttribute(\n    'data-insights-method'\n  ) as InsightsClientMethod;\n\n  const serializedPayload = domElement.getAttribute('data-insights-payload');\n\n  if (typeof serializedPayload !== 'string') {\n    throw new Error(\n      'The insights helper expects `data-insights-payload` to be a base64-encoded JSON string.'\n    );\n  }\n\n  try {\n    const payload =\n      deserializePayload<Partial<InsightsClientPayload>>(serializedPayload);\n    return { method, payload };\n  } catch (error) {\n    throw new Error(\n      'The insights helper was unable to parse `data-insights-payload`.'\n    );\n  }\n}\n\nexport function hasDataAttributes(domElement: HTMLElement): boolean {\n  return domElement.hasAttribute('data-insights-method');\n}\n\nexport function writeDataAttributes({\n  method,\n  payload,\n}: {\n  method: InsightsClientMethod;\n  payload: Partial<InsightsClientPayload>;\n}): string {\n  if (typeof payload !== 'object') {\n    throw new Error(`The insights helper expects the payload to be an object.`);\n  }\n\n  let serializedPayload: string;\n\n  try {\n    serializedPayload = serializePayload(payload);\n  } catch (error) {\n    throw new Error(`Could not JSON serialize the payload object.`);\n  }\n\n  return `data-insights-method=\"${method}\" data-insights-payload=\"${serializedPayload}\"`;\n}\n\n/**\n * @deprecated This function will be still supported in 4.x releases, but not further. It is replaced by the `insights` middleware. For more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/\n */\nexport default function insights(\n  method: InsightsClientMethod,\n  payload: Partial<InsightsClientPayload>\n): string {\n  warning(\n    false,\n    `\\`insights\\` function has been deprecated. It is still supported in 4.x releases, but not further. It is replaced by the \\`insights\\` middleware.\n\nFor more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/`\n  );\n  return writeDataAttributes({ method, payload });\n}\n","import { warning } from '../lib/utils';\n\nexport const ANONYMOUS_TOKEN_COOKIE_KEY = '_ALGOLIA';\n\nfunction getCookie(name: string): string | undefined {\n  if (typeof document !== 'object' || typeof document.cookie !== 'string') {\n    return undefined;\n  }\n\n  const prefix = `${name}=`;\n  const cookies = document.cookie.split(';');\n  for (let i = 0; i < cookies.length; i++) {\n    let cookie = cookies[i];\n    while (cookie.charAt(0) === ' ') {\n      cookie = cookie.substring(1);\n    }\n    if (cookie.indexOf(prefix) === 0) {\n      return cookie.substring(prefix.length, cookie.length);\n    }\n  }\n  return undefined;\n}\n\nexport function getInsightsAnonymousUserTokenInternal(): string | undefined {\n  return getCookie(ANONYMOUS_TOKEN_COOKIE_KEY);\n}\n\n/**\n * @deprecated This function will be still supported in 4.x releases, but not further. It is replaced by the `insights` middleware. For more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/\n */\nexport default function getInsightsAnonymousUserToken(): string | undefined {\n  warning(\n    false,\n    `\\`getInsightsAnonymousUserToken\\` function has been deprecated. It is still supported in 4.x releases, but not further. It is replaced by the \\`insights\\` middleware.\n\nFor more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/`\n  );\n  return getInsightsAnonymousUserTokenInternal();\n}\n","export function formatNumber(value: number, numberLocale?: string) {\n  return value.toLocaleString(numberLocale);\n}\n","import type { UiState, IndexUiState, StateMapping } from '../../types';\n\nfunction getIndexStateWithoutConfigure<TIndexUiState extends IndexUiState>(\n  uiState: TIndexUiState\n): Omit<TIndexUiState, 'configure'> {\n  const { configure, ...trackedUiState } = uiState;\n  return trackedUiState;\n}\n\n// technically a URL could contain any key, since users provide it,\n// which is why the input to this function is UiState, not something\n// which excludes \"configure\" as this function does.\nexport default function simpleStateMapping<\n  TUiState extends UiState = UiState\n>(): StateMapping<TUiState, TUiState> {\n  return {\n    stateToRoute(uiState) {\n      return Object.keys(uiState).reduce(\n        (state, indexId) => ({\n          ...state,\n          [indexId]: getIndexStateWithoutConfigure(uiState[indexId]),\n        }),\n        {} as TUiState\n      );\n    },\n\n    routeToState(routeState = {} as TUiState) {\n      return Object.keys(routeState).reduce(\n        (state, indexId) => ({\n          ...state,\n          [indexId]: getIndexStateWithoutConfigure(routeState[indexId]),\n        }),\n        {} as TUiState\n      );\n    },\n  };\n}\n","'use strict';\n\nvar formats = require('./formats');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset, kind, format) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n            || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    format,\n    formatter,\n    encodeValuesOnly,\n    charset\n) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        });\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : undefined }];\n    } else if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n        var value = typeof key === 'object' && key.value !== undefined ? key.value : obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(prefix, key) : prefix\n            : prefix + (allowDots ? '.' + key : '[' + key + ']');\n\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            strictNullHandling,\n            skipNulls,\n            encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            format,\n            formatter,\n            encodeValuesOnly,\n            charset\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && opts.encoder !== undefined && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.format,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n","import qs from 'qs';\nimport type { Router, UiState } from '../../types';\nimport { safelyRunOnBrowser } from '../utils';\n\ntype CreateURL<TRouteState> = (args: {\n  qsModule: typeof qs;\n  routeState: TRouteState;\n  location: Location;\n}) => string;\n\ntype ParseURL<TRouteState> = (args: {\n  qsModule: typeof qs;\n  location: Location;\n}) => TRouteState;\n\ntype BrowserHistoryArgs<TRouteState> = {\n  windowTitle?: (routeState: TRouteState) => string;\n  writeDelay: number;\n  createURL: CreateURL<TRouteState>;\n  parseURL: ParseURL<TRouteState>;\n  // @MAJOR: The `Location` type is hard to simulate in non-browser environments\n  // so we should accept a subset of it that is easier to work with in any\n  // environments.\n  getLocation(): Location;\n};\n\nconst setWindowTitle = (title?: string): void => {\n  if (title) {\n    // This function is only executed on browsers so we can disable this check.\n    // eslint-disable-next-line no-restricted-globals\n    window.document.title = title;\n  }\n};\n\nclass BrowserHistory<TRouteState> implements Router<TRouteState> {\n  /**\n   * Transforms a UI state into a title for the page.\n   */\n  private readonly windowTitle?: BrowserHistoryArgs<TRouteState>['windowTitle'];\n  /**\n   * Time in milliseconds before performing a write in the history.\n   * It prevents from adding too many entries in the history and\n   * makes the back button more usable.\n   *\n   * @default 400\n   */\n  private readonly writeDelay: Required<\n    BrowserHistoryArgs<TRouteState>\n  >['writeDelay'];\n  /**\n   * Creates a full URL based on the route state.\n   * The storage adaptor maps all syncable keys to the query string of the URL.\n   */\n  private readonly _createURL: Required<\n    BrowserHistoryArgs<TRouteState>\n  >['createURL'];\n  /**\n   * Parses the URL into a route state.\n   * It should be symmetrical to `createURL`.\n   */\n  private readonly parseURL: Required<\n    BrowserHistoryArgs<TRouteState>\n  >['parseURL'];\n  /**\n   * Returns the location to store in the history.\n   * @default () => window.location\n   */\n  private readonly getLocation: Required<\n    BrowserHistoryArgs<TRouteState>\n  >['getLocation'];\n\n  private writeTimer?: ReturnType<typeof setTimeout>;\n  private _onPopState?(event: PopStateEvent): void;\n\n  /**\n   * Indicates if last action was back/forward in the browser.\n   */\n  private inPopState: boolean = false;\n\n  /**\n   * Indicates whether the history router is disposed or not.\n   */\n  private isDisposed: boolean = false;\n\n  /**\n   * Indicates the window.history.length before the last call to\n   * window.history.pushState (called in `write`).\n   * It allows to determine if a `pushState` has been triggered elsewhere,\n   * and thus to prevent the `write` method from calling `pushState`.\n   */\n  private latestAcknowledgedHistory: number = 0;\n\n  /**\n   * Initializes a new storage provider that syncs the search state to the URL\n   * using web APIs (`window.location.pushState` and `onpopstate` event).\n   */\n  public constructor({\n    windowTitle,\n    writeDelay = 400,\n    createURL,\n    parseURL,\n    getLocation,\n  }: BrowserHistoryArgs<TRouteState>) {\n    this.windowTitle = windowTitle;\n    this.writeTimer = undefined;\n    this.writeDelay = writeDelay;\n    this._createURL = createURL;\n    this.parseURL = parseURL;\n    this.getLocation = getLocation;\n\n    safelyRunOnBrowser(({ window }) => {\n      const title = this.windowTitle && this.windowTitle(this.read());\n      setWindowTitle(title);\n\n      this.latestAcknowledgedHistory = window.history.length;\n    });\n  }\n\n  /**\n   * Reads the URL and returns a syncable UI search state.\n   */\n  public read(): TRouteState {\n    return this.parseURL({ qsModule: qs, location: this.getLocation() });\n  }\n\n  /**\n   * Pushes a search state into the URL.\n   */\n  public write(routeState: TRouteState): void {\n    safelyRunOnBrowser(({ window }) => {\n      const url = this.createURL(routeState);\n      const title = this.windowTitle && this.windowTitle(routeState);\n\n      if (this.writeTimer) {\n        clearTimeout(this.writeTimer);\n      }\n\n      this.writeTimer = setTimeout(() => {\n        setWindowTitle(title);\n\n        if (this.shouldWrite(url)) {\n          window.history.pushState(routeState, title || '', url);\n          this.latestAcknowledgedHistory = window.history.length;\n        }\n        this.inPopState = false;\n        this.writeTimer = undefined;\n      }, this.writeDelay);\n    });\n  }\n\n  /**\n   * Sets a callback on the `onpopstate` event of the history API of the current page.\n   * It enables the URL sync to keep track of the changes.\n   */\n  public onUpdate(callback: (routeState: TRouteState) => void): void {\n    this._onPopState = () => {\n      if (this.writeTimer) {\n        clearTimeout(this.writeTimer);\n        this.writeTimer = undefined;\n      }\n\n      this.inPopState = true;\n\n      // We always read the state from the URL because the state of the history\n      // can be incorect in some cases (e.g. using React Router).\n      callback(this.read());\n    };\n\n    safelyRunOnBrowser(({ window }) => {\n      window.addEventListener('popstate', this._onPopState!);\n    });\n  }\n\n  /**\n   * Creates a complete URL from a given syncable UI state.\n   *\n   * It always generates the full URL, not a relative one.\n   * This allows to handle cases like using a <base href>.\n   * See: https://github.com/algolia/instantsearch.js/issues/790\n   */\n  public createURL(routeState: TRouteState): string {\n    return this._createURL({\n      qsModule: qs,\n      routeState,\n      location: this.getLocation(),\n    });\n  }\n\n  /**\n   * Removes the event listener and cleans up the URL.\n   */\n  public dispose(): void {\n    this.isDisposed = true;\n\n    safelyRunOnBrowser(({ window }) => {\n      if (this._onPopState) {\n        window.removeEventListener('popstate', this._onPopState);\n      }\n    });\n\n    if (this.writeTimer) {\n      clearTimeout(this.writeTimer);\n    }\n\n    this.write({} as TRouteState);\n  }\n\n  private shouldWrite(url: string): boolean {\n    return safelyRunOnBrowser(({ window }) => {\n      // We do want to `pushState` if:\n      // - the router is not disposed, IS.js needs to update the URL\n      // OR\n      // - the last write was from InstantSearch.js\n      // (unlike a SPA, where it would have last written)\n      const lastPushWasByISAfterDispose = !(\n        this.isDisposed &&\n        this.latestAcknowledgedHistory !== window.history.length\n      );\n\n      return (\n        // When the last state change was through popstate, the IS.js state changes,\n        // but that should not write the URL.\n        !this.inPopState &&\n        // When the previous pushState after dispose was by IS.js, we want to write the URL.\n        lastPushWasByISAfterDispose &&\n        // When the URL is the same as the current one, we do not want to write it.\n        url !== window.location.href\n      );\n    });\n  }\n}\n\nexport default function historyRouter<TRouteState = UiState>({\n  createURL = ({ qsModule, routeState, location }) => {\n    const { protocol, hostname, port = '', pathname, hash } = location;\n    const queryString = qsModule.stringify(routeState);\n    const portWithPrefix = port === '' ? '' : `:${port}`;\n\n    // IE <= 11 has no proper `location.origin` so we cannot rely on it.\n    if (!queryString) {\n      return `${protocol}//${hostname}${portWithPrefix}${pathname}${hash}`;\n    }\n\n    return `${protocol}//${hostname}${portWithPrefix}${pathname}?${queryString}${hash}`;\n  },\n  parseURL = ({ qsModule, location }) => {\n    // `qs` by default converts arrays with more than 20 items to an object.\n    // We want to avoid this because the data structure manipulated can therefore vary.\n    // Setting the limit to `100` seems a good number because the engine's default is 100\n    // (it can go up to 1000 but it is very unlikely to select more than 100 items in the UI).\n    //\n    // Using an `arrayLimit` of `n` allows `n + 1` items.\n    //\n    // See:\n    //   - https://github.com/ljharb/qs#parsing-arrays\n    //   - https://www.algolia.com/doc/api-reference/api-parameters/maxValuesPerFacet/\n    return qsModule.parse(location.search.slice(1), {\n      arrayLimit: 99,\n    }) as unknown as TRouteState;\n  },\n  writeDelay = 400,\n  windowTitle,\n  getLocation = () => {\n    return safelyRunOnBrowser<Location>(({ window }) => window.location, {\n      fallback: () => {\n        throw new Error(\n          'You need to provide `getLocation` to the `history` router in environments where `window` does not exist.'\n        );\n      },\n    });\n  },\n}: Partial<BrowserHistoryArgs<TRouteState>> = {}): BrowserHistory<TRouteState> {\n  return new BrowserHistory({\n    createURL,\n    parseURL,\n    writeDelay,\n    windowTitle,\n    getLocation,\n  });\n}\n","'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = {\n    'default': Format.RFC3986,\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return String(value);\n        }\n    },\n    RFC1738: Format.RFC1738,\n    RFC3986: Format.RFC3986\n};\n","'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n            val = utils.maybeMap(\n                parseArrayValue(part.slice(pos + 1), options),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n","'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n","import simpleStateMapping from '../lib/stateMappings/simple';\nimport historyRouter from '../lib/routers/history';\nimport type {\n  Router,\n  StateMapping,\n  UiState,\n  InternalMiddleware,\n  CreateURL,\n} from '../types';\nimport { isEqual } from '../lib/utils';\n\nexport type RouterProps<\n  TUiState extends UiState = UiState,\n  TRouteState = TUiState\n> = {\n  router?: Router<TRouteState>;\n  // ideally stateMapping should be required if TRouteState is given,\n  // but there's no way to check if a generic is provided or the default value.\n  stateMapping?: StateMapping<TUiState, TRouteState>;\n};\n\nexport const createRouterMiddleware = <\n  TUiState extends UiState = UiState,\n  TRouteState = TUiState\n>(\n  props: RouterProps<TUiState, TRouteState> = {}\n): InternalMiddleware<TUiState> => {\n  const {\n    router = historyRouter<TRouteState>(),\n    // We have to cast simpleStateMapping as a StateMapping<TUiState, TRouteState>.\n    // this is needed because simpleStateMapping is StateMapping<TUiState, TUiState>.\n    // While it's only used when UiState and RouteState are the same, unfortunately\n    // TypeScript still considers them separate types.\n    stateMapping = simpleStateMapping<TUiState>() as unknown as StateMapping<\n      TUiState,\n      TRouteState\n    >,\n  } = props;\n\n  return ({ instantSearchInstance }) => {\n    function topLevelCreateURL(nextState: TUiState) {\n      const uiState: TUiState = Object.keys(nextState).reduce(\n        (acc, indexId) => ({\n          ...acc,\n          [indexId]: nextState[indexId],\n        }),\n        instantSearchInstance.mainIndex.getWidgetUiState<TUiState>(\n          {} as TUiState\n        )\n      );\n\n      const route = stateMapping.stateToRoute(uiState);\n\n      return router.createURL(route);\n    }\n\n    // casting to UiState here to keep createURL unaware of custom UiState\n    // (as long as it's an object, it's ok)\n    instantSearchInstance._createURL = topLevelCreateURL as CreateURL<UiState>;\n\n    let lastRouteState: TRouteState | undefined = undefined;\n\n    const initialUiState = instantSearchInstance._initialUiState;\n\n    return {\n      onStateChange({ uiState }) {\n        const routeState = stateMapping.stateToRoute(uiState);\n\n        if (\n          lastRouteState === undefined ||\n          !isEqual(lastRouteState, routeState)\n        ) {\n          router.write(routeState);\n          lastRouteState = routeState;\n        }\n      },\n\n      subscribe() {\n        instantSearchInstance._initialUiState = {\n          ...initialUiState,\n          ...stateMapping.routeToState(router.read()),\n        };\n\n        router.onUpdate((route) => {\n          instantSearchInstance.setUiState(stateMapping.routeToState(route));\n        });\n      },\n\n      started() {},\n\n      unsubscribe() {\n        router.dispose();\n      },\n    };\n  };\n};\n","import { createInitArgs, safelyRunOnBrowser } from '../lib/utils';\nimport type { InstantSearch, InternalMiddleware, Widget } from '../types';\nimport type { IndexWidget } from '../widgets/index/index';\n\ntype WidgetMetaData = {\n  type: string | undefined;\n  widgetType: string | undefined;\n  params: string[];\n};\n\ntype Payload = {\n  widgets: WidgetMetaData[];\n  ua?: string;\n};\n\nfunction extractPayload(\n  widgets: Array<Widget | IndexWidget>,\n  instantSearchInstance: InstantSearch,\n  payload: Payload\n) {\n  const initOptions = createInitArgs(\n    instantSearchInstance,\n    instantSearchInstance.mainIndex,\n    instantSearchInstance._initialUiState\n  );\n\n  widgets.forEach((widget) => {\n    let widgetParams: Record<string, unknown> = {};\n\n    if (widget.getWidgetRenderState) {\n      const renderState = widget.getWidgetRenderState(initOptions);\n\n      if (renderState && renderState.widgetParams) {\n        // casting, as we just earlier checked widgetParams exists, and thus an object\n        widgetParams = renderState.widgetParams as Record<string, unknown>;\n      }\n    }\n\n    // since we destructure in all widgets, the parameters with defaults are set to \"undefined\"\n    const params = Object.keys(widgetParams).filter(\n      (key) => widgetParams[key] !== undefined\n    );\n\n    payload.widgets.push({\n      type: widget.$$type,\n      widgetType: widget.$$widgetType,\n      params,\n    });\n\n    if (widget.$$type === 'ais.index') {\n      extractPayload(\n        (widget as IndexWidget).getWidgets(),\n        instantSearchInstance,\n        payload\n      );\n    }\n  });\n}\n\nexport function isMetadataEnabled() {\n  return safelyRunOnBrowser(\n    ({ window }) =>\n      window.navigator?.userAgent?.indexOf('Algolia Crawler') > -1,\n    { fallback: () => false }\n  );\n}\n\n/**\n * Exposes the metadata of mounted widgets in a custom\n * `<meta name=\"instantsearch:widgets\" />` tag. The metadata per widget is:\n * - applied parameters\n * - widget name\n * - connector name\n */\nexport function createMetadataMiddleware(): InternalMiddleware {\n  return ({ instantSearchInstance }) => {\n    const payload: Payload = {\n      widgets: [],\n    };\n    const payloadContainer = document.createElement('meta');\n    const refNode = document.querySelector('head')!;\n    payloadContainer.name = 'instantsearch:widgets';\n\n    return {\n      onStateChange() {},\n      subscribe() {\n        // using setTimeout here to delay extraction until widgets have been added in a tick (e.g. Vue)\n        setTimeout(() => {\n          const client = instantSearchInstance.client as any;\n          payload.ua =\n            client.transporter && client.transporter.userAgent\n              ? client.transporter.userAgent.value\n              : client._ua;\n\n          extractPayload(\n            instantSearchInstance.mainIndex.getWidgets(),\n            instantSearchInstance,\n            payload\n          );\n\n          payloadContainer.content = JSON.stringify(payload);\n          refNode.appendChild(payloadContainer);\n        }, 0);\n      },\n\n      started() {},\n\n      unsubscribe() {\n        payloadContainer.remove();\n      },\n    };\n  };\n}\n","import type { AlgoliaSearchHelper } from 'algoliasearch-helper';\nimport algoliasearchHelper from 'algoliasearch-helper';\nimport EventEmitter from '@algolia/events';\n\nimport type { IndexWidget } from '../widgets/index/index';\nimport index from '../widgets/index/index';\nimport version from './version';\nimport createHelpers from './createHelpers';\nimport {\n  createDocumentationMessageGenerator,\n  createDocumentationLink,\n  defer,\n  noop,\n  warning,\n  setIndexHelperState,\n} from './utils';\nimport type {\n  InsightsClient as AlgoliaInsightsClient,\n  SearchClient,\n  Widget,\n  UiState,\n  CreateURL,\n  Middleware,\n  MiddlewareDefinition,\n  RenderState,\n  InitialResults,\n} from '../types';\nimport type { RouterProps } from '../middlewares/createRouterMiddleware';\nimport { createRouterMiddleware } from '../middlewares/createRouterMiddleware';\nimport type { InsightsEvent } from '../middlewares/createInsightsMiddleware';\nimport {\n  createMetadataMiddleware,\n  isMetadataEnabled,\n} from '../middlewares/createMetadataMiddleware';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'instantsearch',\n});\n\nfunction defaultCreateURL() {\n  return '#';\n}\n\n// this purposely breaks typescript's type inference to ensure it's not used\n// as it's used for a default parameter for example\n// source: https://github.com/Microsoft/TypeScript/issues/14829#issuecomment-504042546\ntype NoInfer<T> = [T][T extends any ? 0 : never];\n\n/**\n * Global options for an InstantSearch instance.\n */\nexport type InstantSearchOptions<\n  TUiState extends UiState = UiState,\n  TRouteState = TUiState\n> = {\n  /**\n   * The name of the main index\n   */\n  indexName: string;\n\n  /**\n   * The search client to plug to InstantSearch.js\n   *\n   * Usage:\n   * ```javascript\n   * // Using the default Algolia search client\n   * instantsearch({\n   *   indexName: 'indexName',\n   *   searchClient: algoliasearch('appId', 'apiKey')\n   * });\n   *\n   * // Using a custom search client\n   * instantsearch({\n   *   indexName: 'indexName',\n   *   searchClient: {\n   *     search(requests) {\n   *       // fetch response based on requests\n   *       return response;\n   *     },\n   *     searchForFacetValues(requests) {\n   *       // fetch response based on requests\n   *       return response;\n   *     }\n   *   }\n   * });\n   * ```\n   */\n  searchClient: SearchClient;\n\n  /**\n   * The locale used to display numbers. This will be passed\n   * to `Number.prototype.toLocaleString()`\n   */\n  numberLocale?: string;\n\n  /**\n   * A hook that will be called each time a search needs to be done, with the\n   * helper as a parameter. It's your responsibility to call `helper.search()`.\n   * This option allows you to avoid doing searches at page load for example.\n   */\n  searchFunction?: (helper: AlgoliaSearchHelper) => void;\n\n  /**\n   * Function called when the state changes.\n   *\n   * Using this function makes the instance controlled. This means that you\n   * become in charge of updating the UI state with the `setUiState` function.\n   */\n  onStateChange?: (params: {\n    uiState: TUiState;\n    setUiState(\n      uiState: TUiState | ((previousUiState: TUiState) => TUiState)\n    ): void;\n  }) => void;\n\n  /**\n   * Injects a `uiState` to the `instantsearch` instance. You can use this option\n   * to provide an initial state to a widget. Note that the state is only used\n   * for the first search. To unconditionally pass additional parameters to the\n   * Algolia API, take a look at the `configure` widget.\n   */\n  initialUiState?: NoInfer<TUiState>;\n\n  /**\n   * Time before a search is considered stalled. The default is 200ms\n   */\n  stalledSearchDelay?: number;\n\n  /**\n   * Router configuration used to save the UI State into the URL or any other\n   * client side persistence. Passing `true` will use the default URL options.\n   */\n  routing?: RouterProps<TUiState, TRouteState> | boolean;\n\n  /**\n   * the instance of search-insights to use for sending insights events inside\n   * widgets like `hits`.\n   *\n   * @deprecated This property will be still supported in 4.x releases, but not further. It is replaced by the `insights` middleware. For more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/\n   */\n  insightsClient?: AlgoliaInsightsClient;\n};\n\nexport type InstantSearchStatus = 'idle' | 'loading' | 'stalled' | 'error';\n\n/**\n * The actual implementation of the InstantSearch. This is\n * created using the `instantsearch` factory function.\n * It emits the 'render' event every time a search is done\n */\nclass InstantSearch<\n  TUiState extends UiState = UiState,\n  TRouteState = TUiState\n> extends EventEmitter {\n  public client: InstantSearchOptions['searchClient'];\n  public indexName: string;\n  public insightsClient: AlgoliaInsightsClient | null;\n  public onStateChange: InstantSearchOptions<TUiState>['onStateChange'] | null =\n    null;\n  public helper: AlgoliaSearchHelper | null;\n  public mainHelper: AlgoliaSearchHelper | null;\n  public mainIndex: IndexWidget;\n  public started: boolean;\n  public templatesConfig: Record<string, unknown>;\n  public renderState: RenderState = {};\n  public _stalledSearchDelay: number;\n  public _searchStalledTimer: any;\n  public _initialUiState: TUiState;\n  public _initialResults: InitialResults | null;\n  public _createURL: CreateURL<TUiState>;\n  public _searchFunction?: InstantSearchOptions['searchFunction'];\n  public _mainHelperSearch?: AlgoliaSearchHelper['search'];\n  public middleware: Array<{\n    creator: Middleware;\n    instance: MiddlewareDefinition;\n  }> = [];\n  public sendEventToInsights: (event: InsightsEvent) => void;\n  /**\n   * The status of the search. Can be \"idle\", \"loading\", \"stalled\", or \"error\".\n   */\n  public status: InstantSearchStatus = 'idle';\n  /**\n   * The last returned error from the Search API.\n   * The error gets cleared when the next valid search response is rendered.\n   */\n  public error: Error | undefined = undefined;\n\n  /**\n   * @deprecated use `status === 'stalled'` instead\n   */\n  public get _isSearchStalled(): boolean {\n    warning(\n      false,\n      `\\`InstantSearch._isSearchStalled\\` is deprecated and will be removed in InstantSearch.js 5.0.\n\nUse \\`InstantSearch.status === \"stalled\"\\` instead.`\n    );\n\n    return this.status === 'stalled';\n  }\n\n  public constructor(options: InstantSearchOptions<TUiState, TRouteState>) {\n    super();\n\n    // prevent `render` event listening from causing a warning\n    this.setMaxListeners(100);\n\n    const {\n      indexName = null,\n      numberLocale,\n      initialUiState = {} as TUiState,\n      routing = null,\n      searchFunction,\n      stalledSearchDelay = 200,\n      searchClient = null,\n      insightsClient = null,\n      onStateChange = null,\n    } = options;\n\n    if (indexName === null) {\n      throw new Error(withUsage('The `indexName` option is required.'));\n    }\n\n    if (searchClient === null) {\n      throw new Error(withUsage('The `searchClient` option is required.'));\n    }\n\n    if (typeof searchClient.search !== 'function') {\n      throw new Error(\n        `The \\`searchClient\\` must implement a \\`search\\` method.\n\nSee: https://www.algolia.com/doc/guides/building-search-ui/going-further/backend-search/in-depth/backend-instantsearch/js/`\n      );\n    }\n\n    if (typeof searchClient.addAlgoliaAgent === 'function') {\n      searchClient.addAlgoliaAgent(`instantsearch.js (${version})`);\n    }\n\n    warning(\n      insightsClient === null,\n      `\\`insightsClient\\` property has been deprecated. It is still supported in 4.x releases, but not further. It is replaced by the \\`insights\\` middleware.\n\nFor more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/`\n    );\n\n    if (insightsClient && typeof insightsClient !== 'function') {\n      throw new Error(\n        withUsage('The `insightsClient` option should be a function.')\n      );\n    }\n\n    warning(\n      !(options as any).searchParameters,\n      `The \\`searchParameters\\` option is deprecated and will not be supported in InstantSearch.js 4.x.\n\nYou can replace it with the \\`configure\\` widget:\n\n\\`\\`\\`\nsearch.addWidgets([\n  configure(${JSON.stringify((options as any).searchParameters, null, 2)})\n]);\n\\`\\`\\`\n\nSee ${createDocumentationLink({\n        name: 'configure',\n      })}`\n    );\n\n    this.client = searchClient;\n    this.insightsClient = insightsClient;\n    this.indexName = indexName;\n    this.helper = null;\n    this.mainHelper = null;\n    this.mainIndex = index({\n      indexName,\n    });\n    this.onStateChange = onStateChange;\n\n    this.started = false;\n    this.templatesConfig = {\n      helpers: createHelpers({ numberLocale }),\n      compileOptions: {},\n    };\n\n    this._stalledSearchDelay = stalledSearchDelay;\n    this._searchStalledTimer = null;\n\n    this._createURL = defaultCreateURL;\n    this._initialUiState = initialUiState;\n    this._initialResults = null;\n\n    if (searchFunction) {\n      this._searchFunction = searchFunction;\n    }\n\n    this.sendEventToInsights = noop;\n\n    if (routing) {\n      const routerOptions = typeof routing === 'boolean' ? undefined : routing;\n      this.use(createRouterMiddleware(routerOptions));\n    }\n\n    if (isMetadataEnabled()) {\n      this.use(createMetadataMiddleware());\n    }\n  }\n\n  /**\n   * Hooks a middleware into the InstantSearch lifecycle.\n   */\n  public use(...middleware: Middleware[]): this {\n    const newMiddlewareList = middleware.map((fn) => {\n      const newMiddleware = {\n        subscribe: noop,\n        started: noop,\n        unsubscribe: noop,\n        onStateChange: noop,\n        ...fn({\n          instantSearchInstance: this as unknown as InstantSearch<\n            UiState,\n            UiState\n          >,\n        }),\n      };\n      this.middleware.push({\n        creator: fn,\n        instance: newMiddleware,\n      });\n      return newMiddleware;\n    });\n\n    // If the instance has already started, we directly subscribe the\n    // middleware so they're notified of changes.\n    if (this.started) {\n      newMiddlewareList.forEach((m) => {\n        m.subscribe();\n        m.started();\n      });\n    }\n\n    return this;\n  }\n\n  /**\n   * Removes a middleware from the InstantSearch lifecycle.\n   */\n  public unuse(...middlewareToUnuse: Middleware[]): this {\n    this.middleware\n      .filter((m) => middlewareToUnuse.includes(m.creator))\n      .forEach((m) => m.instance.unsubscribe());\n\n    this.middleware = this.middleware.filter(\n      (m) => !middlewareToUnuse.includes(m.creator)\n    );\n\n    return this;\n  }\n\n  // @major we shipped with EXPERIMENTAL_use, but have changed that to just `use` now\n  public EXPERIMENTAL_use(...middleware: Middleware[]): this {\n    warning(\n      false,\n      'The middleware API is now considered stable, so we recommend replacing `EXPERIMENTAL_use` with `use` before upgrading to the next major version.'\n    );\n\n    return this.use(...middleware);\n  }\n\n  /**\n   * Adds a widget to the search instance.\n   * A widget can be added either before or after InstantSearch has started.\n   * @param widget The widget to add to InstantSearch.\n   *\n   * @deprecated This method will still be supported in 4.x releases, but not further. It is replaced by `addWidgets([widget])`.\n   */\n  public addWidget(widget: Widget) {\n    warning(\n      false,\n      'addWidget will still be supported in 4.x releases, but not further. It is replaced by `addWidgets([widget])`'\n    );\n\n    return this.addWidgets([widget]);\n  }\n\n  /**\n   * Adds multiple widgets to the search instance.\n   * Widgets can be added either before or after InstantSearch has started.\n   * @param widgets The array of widgets to add to InstantSearch.\n   */\n  public addWidgets(widgets: Array<Widget | IndexWidget>) {\n    if (!Array.isArray(widgets)) {\n      throw new Error(\n        withUsage(\n          'The `addWidgets` method expects an array of widgets. Please use `addWidget`.'\n        )\n      );\n    }\n\n    if (\n      widgets.some(\n        (widget) =>\n          typeof widget.init !== 'function' &&\n          typeof widget.render !== 'function'\n      )\n    ) {\n      throw new Error(\n        withUsage(\n          'The widget definition expects a `render` and/or an `init` method.'\n        )\n      );\n    }\n\n    this.mainIndex.addWidgets(widgets);\n\n    return this;\n  }\n\n  /**\n   * Removes a widget from the search instance.\n   * @deprecated This method will still be supported in 4.x releases, but not further. It is replaced by `removeWidgets([widget])`\n   * @param widget The widget instance to remove from InstantSearch.\n   *\n   * The widget must implement a `dispose()` method to clear its state.\n   */\n  public removeWidget(widget: Widget | IndexWidget) {\n    warning(\n      false,\n      'removeWidget will still be supported in 4.x releases, but not further. It is replaced by `removeWidgets([widget])`'\n    );\n\n    return this.removeWidgets([widget]);\n  }\n\n  /**\n   * Removes multiple widgets from the search instance.\n   * @param widgets Array of widgets instances to remove from InstantSearch.\n   *\n   * The widgets must implement a `dispose()` method to clear their states.\n   */\n  public removeWidgets(widgets: Array<Widget | IndexWidget>) {\n    if (!Array.isArray(widgets)) {\n      throw new Error(\n        withUsage(\n          'The `removeWidgets` method expects an array of widgets. Please use `removeWidget`.'\n        )\n      );\n    }\n\n    if (widgets.some((widget) => typeof widget.dispose !== 'function')) {\n      throw new Error(\n        withUsage('The widget definition expects a `dispose` method.')\n      );\n    }\n\n    this.mainIndex.removeWidgets(widgets);\n\n    return this;\n  }\n\n  /**\n   * Ends the initialization of InstantSearch.js and triggers the\n   * first search. This method should be called after all widgets have been added\n   * to the instance of InstantSearch.js. InstantSearch.js also supports adding and removing\n   * widgets after the start as an **EXPERIMENTAL** feature.\n   */\n  public start() {\n    if (this.started) {\n      throw new Error(\n        withUsage('The `start` method has already been called once.')\n      );\n    }\n\n    // This Helper is used for the queries, we don't care about its state. The\n    // states are managed at the `index` level. We use this Helper to create\n    // DerivedHelper scoped into the `index` widgets.\n    // In Vue InstantSearch' hydrate, a main helper gets set before start, so\n    // we need to respect this helper as a way to keep all listeners correct.\n    const mainHelper =\n      this.mainHelper || algoliasearchHelper(this.client, this.indexName);\n\n    mainHelper.search = () => {\n      this.status = 'loading';\n      // @MAJOR: use scheduleRender here\n      // For now, widgets don't expect to be rendered at the start of `loading`,\n      // so it would be a breaking change to add an extra render. We don't have\n      // these guarantees about the render event, thus emitting it once more\n      // isn't a breaking change.\n      this.emit('render');\n\n      // This solution allows us to keep the exact same API for the users but\n      // under the hood, we have a different implementation. It should be\n      // completely transparent for the rest of the codebase. Only this module\n      // is impacted.\n      return mainHelper.searchOnlyWithDerivedHelpers();\n    };\n\n    if (this._searchFunction) {\n      // this client isn't used to actually search, but required for the helper\n      // to not throw errors\n      const fakeClient = {\n        search: () => new Promise(noop),\n      } as any as SearchClient;\n\n      this._mainHelperSearch = mainHelper.search.bind(mainHelper);\n      mainHelper.search = () => {\n        const mainIndexHelper = this.mainIndex.getHelper();\n        const searchFunctionHelper = algoliasearchHelper(\n          fakeClient,\n          mainIndexHelper!.state.index,\n          mainIndexHelper!.state\n        );\n        searchFunctionHelper.once('search', ({ state }) => {\n          mainIndexHelper!.overrideStateWithoutTriggeringChangeEvent(state);\n          this._mainHelperSearch!();\n        });\n        // Forward state changes from `searchFunctionHelper` to `mainIndexHelper`\n        searchFunctionHelper.on('change', ({ state }) => {\n          mainIndexHelper!.setState(state);\n        });\n        this._searchFunction!(searchFunctionHelper);\n        return mainHelper;\n      };\n    }\n\n    // Only the \"main\" Helper emits the `error` event vs the one for `search`\n    // and `results` that are also emitted on the derived one.\n    mainHelper.on('error', ({ error }) => {\n      if (!(error instanceof Error)) {\n        // typescript lies here, error is in some cases { name: string, message: string }\n        const err = error as Record<string, any>;\n        error = Object.keys(err).reduce((acc, key) => {\n          (acc as any)[key] = err[key];\n          return acc;\n        }, new Error(err.message));\n      }\n      // If an error is emitted, it is re-thrown by events. In previous versions\n      // we emitted {error}, which is thrown as:\n      // \"Uncaught, unspecified \\\"error\\\" event. ([object Object])\"\n      // To avoid breaking changes, we make the error available in both\n      // `error` and `error.error`\n      // @MAJOR emit only error\n      (error as any).error = error;\n      this.error = error;\n      this.status = 'error';\n      this.scheduleRender(false);\n\n      // This needs to execute last because it throws the error.\n      this.emit('error', error);\n    });\n\n    this.mainHelper = mainHelper;\n\n    this.middleware.forEach(({ instance }) => {\n      instance.subscribe();\n    });\n\n    this.mainIndex.init({\n      instantSearchInstance: this as unknown as InstantSearch<UiState, UiState>,\n      parent: null,\n      uiState: this._initialUiState,\n    });\n\n    if (this._initialResults) {\n      const originalScheduleSearch = this.scheduleSearch;\n      // We don't schedule a first search when initial results are provided\n      // because we already have the results to render. This skips the initial\n      // network request on the browser on `start`.\n      this.scheduleSearch = defer(noop);\n      // We also skip the initial network request when widgets are dynamically\n      // added in the first tick (that's the case in all the framework-based flavors).\n      // When we add a widget to `index`, it calls `scheduleSearch`. We can rely\n      // on our `defer` util to restore the original `scheduleSearch` value once\n      // widgets are added to hook back to the regular lifecycle.\n      defer(() => {\n        this.scheduleSearch = originalScheduleSearch;\n      })();\n    }\n    // We only schedule a search when widgets have been added before `start()`\n    // because there are listeners that can use these results.\n    // This is especially useful in framework-based flavors that wait for\n    // dynamically-added widgets to trigger a network request. It avoids\n    // having to batch this initial network request with the one coming from\n    // `addWidgets()`.\n    // Later, we could also skip `index()` widgets and widgets that don't read\n    // the results, but this is an optimization that has a very low impact for now.\n    else if (this.mainIndex.getWidgets().length > 0) {\n      this.scheduleSearch();\n    }\n\n    // Keep the previous reference for legacy purpose, some pattern use\n    // the direct Helper access `search.helper` (e.g multi-index).\n    this.helper = this.mainIndex.getHelper();\n\n    // track we started the search if we add more widgets,\n    // to init them directly after add\n    this.started = true;\n\n    this.middleware.forEach(({ instance }) => {\n      instance.started();\n    });\n  }\n\n  /**\n   * Removes all widgets without triggering a search afterwards. This is an **EXPERIMENTAL** feature,\n   * if you find an issue with it, please\n   * [open an issue](https://github.com/algolia/instantsearch.js/issues/new?title=Problem%20with%20dispose).\n   * @return {undefined} This method does not return anything\n   */\n  public dispose(): void {\n    this.scheduleSearch.cancel();\n    this.scheduleRender.cancel();\n    clearTimeout(this._searchStalledTimer);\n\n    this.removeWidgets(this.mainIndex.getWidgets());\n    this.mainIndex.dispose();\n\n    // You can not start an instance two times, therefore a disposed instance\n    // needs to set started as false otherwise this can not be restarted at a\n    // later point.\n    this.started = false;\n\n    // The helper needs to be reset to perform the next search from a fresh state.\n    // If not reset, it would use the state stored before calling `dispose()`.\n    this.removeAllListeners();\n    this.mainHelper!.removeAllListeners();\n    this.mainHelper = null;\n    this.helper = null;\n\n    this.middleware.forEach(({ instance }) => {\n      instance.unsubscribe();\n    });\n  }\n\n  public scheduleSearch = defer(() => {\n    if (this.started) {\n      this.mainHelper!.search();\n    }\n  });\n\n  public scheduleRender = defer((shouldResetStatus: boolean = true) => {\n    if (!this.mainHelper!.hasPendingRequests()) {\n      clearTimeout(this._searchStalledTimer);\n      this._searchStalledTimer = null;\n\n      if (shouldResetStatus) {\n        this.status = 'idle';\n        this.error = undefined;\n      }\n    }\n\n    this.mainIndex.render({\n      instantSearchInstance: this as unknown as InstantSearch<UiState, UiState>,\n    });\n\n    this.emit('render');\n  });\n\n  public scheduleStalledRender() {\n    if (!this._searchStalledTimer) {\n      this._searchStalledTimer = setTimeout(() => {\n        this.status = 'stalled';\n        this.scheduleRender();\n      }, this._stalledSearchDelay);\n    }\n  }\n\n  /**\n   * Set the UI state and trigger a search.\n   * @param uiState The next UI state or a function computing it from the current state\n   * @param callOnStateChange private parameter used to know if the method is called from a state change\n   */\n  public setUiState(\n    uiState: TUiState | ((previousUiState: TUiState) => TUiState),\n    callOnStateChange: boolean = true\n  ): void {\n    if (!this.mainHelper) {\n      throw new Error(\n        withUsage('The `start` method needs to be called before `setUiState`.')\n      );\n    }\n\n    // We refresh the index UI state to update the local UI state that the\n    // main index passes to the function form of `setUiState`.\n    this.mainIndex.refreshUiState();\n    const nextUiState =\n      typeof uiState === 'function'\n        ? uiState(this.mainIndex.getWidgetUiState({}) as TUiState)\n        : uiState;\n\n    if (this.onStateChange && callOnStateChange) {\n      this.onStateChange({\n        uiState: nextUiState,\n        setUiState: (finalUiState) => {\n          setIndexHelperState(\n            typeof finalUiState === 'function'\n              ? finalUiState(nextUiState)\n              : finalUiState,\n            this.mainIndex\n          );\n\n          this.scheduleSearch();\n          this.onInternalStateChange();\n        },\n      });\n    } else {\n      setIndexHelperState(nextUiState, this.mainIndex);\n\n      this.scheduleSearch();\n      this.onInternalStateChange();\n    }\n  }\n\n  public getUiState(): TUiState {\n    if (this.started) {\n      // We refresh the index UI state to make sure changes from `refine` are taken in account\n      this.mainIndex.refreshUiState();\n    }\n\n    return this.mainIndex.getWidgetUiState({}) as TUiState;\n  }\n\n  public onInternalStateChange = defer(() => {\n    const nextUiState = this.mainIndex.getWidgetUiState({});\n\n    this.middleware.forEach(({ instance }) => {\n      instance.onStateChange({\n        uiState: nextUiState,\n      });\n    });\n  });\n\n  public createURL(nextState: TUiState = {} as TUiState): string {\n    if (!this.started) {\n      throw new Error(\n        withUsage('The `start` method needs to be called before `createURL`.')\n      );\n    }\n\n    return this._createURL(nextState);\n  }\n\n  public refresh() {\n    if (!this.mainHelper) {\n      throw new Error(\n        withUsage('The `start` method needs to be called before `refresh`.')\n      );\n    }\n\n    this.mainHelper.clearCache().search();\n  }\n}\n\nexport default InstantSearch;\n","import type { AlgoliaSearchHelper, SearchResults } from 'algoliasearch-helper';\nimport {\n  checkRendering,\n  clearRefinements,\n  getRefinements,\n  createDocumentationMessageGenerator,\n  noop,\n  uniq,\n  mergeSearchParameters,\n} from '../../lib/utils';\nimport type {\n  TransformItems,\n  CreateURL,\n  Connector,\n  WidgetRenderState,\n  ScopedResult,\n} from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'clear-refinements',\n  connector: true,\n});\n\nexport type ClearRefinementsConnectorParams = {\n  /**\n   * The attributes to include in the refinements to clear (all by default). Cannot be used with `excludedAttributes`.\n   */\n  includedAttributes?: string[];\n\n  /**\n   * The attributes to exclude from the refinements to clear. Cannot be used with `includedAttributes`.\n   */\n  excludedAttributes?: string[];\n\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<string>;\n};\n\nexport type ClearRefinementsRenderState = {\n  /**\n   * Triggers the clear of all the currently refined values.\n   */\n  refine: () => void;\n\n  /**\n   * Indicates if search state is refined.\n   * @deprecated prefer reading canRefine\n   */\n  hasRefinements: boolean;\n\n  /**\n   * Indicates if search state can be refined.\n   */\n  canRefine: boolean;\n\n  /**\n   * Creates a url for the next state when refinements are cleared.\n   */\n  createURL: CreateURL<void>;\n};\n\nexport type ClearRefinementsWidgetDescription = {\n  $$type: 'ais.clearRefinements';\n  renderState: ClearRefinementsRenderState;\n  indexRenderState: {\n    clearRefinements: WidgetRenderState<\n      ClearRefinementsRenderState,\n      ClearRefinementsConnectorParams\n    >;\n  };\n};\n\nexport type ClearRefinementsConnector = Connector<\n  ClearRefinementsWidgetDescription,\n  ClearRefinementsConnectorParams\n>;\n\ntype AttributesToClear = {\n  helper: AlgoliaSearchHelper;\n  items: string[];\n};\n\nconst connectClearRefinements: ClearRefinementsConnector =\n  function connectClearRefinements(renderFn, unmountFn = noop) {\n    checkRendering(renderFn, withUsage());\n\n    return (widgetParams) => {\n      const {\n        includedAttributes = [],\n        excludedAttributes = ['query'],\n        transformItems = ((items) => items) as NonNullable<\n          ClearRefinementsConnectorParams['transformItems']\n        >,\n      } = widgetParams || {};\n\n      if (\n        widgetParams &&\n        widgetParams.includedAttributes &&\n        widgetParams.excludedAttributes\n      ) {\n        throw new Error(\n          withUsage(\n            'The options `includedAttributes` and `excludedAttributes` cannot be used together.'\n          )\n        );\n      }\n\n      type ConnectorState = {\n        refine(): void;\n        createURL(): string;\n        attributesToClear: AttributesToClear[];\n      };\n\n      const connectorState: ConnectorState = {\n        refine: noop,\n        createURL: () => '',\n        attributesToClear: [],\n      };\n\n      const cachedRefine = () => connectorState.refine();\n      const cachedCreateURL = () => connectorState.createURL();\n\n      return {\n        $$type: 'ais.clearRefinements',\n\n        init(initOptions) {\n          const { instantSearchInstance } = initOptions;\n\n          renderFn(\n            {\n              ...this.getWidgetRenderState(initOptions),\n              instantSearchInstance,\n            },\n            true\n          );\n        },\n\n        render(renderOptions) {\n          const { instantSearchInstance } = renderOptions;\n\n          renderFn(\n            {\n              ...this.getWidgetRenderState(renderOptions),\n              instantSearchInstance,\n            },\n            false\n          );\n        },\n\n        dispose() {\n          unmountFn();\n        },\n\n        getRenderState(renderState, renderOptions) {\n          return {\n            ...renderState,\n            clearRefinements: this.getWidgetRenderState(renderOptions),\n          };\n        },\n\n        getWidgetRenderState({ createURL, scopedResults, results }) {\n          connectorState.attributesToClear = scopedResults.reduce<\n            Array<ReturnType<typeof getAttributesToClear>>\n          >((attributesToClear, scopedResult) => {\n            return attributesToClear.concat(\n              getAttributesToClear({\n                scopedResult,\n                includedAttributes,\n                excludedAttributes,\n                transformItems,\n                results,\n              })\n            );\n          }, []);\n\n          connectorState.refine = () => {\n            connectorState.attributesToClear.forEach(\n              ({ helper: indexHelper, items }) => {\n                indexHelper\n                  .setState(\n                    clearRefinements({\n                      helper: indexHelper,\n                      attributesToClear: items,\n                    })\n                  )\n                  .search();\n              }\n            );\n          };\n\n          connectorState.createURL = () =>\n            createURL(\n              mergeSearchParameters(\n                ...connectorState.attributesToClear.map(\n                  ({ helper: indexHelper, items }) => {\n                    return clearRefinements({\n                      helper: indexHelper,\n                      attributesToClear: items,\n                    });\n                  }\n                )\n              )\n            );\n\n          const canRefine = connectorState.attributesToClear.some(\n            (attributeToClear) => attributeToClear.items.length > 0\n          );\n\n          return {\n            canRefine,\n            hasRefinements: canRefine,\n            refine: cachedRefine,\n            createURL: cachedCreateURL,\n            widgetParams,\n          };\n        },\n      };\n    };\n  };\n\nfunction getAttributesToClear({\n  scopedResult,\n  includedAttributes,\n  excludedAttributes,\n  transformItems,\n  results,\n}: {\n  scopedResult: ScopedResult;\n  includedAttributes: string[];\n  excludedAttributes: string[];\n  transformItems: TransformItems<string>;\n  results: SearchResults | undefined;\n}): AttributesToClear {\n  const includesQuery =\n    includedAttributes.indexOf('query') !== -1 ||\n    excludedAttributes.indexOf('query') === -1;\n\n  return {\n    helper: scopedResult.helper,\n    items: transformItems(\n      uniq(\n        getRefinements(\n          scopedResult.results,\n          scopedResult.helper.state,\n          includesQuery\n        )\n          .map((refinement) => refinement.attribute)\n          .filter(\n            (attribute) =>\n              // If the array is empty (default case), we keep all the attributes\n              includedAttributes.length === 0 ||\n              // Otherwise, only add the specified attributes\n              includedAttributes.indexOf(attribute) !== -1\n          )\n          .filter(\n            (attribute) =>\n              // If the query is included, we ignore the default `excludedAttributes = ['query']`\n              (attribute === 'query' && includesQuery) ||\n              // Otherwise, ignore the excluded attributes\n              excludedAttributes.indexOf(attribute) === -1\n          )\n      ),\n      { results }\n    ),\n  };\n}\n\nexport default connectClearRefinements;\n","import type {\n  HighlightOptions,\n  ReverseHighlightOptions,\n  SnippetOptions,\n  ReverseSnippetOptions,\n} from '../helpers';\nimport {\n  highlight,\n  reverseHighlight,\n  snippet,\n  reverseSnippet,\n  insights,\n} from '../helpers';\nimport type {\n  Hit,\n  HoganHelpers,\n  InsightsClientMethod,\n  InsightsClientPayload,\n} from '../types';\nimport { formatNumber } from './formatNumber';\n\ntype DefaultHoganHelpers = HoganHelpers<\n  | 'formatNumber'\n  | 'highlight'\n  | 'reverseHighlight'\n  | 'snippet'\n  | 'reverseSnippet'\n  | 'insights'\n>;\n\nexport default function hoganHelpers({\n  numberLocale,\n}: {\n  numberLocale?: string;\n}): DefaultHoganHelpers {\n  return {\n    formatNumber(value, render) {\n      return formatNumber(Number(render(value)), numberLocale);\n    },\n    highlight(options, render) {\n      try {\n        const highlightOptions: Omit<HighlightOptions, 'hit'> =\n          JSON.parse(options);\n\n        return render(\n          highlight({\n            ...highlightOptions,\n            hit: this,\n          })\n        );\n      } catch (error) {\n        throw new Error(`\nThe highlight helper expects a JSON object of the format:\n{ \"attribute\": \"name\", \"highlightedTagName\": \"mark\" }`);\n      }\n    },\n    reverseHighlight(options, render) {\n      try {\n        const reverseHighlightOptions: Omit<ReverseHighlightOptions, 'hit'> =\n          JSON.parse(options);\n\n        return render(\n          reverseHighlight({\n            ...reverseHighlightOptions,\n            hit: this,\n          })\n        );\n      } catch (error) {\n        throw new Error(`\n  The reverseHighlight helper expects a JSON object of the format:\n  { \"attribute\": \"name\", \"highlightedTagName\": \"mark\" }`);\n      }\n    },\n    snippet(options, render) {\n      try {\n        const snippetOptions: Omit<SnippetOptions, 'hit'> = JSON.parse(options);\n\n        return render(\n          snippet({\n            ...snippetOptions,\n            hit: this,\n          })\n        );\n      } catch (error) {\n        throw new Error(`\nThe snippet helper expects a JSON object of the format:\n{ \"attribute\": \"name\", \"highlightedTagName\": \"mark\" }`);\n      }\n    },\n    reverseSnippet(options, render) {\n      try {\n        const reverseSnippetOptions: Omit<ReverseSnippetOptions, 'hit'> =\n          JSON.parse(options);\n\n        return render(\n          reverseSnippet({\n            ...reverseSnippetOptions,\n            hit: this,\n          })\n        );\n      } catch (error) {\n        throw new Error(`\n  The reverseSnippet helper expects a JSON object of the format:\n  { \"attribute\": \"name\", \"highlightedTagName\": \"mark\" }`);\n      }\n    },\n    insights(this: Hit, options, render) {\n      try {\n        type InsightsHelperOptions = {\n          method: InsightsClientMethod;\n          payload: Partial<InsightsClientPayload>;\n        };\n        const { method, payload }: InsightsHelperOptions = JSON.parse(options);\n\n        return render(\n          insights(method, { objectIDs: [this.objectID], ...payload })\n        );\n      } catch (error) {\n        throw new Error(`\nThe insights helper expects a JSON object of the format:\n{ \"method\": \"method-name\", \"payload\": { \"eventName\": \"name of the event\" } }`);\n      }\n    },\n  };\n}\n","export default '4.49.3';\n","import type {\n  AlgoliaSearchHelper,\n  SearchParameters,\n  SearchResults,\n} from 'algoliasearch-helper';\nimport {\n  getRefinements,\n  checkRendering,\n  createDocumentationMessageGenerator,\n  noop,\n  warning,\n} from '../../lib/utils';\nimport type {\n  Refinement,\n  FacetRefinement,\n  NumericRefinement,\n} from '../../lib/utils';\nimport type {\n  Connector,\n  TransformItems,\n  CreateURL,\n  WidgetRenderState,\n} from '../../types';\n\nexport type CurrentRefinementsConnectorParamsRefinement = {\n  /**\n   * The attribute on which the refinement is applied.\n   */\n  attribute: string;\n\n  /**\n   * The type of the refinement.\n   */\n  type:\n    | 'facet'\n    | 'exclude'\n    | 'disjunctive'\n    | 'hierarchical'\n    | 'numeric'\n    | 'query'\n    | 'tag';\n\n  /**\n   * The raw value of the refinement.\n   */\n  value: string | number;\n\n  /**\n   * The label of the refinement to display.\n   */\n  label: string;\n\n  /**\n   * The value of the operator (only if applicable).\n   */\n  operator?: string;\n\n  /**\n   * The number of found items (only if applicable).\n   */\n  count?: number;\n\n  /**\n   * Whether the count is exhaustive (only if applicable).\n   */\n  exhaustive?: boolean;\n};\n\nexport type CurrentRefinementsConnectorParamsItem = {\n  /**\n   * The index name.\n   */\n  indexName: string;\n\n  /**\n   * The attribute on which the refinement is applied.\n   */\n  attribute: string;\n\n  /**\n   * The textual representation of this attribute.\n   */\n  label: string;\n\n  /**\n   * Currently applied refinements.\n   */\n  refinements: CurrentRefinementsConnectorParamsRefinement[];\n\n  /**\n   * Removes the given refinement and triggers a new search.\n   */\n  refine(refinement: CurrentRefinementsConnectorParamsRefinement): void;\n};\n\nexport type CurrentRefinementsConnectorParams = {\n  /**\n   * The attributes to include in the widget (all by default).\n   * Cannot be used with `excludedAttributes`.\n   *\n   * @default `[]`\n   */\n  includedAttributes?: string[];\n\n  /**\n   * The attributes to exclude from the widget.\n   * Cannot be used with `includedAttributes`.\n   *\n   * @default `['query']`\n   */\n  excludedAttributes?: string[];\n\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<CurrentRefinementsConnectorParamsItem>;\n};\n\nexport type CurrentRefinementsRenderState = {\n  /**\n   * All the currently refined items, grouped by attribute.\n   */\n  items: CurrentRefinementsConnectorParamsItem[];\n\n  /**\n   * Indicates if search state can be refined.\n   */\n  canRefine: boolean;\n\n  /**\n   * Removes the given refinement and triggers a new search.\n   */\n  refine(refinement: CurrentRefinementsConnectorParamsRefinement): void;\n\n  /**\n   * Generates a URL for the next state.\n   */\n  createURL: CreateURL<CurrentRefinementsConnectorParamsRefinement>;\n};\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'current-refinements',\n  connector: true,\n});\n\nexport type CurrentRefinementsWidgetDescription = {\n  $$type: 'ais.currentRefinements';\n  renderState: CurrentRefinementsRenderState;\n  indexRenderState: {\n    currentRefinements: WidgetRenderState<\n      CurrentRefinementsRenderState,\n      CurrentRefinementsConnectorParams\n    >;\n  };\n};\n\nexport type CurrentRefinementsConnector = Connector<\n  CurrentRefinementsWidgetDescription,\n  CurrentRefinementsConnectorParams\n>;\n\nconst connectCurrentRefinements: CurrentRefinementsConnector =\n  function connectCurrentRefinements(renderFn, unmountFn = noop) {\n    checkRendering(renderFn, withUsage());\n\n    return (widgetParams) => {\n      if (\n        (widgetParams || {}).includedAttributes &&\n        (widgetParams || {}).excludedAttributes\n      ) {\n        throw new Error(\n          withUsage(\n            'The options `includedAttributes` and `excludedAttributes` cannot be used together.'\n          )\n        );\n      }\n\n      const {\n        includedAttributes,\n        excludedAttributes = ['query'],\n        transformItems = ((items) => items) as NonNullable<\n          CurrentRefinementsConnectorParams['transformItems']\n        >,\n      } = widgetParams || {};\n\n      return {\n        $$type: 'ais.currentRefinements',\n\n        init(initOptions) {\n          const { instantSearchInstance } = initOptions;\n\n          renderFn(\n            {\n              ...this.getWidgetRenderState(initOptions),\n              instantSearchInstance,\n            },\n            true\n          );\n        },\n\n        render(renderOptions) {\n          const { instantSearchInstance } = renderOptions;\n\n          renderFn(\n            {\n              ...this.getWidgetRenderState(renderOptions),\n              instantSearchInstance,\n            },\n            false\n          );\n        },\n\n        dispose() {\n          unmountFn();\n        },\n\n        getRenderState(renderState, renderOptions) {\n          return {\n            ...renderState,\n            currentRefinements: this.getWidgetRenderState(renderOptions),\n          };\n        },\n\n        getWidgetRenderState({ results, scopedResults, createURL, helper }) {\n          function getItems() {\n            if (!results) {\n              return transformItems(\n                getRefinementsItems({\n                  results: {},\n                  helper,\n                  includedAttributes,\n                  excludedAttributes,\n                }),\n                { results }\n              );\n            }\n\n            return scopedResults.reduce<\n              CurrentRefinementsConnectorParamsItem[]\n            >((accResults, scopedResult) => {\n              return accResults.concat(\n                transformItems(\n                  getRefinementsItems({\n                    results: scopedResult.results,\n                    helper: scopedResult.helper,\n                    includedAttributes,\n                    excludedAttributes,\n                  }),\n                  { results }\n                )\n              );\n            }, []);\n          }\n\n          const items = getItems();\n\n          return {\n            items,\n            canRefine: items.length > 0,\n            refine: (refinement) => clearRefinement(helper, refinement),\n            createURL: (refinement) =>\n              createURL(clearRefinementFromState(helper.state, refinement)),\n            widgetParams,\n          };\n        },\n      };\n    };\n  };\n\nfunction getRefinementsItems({\n  results,\n  helper,\n  includedAttributes,\n  excludedAttributes,\n}: {\n  results: SearchResults | Record<string, never>;\n  helper: AlgoliaSearchHelper;\n  includedAttributes: CurrentRefinementsConnectorParams['includedAttributes'];\n  excludedAttributes: CurrentRefinementsConnectorParams['excludedAttributes'];\n}): CurrentRefinementsConnectorParamsItem[] {\n  const includesQuery =\n    (includedAttributes || []).indexOf('query') !== -1 ||\n    (excludedAttributes || []).indexOf('query') === -1;\n\n  const filterFunction = includedAttributes\n    ? (item: CurrentRefinementsConnectorParamsRefinement) =>\n        includedAttributes.indexOf(item.attribute) !== -1\n    : (item: CurrentRefinementsConnectorParamsRefinement) =>\n        excludedAttributes!.indexOf(item.attribute) === -1;\n\n  const items = getRefinements(results, helper.state, includesQuery)\n    .map(normalizeRefinement)\n    .filter(filterFunction);\n\n  return items.reduce<CurrentRefinementsConnectorParamsItem[]>(\n    (allItems, currentItem) => [\n      ...allItems.filter((item) => item.attribute !== currentItem.attribute),\n      {\n        indexName: helper.state.index,\n        attribute: currentItem.attribute,\n        label: currentItem.attribute,\n        refinements: items\n          .filter((result) => result.attribute === currentItem.attribute)\n          // We want to keep the order of refinements except the numeric ones.\n          .sort((a, b) =>\n            a.type === 'numeric' ? (a.value as number) - (b.value as number) : 0\n          ),\n        refine: (refinement) => clearRefinement(helper, refinement),\n      },\n    ],\n    []\n  );\n}\n\nfunction clearRefinementFromState(\n  state: SearchParameters,\n  refinement: CurrentRefinementsConnectorParamsRefinement\n): SearchParameters {\n  state = state.resetPage();\n  switch (refinement.type) {\n    case 'facet':\n      return state.removeFacetRefinement(\n        refinement.attribute,\n        String(refinement.value)\n      );\n    case 'disjunctive':\n      return state.removeDisjunctiveFacetRefinement(\n        refinement.attribute,\n        String(refinement.value)\n      );\n    case 'hierarchical':\n      return state.removeHierarchicalFacetRefinement(refinement.attribute);\n    case 'exclude':\n      return state.removeExcludeRefinement(\n        refinement.attribute,\n        String(refinement.value)\n      );\n    case 'numeric':\n      return state.removeNumericRefinement(\n        refinement.attribute,\n        refinement.operator,\n        String(refinement.value)\n      );\n    case 'tag':\n      return state.removeTagRefinement(String(refinement.value));\n    case 'query':\n      return state.setQueryParameter('query', '');\n    default:\n      warning(\n        false,\n        `The refinement type \"${refinement.type}\" does not exist and cannot be cleared from the current refinements.`\n      );\n      return state;\n  }\n}\n\nfunction clearRefinement(\n  helper: AlgoliaSearchHelper,\n  refinement: CurrentRefinementsConnectorParamsRefinement\n): void {\n  helper.setState(clearRefinementFromState(helper.state, refinement)).search();\n}\n\nfunction getOperatorSymbol(operator: SearchParameters.Operator): string {\n  switch (operator) {\n    case '>=':\n      return '≥';\n    case '<=':\n      return '≤';\n    default:\n      return operator;\n  }\n}\n\nfunction normalizeRefinement(\n  refinement: Refinement\n): CurrentRefinementsConnectorParamsRefinement {\n  const value = getValue(refinement);\n  const label = (refinement as NumericRefinement).operator\n    ? `${getOperatorSymbol(\n        (refinement as NumericRefinement).operator as SearchParameters.Operator\n      )} ${refinement.name}`\n    : refinement.name;\n\n  const normalizedRefinement: CurrentRefinementsConnectorParamsRefinement = {\n    attribute: refinement.attribute,\n    type: refinement.type,\n    value,\n    label,\n  };\n\n  if ((refinement as NumericRefinement).operator !== undefined) {\n    normalizedRefinement.operator = (refinement as NumericRefinement).operator;\n  }\n  if ((refinement as FacetRefinement).count !== undefined) {\n    normalizedRefinement.count = (refinement as FacetRefinement).count;\n  }\n  if ((refinement as FacetRefinement).exhaustive !== undefined) {\n    normalizedRefinement.exhaustive = (\n      refinement as FacetRefinement\n    ).exhaustive;\n  }\n\n  return normalizedRefinement;\n}\n\nfunction getValue(refinement: Refinement) {\n  if (refinement.type === 'numeric') {\n    return Number(refinement.name);\n  }\n\n  if ('escapedValue' in refinement) {\n    return refinement.escapedValue;\n  }\n\n  return refinement.name;\n}\n\nexport default connectCurrentRefinements;\n","import type { SendEventForFacet } from '../../lib/utils';\nimport {\n  checkRendering,\n  warning,\n  createDocumentationMessageGenerator,\n  createSendEventForFacet,\n  isEqual,\n  noop,\n} from '../../lib/utils';\nimport type { SearchResults } from 'algoliasearch-helper';\nimport type {\n  Connector,\n  CreateURL,\n  TransformItems,\n  RenderOptions,\n  Widget,\n  SortBy,\n  WidgetRenderState,\n} from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'hierarchical-menu',\n  connector: true,\n});\n\nconst DEFAULT_SORT = ['name:asc'];\n\nexport type HierarchicalMenuItem = {\n  /**\n   * Value of the menu item.\n   */\n  value: string;\n  /**\n   * Human-readable value of the menu item.\n   */\n  label: string;\n  /**\n   * Number of matched results after refinement is applied.\n   */\n  count: number;\n  /**\n   * Indicates if the refinement is applied.\n   */\n  isRefined: boolean;\n  /**\n   * n+1 level of items, same structure HierarchicalMenuItem\n   */\n  data: HierarchicalMenuItem[] | null;\n};\n\nexport type HierarchicalMenuConnectorParams = {\n  /**\n   *  Attributes to use to generate the hierarchy of the menu.\n   */\n  attributes: string[];\n  /**\n   * Separator used in the attributes to separate level values.\n   */\n  separator?: string;\n  /**\n   * Prefix path to use if the first level is not the root level.\n   */\n  rootPath?: string | null;\n  /**\n   * Show the siblings of the selected parent levels of the current refined value. This\n   * does not impact the root level.\n   */\n  showParentLevel?: boolean;\n  /**\n   * Max number of values to display.\n   */\n  limit?: number;\n  /**\n   * Whether to display the \"show more\" button.\n   */\n  showMore?: boolean;\n  /**\n   * Max number of values to display when showing more.\n   */\n  showMoreLimit?: number;\n  /**\n   * How to sort refinements. Possible values: `count|isRefined|name:asc|name:desc`.\n   * You can also use a sort function that behaves like the standard Javascript [compareFunction](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#Syntax).\n   *\n   * If a facetOrdering is set in the index settings, it is used when sortBy isn't passed\n   */\n  sortBy?: SortBy<SearchResults.HierarchicalFacet>;\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<HierarchicalMenuItem>;\n};\n\nexport type HierarchicalMenuRenderState = {\n  /**\n   * Creates an url for the next state for a clicked item.\n   */\n  createURL: CreateURL<string>;\n  /**\n   * Values to be rendered.\n   */\n  items: HierarchicalMenuItem[];\n  /**\n   * Sets the path of the hierarchical filter and triggers a new search.\n   */\n  refine: (value: string) => void;\n  /**\n   *  Indicates if search state can be refined.\n   */\n  canRefine: boolean;\n  /**\n   * True if the menu is displaying all the menu items.\n   */\n  isShowingMore: boolean;\n  /**\n   * Toggles the number of values displayed between `limit` and `showMoreLimit`.\n   */\n  toggleShowMore: () => void;\n  /**\n   * `true` if the toggleShowMore button can be activated (enough items to display more or\n   * already displaying more than `limit` items)\n   */\n  canToggleShowMore: boolean;\n  /**\n   * Send event to insights middleware\n   */\n  sendEvent: SendEventForFacet;\n};\n\nexport type HierarchicalMenuWidgetDescription = {\n  $$type: 'ais.hierarchicalMenu';\n  renderState: HierarchicalMenuRenderState;\n  indexRenderState: {\n    hierarchicalMenu: {\n      [rootAttribute: string]: WidgetRenderState<\n        HierarchicalMenuRenderState,\n        HierarchicalMenuConnectorParams\n      >;\n    };\n  };\n  indexUiState: {\n    hierarchicalMenu: {\n      [rootAttribute: string]: string[];\n    };\n  };\n};\n\nexport type HierarchicalMenuConnector = Connector<\n  HierarchicalMenuWidgetDescription,\n  HierarchicalMenuConnectorParams\n>;\n\n/**\n * **HierarchicalMenu** connector provides the logic to build a custom widget\n * that will give the user the ability to explore facets in a tree-like structure.\n *\n * This is commonly used for multi-level categorization of products on e-commerce\n * websites. From a UX point of view, we suggest not displaying more than two\n * levels deep.\n *\n * @type {Connector}\n * @param {function(HierarchicalMenuRenderingOptions, boolean)} renderFn Rendering function for the custom **HierarchicalMenu** widget.\n * @param {function} unmountFn Unmount function called when the widget is disposed.\n * @return {function(CustomHierarchicalMenuWidgetParams)} Re-usable widget factory for a custom **HierarchicalMenu** widget.\n */\nconst connectHierarchicalMenu: HierarchicalMenuConnector =\n  function connectHierarchicalMenu(renderFn, unmountFn = noop) {\n    checkRendering(renderFn, withUsage());\n\n    return (widgetParams) => {\n      const {\n        attributes,\n        separator = ' > ',\n        rootPath = null,\n        showParentLevel = true,\n        limit = 10,\n        showMore = false,\n        showMoreLimit = 20,\n        sortBy = DEFAULT_SORT,\n        transformItems = ((items) => items) as NonNullable<\n          HierarchicalMenuConnectorParams['transformItems']\n        >,\n      } = widgetParams || {};\n\n      if (\n        !attributes ||\n        !Array.isArray(attributes) ||\n        attributes.length === 0\n      ) {\n        throw new Error(\n          withUsage('The `attributes` option expects an array of strings.')\n        );\n      }\n\n      if (showMore === true && showMoreLimit <= limit) {\n        throw new Error(\n          withUsage('The `showMoreLimit` option must be greater than `limit`.')\n        );\n      }\n\n      type ThisWidget = Widget<\n        HierarchicalMenuWidgetDescription & {\n          widgetParams: typeof widgetParams;\n        }\n      >;\n\n      // we need to provide a hierarchicalFacet name for the search state\n      // so that we can always map $hierarchicalFacetName => real attributes\n      // we use the first attribute name\n      const [hierarchicalFacetName] = attributes;\n\n      let sendEvent: HierarchicalMenuRenderState['sendEvent'];\n\n      // Provide the same function to the `renderFn` so that way the user\n      // has to only bind it once when `isFirstRendering` for instance\n      let toggleShowMore = () => {};\n      function cachedToggleShowMore() {\n        toggleShowMore();\n      }\n\n      let _refine: HierarchicalMenuRenderState['refine'] | undefined;\n\n      let isShowingMore = false;\n\n      function createToggleShowMore(\n        renderOptions: RenderOptions,\n        widget: ThisWidget\n      ) {\n        return () => {\n          isShowingMore = !isShowingMore;\n          widget.render!(renderOptions);\n        };\n      }\n\n      function getLimit() {\n        return isShowingMore ? showMoreLimit : limit;\n      }\n\n      function _prepareFacetValues(\n        facetValues: SearchResults.HierarchicalFacet[]\n      ): HierarchicalMenuItem[] {\n        return facetValues\n          .slice(0, getLimit())\n          .map(\n            ({ name: label, escapedValue: value, data, path, ...subValue }) => {\n              const item: HierarchicalMenuItem = {\n                ...subValue,\n                value,\n                label,\n                data: null,\n              };\n              if (Array.isArray(data)) {\n                item.data = _prepareFacetValues(data);\n              }\n              return item;\n            }\n          );\n      }\n\n      return {\n        $$type: 'ais.hierarchicalMenu',\n\n        init(initOptions) {\n          const { instantSearchInstance } = initOptions;\n\n          renderFn(\n            {\n              ...this.getWidgetRenderState(initOptions),\n              instantSearchInstance,\n            },\n            true\n          );\n        },\n\n        render(renderOptions) {\n          const { instantSearchInstance } = renderOptions;\n\n          toggleShowMore = createToggleShowMore(renderOptions, this);\n\n          renderFn(\n            {\n              ...this.getWidgetRenderState(renderOptions),\n              instantSearchInstance,\n            },\n            false\n          );\n        },\n\n        dispose({ state }) {\n          unmountFn();\n\n          return state\n            .removeHierarchicalFacet(hierarchicalFacetName)\n            .setQueryParameter('maxValuesPerFacet', undefined);\n        },\n\n        getRenderState(renderState, renderOptions) {\n          return {\n            ...renderState,\n            hierarchicalMenu: {\n              ...renderState.hierarchicalMenu,\n              [hierarchicalFacetName]: this.getWidgetRenderState(renderOptions),\n            },\n          };\n        },\n\n        getWidgetRenderState({\n          results,\n          state,\n          createURL,\n          instantSearchInstance,\n          helper,\n        }) {\n          let items: HierarchicalMenuRenderState['items'] = [];\n          let canToggleShowMore = false;\n\n          // Bind createURL to this specific attribute\n          function _createURL(facetValue: string) {\n            return createURL(\n              state\n                .resetPage()\n                .toggleFacetRefinement(hierarchicalFacetName, facetValue)\n            );\n          }\n\n          if (!sendEvent) {\n            sendEvent = createSendEventForFacet({\n              instantSearchInstance,\n              helper,\n              attribute(facetValue) {\n                const index = facetValue.split(separator).length - 1;\n\n                return attributes[index];\n              },\n              widgetType: this.$$type,\n            });\n          }\n\n          if (!_refine) {\n            _refine = function (facetValue) {\n              sendEvent('click', facetValue);\n              helper\n                .toggleFacetRefinement(hierarchicalFacetName, facetValue)\n                .search();\n            };\n          }\n\n          if (results) {\n            const facetValues = results.getFacetValues(hierarchicalFacetName, {\n              sortBy,\n              facetOrdering: sortBy === DEFAULT_SORT,\n            });\n            const facetItems =\n              facetValues && !Array.isArray(facetValues) && facetValues.data\n                ? facetValues.data\n                : [];\n\n            // If the limit is the max number of facet retrieved it is impossible to know\n            // if the facets are exhaustive. The only moment we are sure it is exhaustive\n            // is when it is strictly under the number requested unless we know that another\n            // widget has requested more values (maxValuesPerFacet > getLimit()).\n            // Because this is used for making the search of facets unable or not, it is important\n            // to be conservative here.\n            const hasExhaustiveItems =\n              (state.maxValuesPerFacet || 0) > getLimit()\n                ? facetItems.length <= getLimit()\n                : facetItems.length < getLimit();\n\n            canToggleShowMore =\n              showMore && (isShowingMore || !hasExhaustiveItems);\n\n            items = transformItems(_prepareFacetValues(facetItems), {\n              results,\n            });\n          }\n\n          return {\n            items,\n            refine: _refine,\n            canRefine: items.length > 0,\n            createURL: _createURL,\n            sendEvent,\n            widgetParams,\n            isShowingMore,\n            toggleShowMore: cachedToggleShowMore,\n            canToggleShowMore,\n          };\n        },\n\n        getWidgetUiState(uiState, { searchParameters }) {\n          const path = searchParameters.getHierarchicalFacetBreadcrumb(\n            hierarchicalFacetName\n          );\n\n          if (!path.length) {\n            return uiState;\n          }\n\n          return {\n            ...uiState,\n            hierarchicalMenu: {\n              ...uiState.hierarchicalMenu,\n              [hierarchicalFacetName]: path,\n            },\n          };\n        },\n\n        getWidgetSearchParameters(searchParameters, { uiState }) {\n          const values =\n            uiState.hierarchicalMenu &&\n            uiState.hierarchicalMenu[hierarchicalFacetName];\n\n          if (searchParameters.isHierarchicalFacet(hierarchicalFacetName)) {\n            const facet = searchParameters.getHierarchicalFacetByName(\n              hierarchicalFacetName\n            );\n\n            warning(\n              isEqual(facet.attributes, attributes) &&\n                facet.separator === separator &&\n                facet.rootPath === rootPath,\n              'Using Breadcrumb and HierarchicalMenu on the same facet with different options overrides the configuration of the HierarchicalMenu.'\n            );\n          }\n\n          const withFacetConfiguration = searchParameters\n            .removeHierarchicalFacet(hierarchicalFacetName)\n            .addHierarchicalFacet({\n              name: hierarchicalFacetName,\n              attributes,\n              separator,\n              rootPath,\n              showParentLevel,\n            });\n\n          const currentMaxValuesPerFacet =\n            withFacetConfiguration.maxValuesPerFacet || 0;\n\n          const nextMaxValuesPerFacet = Math.max(\n            currentMaxValuesPerFacet,\n            showMore ? showMoreLimit : limit\n          );\n\n          const withMaxValuesPerFacet =\n            withFacetConfiguration.setQueryParameter(\n              'maxValuesPerFacet',\n              nextMaxValuesPerFacet\n            );\n\n          if (!values) {\n            return withMaxValuesPerFacet.setQueryParameters({\n              hierarchicalFacetsRefinements: {\n                ...withMaxValuesPerFacet.hierarchicalFacetsRefinements,\n                [hierarchicalFacetName]: [],\n              },\n            });\n          }\n\n          return withMaxValuesPerFacet.addHierarchicalFacetRefinement(\n            hierarchicalFacetName,\n            values.join(separator)\n          );\n        },\n      };\n    };\n  };\n\nexport default connectHierarchicalMenu;\n","import type { SendEventForHits, BindEventForHits } from '../../lib/utils';\nimport {\n  escapeHits,\n  TAG_PLACEHOLDER,\n  checkRendering,\n  createDocumentationMessageGenerator,\n  addAbsolutePosition,\n  addQueryID,\n  createSendEventForHits,\n  createBindEventForHits,\n  noop,\n} from '../../lib/utils';\nimport type {\n  TransformItems,\n  Connector,\n  Hit,\n  WidgetRenderState,\n  BaseHit,\n} from '../../types';\nimport type { SearchResults } from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'hits',\n  connector: true,\n});\n\nexport type HitsRenderState<THit extends BaseHit = BaseHit> = {\n  /**\n   * The matched hits from Algolia API.\n   */\n  hits: Array<Hit<THit>>;\n\n  /**\n   * The response from the Algolia API.\n   */\n  results?: SearchResults<Hit<THit>>;\n\n  /**\n   * Sends an event to the Insights middleware.\n   */\n  sendEvent: SendEventForHits;\n\n  /**\n   * Returns a string for the `data-insights-event` attribute for the Insights middleware\n   */\n  bindEvent: BindEventForHits;\n};\n\nexport type HitsConnectorParams<THit extends BaseHit = BaseHit> = {\n  /**\n   * Whether to escape HTML tags from hits string values.\n   *\n   * @default true\n   */\n  escapeHTML?: boolean;\n\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<Hit<THit>>;\n};\n\nexport type HitsWidgetDescription<THit extends BaseHit = BaseHit> = {\n  $$type: 'ais.hits';\n  renderState: HitsRenderState<THit>;\n  indexRenderState: {\n    hits: WidgetRenderState<HitsRenderState<THit>, HitsConnectorParams<THit>>;\n  };\n};\n\nexport type HitsConnector<THit extends BaseHit = BaseHit> = Connector<\n  HitsWidgetDescription<THit>,\n  HitsConnectorParams<THit>\n>;\n\nconst connectHits: HitsConnector = function connectHits(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const {\n      escapeHTML = true,\n      transformItems = ((items) => items) as NonNullable<\n        HitsConnectorParams['transformItems']\n      >,\n    } = widgetParams || {};\n    let sendEvent: SendEventForHits;\n    let bindEvent: BindEventForHits;\n\n    return {\n      $$type: 'ais.hits',\n\n      init(initOptions) {\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance: initOptions.instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const renderState = this.getWidgetRenderState(renderOptions);\n\n        renderFn(\n          {\n            ...renderState,\n            instantSearchInstance: renderOptions.instantSearchInstance,\n          },\n          false\n        );\n\n        renderState.sendEvent('view', renderState.hits);\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          hits: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState({ results, helper, instantSearchInstance }) {\n        if (!sendEvent) {\n          sendEvent = createSendEventForHits({\n            instantSearchInstance,\n            index: helper.getIndex(),\n            widgetType: this.$$type,\n          });\n        }\n\n        if (!bindEvent) {\n          bindEvent = createBindEventForHits({\n            index: helper.getIndex(),\n            widgetType: this.$$type,\n          });\n        }\n\n        if (!results) {\n          return {\n            hits: [],\n            results: undefined,\n            sendEvent,\n            bindEvent,\n            widgetParams,\n          };\n        }\n\n        if (escapeHTML && results.hits.length > 0) {\n          results.hits = escapeHits(results.hits);\n        }\n\n        const hitsWithAbsolutePosition = addAbsolutePosition(\n          results.hits,\n          results.page,\n          results.hitsPerPage\n        );\n\n        const hitsWithAbsolutePositionAndQueryID = addQueryID(\n          hitsWithAbsolutePosition,\n          results.queryID\n        );\n\n        const transformedHits = transformItems(\n          hitsWithAbsolutePositionAndQueryID,\n          { results }\n        );\n\n        return {\n          hits: transformedHits,\n          results,\n          sendEvent,\n          bindEvent,\n          widgetParams,\n        };\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        if (!escapeHTML) {\n          return state;\n        }\n\n        return state.setQueryParameters(\n          Object.keys(TAG_PLACEHOLDER).reduce(\n            (acc, key) => ({\n              ...acc,\n              [key]: undefined,\n            }),\n            {}\n          )\n        );\n      },\n\n      getWidgetSearchParameters(state) {\n        if (!escapeHTML) {\n          return state;\n        }\n\n        return state.setQueryParameters(TAG_PLACEHOLDER);\n      },\n    };\n  };\n};\n\nexport default connectHits;\n","import type { SearchResults } from 'algoliasearch-helper';\nimport {\n  uniq,\n  find,\n  createDocumentationMessageGenerator,\n  warning,\n} from '../utils';\nimport type {\n  Hit,\n  InsightsClient,\n  InsightsClientMethod,\n  InsightsClientPayload,\n  Connector,\n} from '../../types';\n\nconst getSelectedHits = (hits: Hit[], selectedObjectIDs: string[]): Hit[] => {\n  return selectedObjectIDs.map((objectID) => {\n    const hit = find(hits, (h) => h.objectID === objectID);\n    if (typeof hit === 'undefined') {\n      throw new Error(\n        `Could not find objectID \"${objectID}\" passed to \\`clickedObjectIDsAfterSearch\\` in the returned hits. This is necessary to infer the absolute position and the query ID.`\n      );\n    }\n    return hit;\n  });\n};\n\nconst getQueryID = (selectedHits: Hit[]): string => {\n  const queryIDs = uniq(selectedHits.map((hit) => hit.__queryID));\n  if (queryIDs.length > 1) {\n    throw new Error(\n      'Insights currently allows a single `queryID`. The `objectIDs` provided map to multiple `queryID`s.'\n    );\n  }\n  const queryID = queryIDs[0];\n  if (typeof queryID !== 'string') {\n    throw new Error(\n      `Could not infer \\`queryID\\`. Ensure InstantSearch \\`clickAnalytics: true\\` was added with the Configure widget.\n\nSee: https://alg.li/lNiZZ7`\n    );\n  }\n  return queryID;\n};\n\nconst getPositions = (selectedHits: Hit[]): number[] =>\n  selectedHits.map((hit) => hit.__position);\n\nexport const inferPayload = ({\n  method,\n  results,\n  hits,\n  objectIDs,\n}: {\n  method: InsightsClientMethod;\n  results: SearchResults;\n  hits: Hit[];\n  objectIDs: string[];\n}): Omit<InsightsClientPayload, 'eventName'> => {\n  const { index } = results;\n  const selectedHits = getSelectedHits(hits, objectIDs);\n  const queryID = getQueryID(selectedHits);\n\n  switch (method) {\n    case 'clickedObjectIDsAfterSearch': {\n      const positions = getPositions(selectedHits);\n      return { index, queryID, objectIDs, positions };\n    }\n\n    case 'convertedObjectIDsAfterSearch':\n      return { index, queryID, objectIDs };\n\n    default:\n      throw new Error(`Unsupported method passed to insights: \"${method}\".`);\n  }\n};\n\nconst wrapInsightsClient =\n  (\n    aa: InsightsClient | null,\n    results: SearchResults,\n    hits: Hit[]\n  ): InsightsClient =>\n  (method, ...payloads) => {\n    const [payload] = payloads;\n    warning(\n      false,\n      `\\`insights\\` function has been deprecated. It is still supported in 4.x releases, but not further. It is replaced by the \\`insights\\` middleware.\n\nFor more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/`\n    );\n    if (!aa) {\n      const withInstantSearchUsage = createDocumentationMessageGenerator({\n        name: 'instantsearch',\n      });\n      throw new Error(\n        withInstantSearchUsage(\n          'The `insightsClient` option has not been provided to `instantsearch`.'\n        )\n      );\n    }\n    if (!Array.isArray(payload.objectIDs)) {\n      throw new TypeError('Expected `objectIDs` to be an array.');\n    }\n    const inferredPayload = inferPayload({\n      method,\n      results,\n      hits,\n      objectIDs: payload.objectIDs,\n    });\n    aa(method, { ...inferredPayload, ...payload });\n  };\n\n/**\n * @deprecated This function will be still supported in 4.x releases, but not further. It is replaced by the `insights` middleware. For more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/\n * It passes `insights` to `HitsWithInsightsListener` and `InfiniteHitsWithInsightsListener`.\n */\nexport default function withInsights<TConnector extends Connector<any, any>>(\n  connector: TConnector\n): TConnector {\n  return ((renderFn, unmountFn) =>\n    connector((renderOptions, isFirstRender) => {\n      const { results, hits, instantSearchInstance } = renderOptions;\n      if (results && hits && instantSearchInstance) {\n        const insights = wrapInsightsClient(\n          instantSearchInstance.insightsClient,\n          results,\n          hits\n        );\n        return renderFn({ ...renderOptions, insights }, isFirstRender);\n      }\n      return renderFn(renderOptions, isFirstRender);\n    }, unmountFn)) as TConnector;\n}\n","var n,l,u,i,t,o,r,f={},e=[],c=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;function s(n,l){for(var u in l)n[u]=l[u];return n}function a(n){var l=n.parentNode;l&&l.removeChild(n)}function h(l,u,i){var t,o,r,f={};for(r in u)\"key\"==r?t=u[r]:\"ref\"==r?o=u[r]:f[r]=u[r];if(arguments.length>2&&(f.children=arguments.length>3?n.call(arguments,2):i),\"function\"==typeof l&&null!=l.defaultProps)for(r in l.defaultProps)void 0===f[r]&&(f[r]=l.defaultProps[r]);return v(l,f,t,o,null)}function v(n,i,t,o,r){var f={type:n,props:i,key:t,ref:o,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,__h:null,constructor:void 0,__v:null==r?++u:r};return null==r&&null!=l.vnode&&l.vnode(f),f}function y(){return{current:null}}function p(n){return n.children}function d(n,l){this.props=n,this.context=l}function _(n,l){if(null==l)return n.__?_(n.__,n.__.__k.indexOf(n)+1):null;for(var u;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e)return u.__e;return\"function\"==typeof n.type?_(n):null}function k(n){var l,u;if(null!=(n=n.__)&&null!=n.__c){for(n.__e=n.__c.base=null,l=0;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e){n.__e=n.__c.base=u.__e;break}return k(n)}}function b(n){(!n.__d&&(n.__d=!0)&&t.push(n)&&!g.__r++||o!==l.debounceRendering)&&((o=l.debounceRendering)||setTimeout)(g)}function g(){for(var n;g.__r=t.length;)n=t.sort(function(n,l){return n.__v.__b-l.__v.__b}),t=[],n.some(function(n){var l,u,i,t,o,r;n.__d&&(o=(t=(l=n).__v).__e,(r=l.__P)&&(u=[],(i=s({},t)).__v=t.__v+1,j(r,t,i,l.__n,void 0!==r.ownerSVGElement,null!=t.__h?[o]:null,u,null==o?_(t):o,t.__h),z(u,t),t.__e!=o&&k(t)))})}function w(n,l,u,i,t,o,r,c,s,a){var h,y,d,k,b,g,w,x=i&&i.__k||e,C=x.length;for(u.__k=[],h=0;h<l.length;h++)if(null!=(k=u.__k[h]=null==(k=l[h])||\"boolean\"==typeof k?null:\"string\"==typeof k||\"number\"==typeof k||\"bigint\"==typeof k?v(null,k,null,null,k):Array.isArray(k)?v(p,{children:k},null,null,null):k.__b>0?v(k.type,k.props,k.key,k.ref?k.ref:null,k.__v):k)){if(k.__=u,k.__b=u.__b+1,null===(d=x[h])||d&&k.key==d.key&&k.type===d.type)x[h]=void 0;else for(y=0;y<C;y++){if((d=x[y])&&k.key==d.key&&k.type===d.type){x[y]=void 0;break}d=null}j(n,k,d=d||f,t,o,r,c,s,a),b=k.__e,(y=k.ref)&&d.ref!=y&&(w||(w=[]),d.ref&&w.push(d.ref,null,k),w.push(y,k.__c||b,k)),null!=b?(null==g&&(g=b),\"function\"==typeof k.type&&k.__k===d.__k?k.__d=s=m(k,s,n):s=A(n,k,d,x,b,s),\"function\"==typeof u.type&&(u.__d=s)):s&&d.__e==s&&s.parentNode!=n&&(s=_(d))}for(u.__e=g,h=C;h--;)null!=x[h]&&(\"function\"==typeof u.type&&null!=x[h].__e&&x[h].__e==u.__d&&(u.__d=_(i,h+1)),N(x[h],x[h]));if(w)for(h=0;h<w.length;h++)M(w[h],w[++h],w[++h])}function m(n,l,u){for(var i,t=n.__k,o=0;t&&o<t.length;o++)(i=t[o])&&(i.__=n,l=\"function\"==typeof i.type?m(i,l,u):A(u,i,i,t,i.__e,l));return l}function x(n,l){return l=l||[],null==n||\"boolean\"==typeof n||(Array.isArray(n)?n.some(function(n){x(n,l)}):l.push(n)),l}function A(n,l,u,i,t,o){var r,f,e;if(void 0!==l.__d)r=l.__d,l.__d=void 0;else if(null==u||t!=o||null==t.parentNode)n:if(null==o||o.parentNode!==n)n.appendChild(t),r=null;else{for(f=o,e=0;(f=f.nextSibling)&&e<i.length;e+=2)if(f==t)break n;n.insertBefore(t,o),r=o}return void 0!==r?r:t.nextSibling}function C(n,l,u,i,t){var o;for(o in u)\"children\"===o||\"key\"===o||o in l||H(n,o,null,u[o],i);for(o in l)t&&\"function\"!=typeof l[o]||\"children\"===o||\"key\"===o||\"value\"===o||\"checked\"===o||u[o]===l[o]||H(n,o,l[o],u[o],i)}function $(n,l,u){\"-\"===l[0]?n.setProperty(l,u):n[l]=null==u?\"\":\"number\"!=typeof u||c.test(l)?u:u+\"px\"}function H(n,l,u,i,t){var o;n:if(\"style\"===l)if(\"string\"==typeof u)n.style.cssText=u;else{if(\"string\"==typeof i&&(n.style.cssText=i=\"\"),i)for(l in i)u&&l in u||$(n.style,l,\"\");if(u)for(l in u)i&&u[l]===i[l]||$(n.style,l,u[l])}else if(\"o\"===l[0]&&\"n\"===l[1])o=l!==(l=l.replace(/Capture$/,\"\")),l=l.toLowerCase()in n?l.toLowerCase().slice(2):l.slice(2),n.l||(n.l={}),n.l[l+o]=u,u?i||n.addEventListener(l,o?T:I,o):n.removeEventListener(l,o?T:I,o);else if(\"dangerouslySetInnerHTML\"!==l){if(t)l=l.replace(/xlink(H|:h)/,\"h\").replace(/sName$/,\"s\");else if(\"href\"!==l&&\"list\"!==l&&\"form\"!==l&&\"tabIndex\"!==l&&\"download\"!==l&&l in n)try{n[l]=null==u?\"\":u;break n}catch(n){}\"function\"==typeof u||(null!=u&&(!1!==u||\"a\"===l[0]&&\"r\"===l[1])?n.setAttribute(l,u):n.removeAttribute(l))}}function I(n){this.l[n.type+!1](l.event?l.event(n):n)}function T(n){this.l[n.type+!0](l.event?l.event(n):n)}function j(n,u,i,t,o,r,f,e,c){var a,h,v,y,_,k,b,g,m,x,A,C,$,H=u.type;if(void 0!==u.constructor)return null;null!=i.__h&&(c=i.__h,e=u.__e=i.__e,u.__h=null,r=[e]),(a=l.__b)&&a(u);try{n:if(\"function\"==typeof H){if(g=u.props,m=(a=H.contextType)&&t[a.__c],x=a?m?m.props.value:a.__:t,i.__c?b=(h=u.__c=i.__c).__=h.__E:(\"prototype\"in H&&H.prototype.render?u.__c=h=new H(g,x):(u.__c=h=new d(g,x),h.constructor=H,h.render=O),m&&m.sub(h),h.props=g,h.state||(h.state={}),h.context=x,h.__n=t,v=h.__d=!0,h.__h=[]),null==h.__s&&(h.__s=h.state),null!=H.getDerivedStateFromProps&&(h.__s==h.state&&(h.__s=s({},h.__s)),s(h.__s,H.getDerivedStateFromProps(g,h.__s))),y=h.props,_=h.state,v)null==H.getDerivedStateFromProps&&null!=h.componentWillMount&&h.componentWillMount(),null!=h.componentDidMount&&h.__h.push(h.componentDidMount);else{if(null==H.getDerivedStateFromProps&&g!==y&&null!=h.componentWillReceiveProps&&h.componentWillReceiveProps(g,x),!h.__e&&null!=h.shouldComponentUpdate&&!1===h.shouldComponentUpdate(g,h.__s,x)||u.__v===i.__v){h.props=g,h.state=h.__s,u.__v!==i.__v&&(h.__d=!1),h.__v=u,u.__e=i.__e,u.__k=i.__k,u.__k.forEach(function(n){n&&(n.__=u)}),h.__h.length&&f.push(h);break n}null!=h.componentWillUpdate&&h.componentWillUpdate(g,h.__s,x),null!=h.componentDidUpdate&&h.__h.push(function(){h.componentDidUpdate(y,_,k)})}if(h.context=x,h.props=g,h.__v=u,h.__P=n,A=l.__r,C=0,\"prototype\"in H&&H.prototype.render)h.state=h.__s,h.__d=!1,A&&A(u),a=h.render(h.props,h.state,h.context);else do{h.__d=!1,A&&A(u),a=h.render(h.props,h.state,h.context),h.state=h.__s}while(h.__d&&++C<25);h.state=h.__s,null!=h.getChildContext&&(t=s(s({},t),h.getChildContext())),v||null==h.getSnapshotBeforeUpdate||(k=h.getSnapshotBeforeUpdate(y,_)),$=null!=a&&a.type===p&&null==a.key?a.props.children:a,w(n,Array.isArray($)?$:[$],u,i,t,o,r,f,e,c),h.base=u.__e,u.__h=null,h.__h.length&&f.push(h),b&&(h.__E=h.__=null),h.__e=!1}else null==r&&u.__v===i.__v?(u.__k=i.__k,u.__e=i.__e):u.__e=L(i.__e,u,i,t,o,r,f,c);(a=l.diffed)&&a(u)}catch(n){u.__v=null,(c||null!=r)&&(u.__e=e,u.__h=!!c,r[r.indexOf(e)]=null),l.__e(n,u,i)}}function z(n,u){l.__c&&l.__c(u,n),n.some(function(u){try{n=u.__h,u.__h=[],n.some(function(n){n.call(u)})}catch(n){l.__e(n,u.__v)}})}function L(l,u,i,t,o,r,e,c){var s,h,v,y=i.props,p=u.props,d=u.type,k=0;if(\"svg\"===d&&(o=!0),null!=r)for(;k<r.length;k++)if((s=r[k])&&\"setAttribute\"in s==!!d&&(d?s.localName===d:3===s.nodeType)){l=s,r[k]=null;break}if(null==l){if(null===d)return document.createTextNode(p);l=o?document.createElementNS(\"http://www.w3.org/2000/svg\",d):document.createElement(d,p.is&&p),r=null,c=!1}if(null===d)y===p||c&&l.data===p||(l.data=p);else{if(r=r&&n.call(l.childNodes),h=(y=i.props||f).dangerouslySetInnerHTML,v=p.dangerouslySetInnerHTML,!c){if(null!=r)for(y={},k=0;k<l.attributes.length;k++)y[l.attributes[k].name]=l.attributes[k].value;(v||h)&&(v&&(h&&v.__html==h.__html||v.__html===l.innerHTML)||(l.innerHTML=v&&v.__html||\"\"))}if(C(l,p,y,o,c),v)u.__k=[];else if(k=u.props.children,w(l,Array.isArray(k)?k:[k],u,i,t,o&&\"foreignObject\"!==d,r,e,r?r[0]:i.__k&&_(i,0),c),null!=r)for(k=r.length;k--;)null!=r[k]&&a(r[k]);c||(\"value\"in p&&void 0!==(k=p.value)&&(k!==l.value||\"progress\"===d&&!k||\"option\"===d&&k!==y.value)&&H(l,\"value\",k,y.value,!1),\"checked\"in p&&void 0!==(k=p.checked)&&k!==l.checked&&H(l,\"checked\",k,y.checked,!1))}return l}function M(n,u,i){try{\"function\"==typeof n?n(u):n.current=u}catch(n){l.__e(n,i)}}function N(n,u,i){var t,o;if(l.unmount&&l.unmount(n),(t=n.ref)&&(t.current&&t.current!==n.__e||M(t,null,u)),null!=(t=n.__c)){if(t.componentWillUnmount)try{t.componentWillUnmount()}catch(n){l.__e(n,u)}t.base=t.__P=null,n.__c=void 0}if(t=n.__k)for(o=0;o<t.length;o++)t[o]&&N(t[o],u,\"function\"!=typeof n.type);i||null==n.__e||a(n.__e),n.__=n.__e=n.__d=void 0}function O(n,l,u){return this.constructor(n,u)}function P(u,i,t){var o,r,e;l.__&&l.__(u,i),r=(o=\"function\"==typeof t)?null:t&&t.__k||i.__k,e=[],j(i,u=(!o&&t||i).__k=h(p,null,[u]),r||f,f,void 0!==i.ownerSVGElement,!o&&t?[t]:r?null:i.firstChild?n.call(i.childNodes):null,e,!o&&t?t:r?r.__e:i.firstChild,o),z(e,u)}function S(n,l){P(n,l,S)}function q(l,u,i){var t,o,r,f=s({},l.props);for(r in u)\"key\"==r?t=u[r]:\"ref\"==r?o=u[r]:f[r]=u[r];return arguments.length>2&&(f.children=arguments.length>3?n.call(arguments,2):i),v(l.type,f,t||l.key,o||l.ref,null)}function B(n,l){var u={__c:l=\"__cC\"+r++,__:n,Consumer:function(n,l){return n.children(l)},Provider:function(n){var u,i;return this.getChildContext||(u=[],(i={})[l]=this,this.getChildContext=function(){return i},this.shouldComponentUpdate=function(n){this.props.value!==n.value&&u.some(b)},this.sub=function(n){u.push(n);var l=n.componentWillUnmount;n.componentWillUnmount=function(){u.splice(u.indexOf(n),1),l&&l.call(n)}}),n.children}};return u.Provider.__=u.Consumer.contextType=u}n=e.slice,l={__e:function(n,l,u,i){for(var t,o,r;l=l.__;)if((t=l.__c)&&!t.__)try{if((o=t.constructor)&&null!=o.getDerivedStateFromError&&(t.setState(o.getDerivedStateFromError(n)),r=t.__d),null!=t.componentDidCatch&&(t.componentDidCatch(n,i||{}),r=t.__d),r)return t.__E=t}catch(l){n=l}throw n}},u=0,i=function(n){return null!=n&&void 0===n.constructor},d.prototype.setState=function(n,l){var u;u=null!=this.__s&&this.__s!==this.state?this.__s:this.__s=s({},this.state),\"function\"==typeof n&&(n=n(s({},u),this.props)),n&&s(u,n),null!=n&&this.__v&&(l&&this.__h.push(l),b(this))},d.prototype.forceUpdate=function(n){this.__v&&(this.__e=!0,n&&this.__h.push(n),b(this))},d.prototype.render=p,t=[],g.__r=0,r=0;export{d as Component,p as Fragment,q as cloneElement,B as createContext,h as createElement,y as createRef,h,S as hydrate,i as isValidElement,l as options,P as render,x as toChildArray};\n//# sourceMappingURL=preact.module.js.map\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport { deserializePayload } from '../utils';\nimport { readDataAttributes, hasDataAttributes } from '../../helpers/insights';\nimport type { InsightsClient } from '../../types';\nimport type { InsightsEvent } from '../../middlewares/createInsightsMiddleware';\n\ntype WithInsightsListenerProps = {\n  [key: string]: unknown;\n  insights: InsightsClient;\n  sendEvent?: (event: InsightsEvent) => void;\n};\n\nconst findInsightsTarget = (\n  startElement: HTMLElement | null,\n  endElement: HTMLElement | null,\n  validator: (element: HTMLElement) => boolean\n): HTMLElement | null => {\n  let element: HTMLElement | null = startElement;\n  while (element && !validator(element)) {\n    if (element === endElement) {\n      return null;\n    }\n    element = element.parentElement;\n  }\n  return element;\n};\n\nconst parseInsightsEvent = (element: HTMLElement): InsightsEvent[] => {\n  const serializedPayload = element.getAttribute('data-insights-event');\n\n  if (typeof serializedPayload !== 'string') {\n    throw new Error(\n      'The insights middleware expects `data-insights-event` to be a base64-encoded JSON string.'\n    );\n  }\n\n  try {\n    return deserializePayload(serializedPayload);\n  } catch (error) {\n    throw new Error(\n      'The insights middleware was unable to parse `data-insights-event`.'\n    );\n  }\n};\n\nconst insightsListener = (BaseComponent: any) => {\n  function WithInsightsListener(props: WithInsightsListenerProps) {\n    const handleClick = (event: MouseEvent): void => {\n      if (props.sendEvent) {\n        // new way with insights middleware\n        const targetWithEvent = findInsightsTarget(\n          event.target as HTMLElement | null,\n          event.currentTarget as HTMLElement | null,\n          (element) => element.hasAttribute('data-insights-event')\n        );\n        if (targetWithEvent) {\n          const payload = parseInsightsEvent(targetWithEvent);\n\n          payload.forEach((single) => props.sendEvent!(single));\n        }\n      }\n\n      // old way, e.g. instantsearch.insights(\"clickedObjectIDsAfterSearch\", { .. })\n      const insightsTarget = findInsightsTarget(\n        event.target as HTMLElement | null,\n        event.currentTarget as HTMLElement | null,\n        (element) => hasDataAttributes(element)\n      );\n      if (insightsTarget) {\n        const { method, payload } = readDataAttributes(insightsTarget);\n        props.insights(method, payload);\n      }\n    };\n\n    return (\n      <div onClick={handleClick}>\n        <BaseComponent {...props} />\n      </div>\n    );\n  }\n\n  return WithInsightsListener;\n};\n\nexport default insightsListener;\n","import {\n  checkRendering,\n  warning,\n  createDocumentationMessageGenerator,\n  noop,\n} from '../../lib/utils';\n\nimport type {\n  AlgoliaSearchHelper,\n  SearchParameters,\n} from 'algoliasearch-helper';\nimport type {\n  Connector,\n  TransformItems,\n  CreateURL,\n  InitOptions,\n  RenderOptions,\n  WidgetRenderState,\n} from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'hits-per-page',\n  connector: true,\n});\n\nexport type HitsPerPageRenderStateItem = {\n  /**\n   * Label to display in the option.\n   */\n  label: string;\n\n  /**\n   * Number of hits to display per page.\n   */\n  value: number;\n\n  /**\n   * Indicates if it's the current refined value.\n   */\n  isRefined: boolean;\n};\n\nexport type HitsPerPageConnectorParamsItem = {\n  /**\n   * Label to display in the option.\n   */\n  label: string;\n\n  /**\n   * Number of hits to display per page.\n   */\n  value: number;\n\n  /**\n   * The default hits per page on first search.\n   *\n   * @default false\n   */\n  default?: boolean;\n};\n\nexport type HitsPerPageConnectorParams = {\n  /**\n   * Array of objects defining the different values and labels.\n   */\n  items: HitsPerPageConnectorParamsItem[];\n\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<HitsPerPageRenderStateItem>;\n};\n\nexport type HitsPerPageRenderState = {\n  /**\n   * Array of objects defining the different values and labels.\n   */\n  items: HitsPerPageRenderStateItem[];\n\n  /**\n   * Creates the URL for a single item name in the list.\n   *\n   * @internal\n   */\n  createURL: CreateURL<HitsPerPageConnectorParamsItem['value']>;\n\n  /**\n   * Sets the number of hits per page and triggers a search.\n   */\n  refine: (value: number) => void;\n\n  /**\n   * Indicates whether or not the search has results.\n   * @deprecated Use `canRefine` instead.\n   */\n  hasNoResults: boolean;\n\n  /**\n   * Indicates if search state can be refined.\n   */\n  canRefine: boolean;\n};\n\nexport type HitsPerPageWidgetDescription = {\n  $$type: 'ais.hitsPerPage';\n  renderState: HitsPerPageRenderState;\n  indexRenderState: {\n    hitsPerPage: WidgetRenderState<\n      HitsPerPageRenderState,\n      HitsPerPageConnectorParams\n    >;\n  };\n  indexUiState: {\n    hitsPerPage: number;\n  };\n};\n\nexport type HitsPerPageConnector = Connector<\n  HitsPerPageWidgetDescription,\n  HitsPerPageConnectorParams\n>;\n\nconst connectHitsPerPage: HitsPerPageConnector = function connectHitsPerPage(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const {\n      items: userItems,\n      transformItems = ((items) => items) as NonNullable<\n        HitsPerPageConnectorParams['transformItems']\n      >,\n    } = widgetParams || {};\n\n    if (!Array.isArray(userItems)) {\n      throw new Error(\n        withUsage('The `items` option expects an array of objects.')\n      );\n    }\n\n    let items = userItems;\n\n    const defaultItems = items.filter((item) => item.default === true);\n\n    if (defaultItems.length === 0) {\n      throw new Error(\n        withUsage(`A default value must be specified in \\`items\\`.`)\n      );\n    }\n\n    if (defaultItems.length > 1) {\n      throw new Error(\n        withUsage('More than one default value is specified in `items`.')\n      );\n    }\n\n    const defaultItem = defaultItems[0];\n\n    const normalizeItems = ({ hitsPerPage }: SearchParameters) => {\n      return items.map((item) => ({\n        ...item,\n        isRefined: Number(item.value) === Number(hitsPerPage),\n      }));\n    };\n\n    type ConnectorState = {\n      getRefine: (\n        helper: AlgoliaSearchHelper\n      ) => (value: HitsPerPageConnectorParamsItem['value']) => any;\n      createURLFactory: (props: {\n        state: SearchParameters;\n        createURL: (InitOptions | RenderOptions)['createURL'];\n      }) => HitsPerPageRenderState['createURL'];\n    };\n\n    const connectorState: ConnectorState = {\n      getRefine: (helper) => (value) => {\n        return !value && value !== 0\n          ? helper.setQueryParameter('hitsPerPage', undefined).search()\n          : helper.setQueryParameter('hitsPerPage', value).search();\n      },\n      createURLFactory:\n        ({ state, createURL }) =>\n        (value) =>\n          createURL(\n            state\n              .resetPage()\n              .setQueryParameter(\n                'hitsPerPage',\n                !value && value !== 0 ? undefined : value\n              )\n          ),\n    };\n\n    return {\n      $$type: 'ais.hitsPerPage',\n\n      init(initOptions) {\n        const { state, instantSearchInstance } = initOptions;\n\n        const isCurrentInOptions = items.some(\n          (item) => Number(state.hitsPerPage) === Number(item.value)\n        );\n\n        if (!isCurrentInOptions) {\n          warning(\n            state.hitsPerPage !== undefined,\n            `\n\\`hitsPerPage\\` is not defined.\nThe option \\`hitsPerPage\\` needs to be set using the \\`configure\\` widget.\n\nLearn more: https://www.algolia.com/doc/api-reference/widgets/hits-per-page/js/\n            `\n          );\n\n          warning(\n            false,\n            `\nThe \\`items\\` option of \\`hitsPerPage\\` does not contain the \"hits per page\" value coming from the state: ${state.hitsPerPage}.\n\nYou may want to add another entry to the \\`items\\` option with this value.`\n          );\n\n          items = [\n            // The helper will convert the empty string to `undefined`.\n            { value: '' as unknown as number, label: '' },\n            ...items,\n          ];\n        }\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return state.setQueryParameter('hitsPerPage', undefined);\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          hitsPerPage: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState({ state, results, createURL, helper }) {\n        const canRefine = results ? results.nbHits > 0 : false;\n\n        return {\n          items: transformItems(normalizeItems(state), { results }),\n          refine: connectorState.getRefine(helper),\n          createURL: connectorState.createURLFactory({ state, createURL }),\n          hasNoResults: !canRefine,\n          canRefine,\n          widgetParams,\n        };\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const hitsPerPage = searchParameters.hitsPerPage;\n\n        if (hitsPerPage === undefined || hitsPerPage === defaultItem.value) {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          hitsPerPage,\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        return searchParameters.setQueryParameters({\n          hitsPerPage: uiState.hitsPerPage || defaultItem.value,\n        });\n      },\n    };\n  };\n};\n\nexport default connectHitsPerPage;\n","import { withInsights } from '../../lib/insights';\nimport type { HitsConnectorParams, HitsWidgetDescription } from './connectHits';\nimport connectHits from './connectHits';\nimport type { Connector } from '../../types';\n\n/**\n * Due to https://github.com/microsoft/web-build-tools/issues/1050, we need\n * Connector<...> imported in this file, even though it is only used implicitly.\n * This _uses_ Connector<...> so it is not accidentally removed by someone.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ndeclare type ImportWorkaround = Connector<\n  HitsWidgetDescription,\n  HitsConnectorParams\n>;\n\nconst connectHitsWithInsights = withInsights(connectHits);\n\nexport default connectHitsWithInsights;\n","import type {\n  AlgoliaSearchHelper as Helper,\n  PlainSearchParameters,\n  SearchParameters,\n  SearchResults,\n} from 'algoliasearch-helper';\nimport type {\n  Connector,\n  TransformItems,\n  Hit,\n  WidgetRenderState,\n  BaseHit,\n} from '../../types';\nimport type { SendEventForHits, BindEventForHits } from '../../lib/utils';\nimport {\n  escapeHits,\n  TAG_PLACEHOLDER,\n  checkRendering,\n  createDocumentationMessageGenerator,\n  isEqual,\n  addAbsolutePosition,\n  addQueryID,\n  noop,\n  createSendEventForHits,\n  createBindEventForHits,\n} from '../../lib/utils';\n\nexport type InfiniteHitsCachedHits<THit extends BaseHit> = {\n  [page: number]: Array<Hit<THit>>;\n};\n\ntype Read<THit extends BaseHit> = ({\n  state,\n}: {\n  state: PlainSearchParameters;\n}) => InfiniteHitsCachedHits<THit> | null;\n\ntype Write<THit extends BaseHit> = ({\n  state,\n  hits,\n}: {\n  state: PlainSearchParameters;\n  hits: InfiniteHitsCachedHits<THit>;\n}) => void;\n\nexport type InfiniteHitsCache<THit extends BaseHit = BaseHit> = {\n  read: Read<THit>;\n  write: Write<THit>;\n};\n\nexport type InfiniteHitsConnectorParams<THit extends BaseHit = BaseHit> = {\n  /**\n   * Escapes HTML entities from hits string values.\n   *\n   * @default `true`\n   */\n  escapeHTML?: boolean;\n\n  /**\n   * Enable the button to load previous results.\n   *\n   * @default `false`\n   */\n  showPrevious?: boolean;\n\n  /**\n   * Receives the items, and is called before displaying them.\n   * Useful for mapping over the items to transform, and remove or reorder them.\n   */\n  transformItems?: TransformItems<Hit<THit>>;\n\n  /**\n   * Reads and writes hits from/to cache.\n   * When user comes back to the search page after leaving for product page,\n   * this helps restore InfiniteHits and its scroll position.\n   */\n  cache?: InfiniteHitsCache<THit>;\n};\n\nexport type InfiniteHitsRenderState<THit extends BaseHit = BaseHit> = {\n  /**\n   * Loads the previous results.\n   */\n  showPrevious: () => void;\n\n  /**\n   * Loads the next page of hits.\n   */\n  showMore: () => void;\n\n  /**\n   * Indicates whether the first page of hits has been reached.\n   */\n  isFirstPage: boolean;\n\n  /**\n   * Indicates whether the last page of hits has been reached.\n   */\n  isLastPage: boolean;\n\n  /**\n   * Send event to insights middleware\n   */\n  sendEvent: SendEventForHits;\n\n  /**\n   * Returns a string of data-insights-event attribute for insights middleware\n   */\n  bindEvent: BindEventForHits;\n\n  /**\n   * Hits for the current page\n   */\n  currentPageHits: Array<Hit<THit>>;\n\n  /**\n   * Hits for current and cached pages\n   */\n  hits: Array<Hit<THit>>;\n\n  /**\n   * The response from the Algolia API.\n   */\n  results?: SearchResults<Hit<THit>>;\n};\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'infinite-hits',\n  connector: true,\n});\n\nexport type InfiniteHitsWidgetDescription<THit extends BaseHit = BaseHit> = {\n  $$type: 'ais.infiniteHits';\n  renderState: InfiniteHitsRenderState<THit>;\n  indexRenderState: {\n    infiniteHits: WidgetRenderState<\n      InfiniteHitsRenderState<THit>,\n      InfiniteHitsConnectorParams<THit>\n    >;\n  };\n  indexUiState: {\n    page: number;\n  };\n};\n\nexport type InfiniteHitsConnector<THit extends BaseHit = BaseHit> = Connector<\n  InfiniteHitsWidgetDescription<THit>,\n  InfiniteHitsConnectorParams<THit>\n>;\n\nfunction getStateWithoutPage(state: PlainSearchParameters) {\n  const { page, ...rest } = state || {};\n  return rest;\n}\n\nfunction getInMemoryCache<THit extends BaseHit>(): InfiniteHitsCache<THit> {\n  let cachedHits: InfiniteHitsCachedHits<THit> | null = null;\n  let cachedState: PlainSearchParameters | null = null;\n  return {\n    read({ state }) {\n      return isEqual(cachedState, getStateWithoutPage(state))\n        ? cachedHits\n        : null;\n    },\n    write({ state, hits }) {\n      cachedState = getStateWithoutPage(state);\n      cachedHits = hits;\n    },\n  };\n}\n\nfunction extractHitsFromCachedHits<THit extends BaseHit>(\n  cachedHits: InfiniteHitsCachedHits<THit>\n) {\n  return Object.keys(cachedHits)\n    .map(Number)\n    .sort((a, b) => a - b)\n    .reduce((acc: Array<Hit<THit>>, page) => {\n      return acc.concat(cachedHits[page]);\n    }, []);\n}\n\nconst connectInfiniteHits: InfiniteHitsConnector = function connectInfiniteHits(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  // @TODO: this should be a generic, but a Connector can not yet be generic itself\n  type THit = BaseHit;\n\n  return (widgetParams) => {\n    const {\n      escapeHTML = true,\n      transformItems = ((items) => items) as NonNullable<\n        InfiniteHitsConnectorParams['transformItems']\n      >,\n      cache = getInMemoryCache(),\n    } = widgetParams || {};\n    let showPrevious: () => void;\n    let showMore: () => void;\n    let sendEvent: SendEventForHits;\n    let bindEvent: BindEventForHits;\n    const getFirstReceivedPage = (\n      state: SearchParameters,\n      cachedHits: InfiniteHitsCachedHits<THit>\n    ) => {\n      const { page = 0 } = state;\n      const pages = Object.keys(cachedHits).map(Number);\n      if (pages.length === 0) {\n        return page;\n      } else {\n        return Math.min(page, ...pages);\n      }\n    };\n    const getLastReceivedPage = (\n      state: SearchParameters,\n      cachedHits: InfiniteHitsCachedHits<THit>\n    ) => {\n      const { page = 0 } = state;\n      const pages = Object.keys(cachedHits).map(Number);\n      if (pages.length === 0) {\n        return page;\n      } else {\n        return Math.max(page, ...pages);\n      }\n    };\n\n    const getShowPrevious =\n      (helper: Helper): (() => void) =>\n      () => {\n        // Using the helper's `overrideStateWithoutTriggeringChangeEvent` method\n        // avoid updating the browser URL when the user displays the previous page.\n        helper\n          .overrideStateWithoutTriggeringChangeEvent({\n            ...helper.state,\n            page:\n              getFirstReceivedPage(\n                helper.state,\n                cache.read({ state: helper.state }) || {}\n              ) - 1,\n          })\n          .searchWithoutTriggeringOnStateChange();\n      };\n\n    const getShowMore =\n      (helper: Helper): (() => void) =>\n      () => {\n        helper\n          .setPage(\n            getLastReceivedPage(\n              helper.state,\n              cache.read({ state: helper.state }) || {}\n            ) + 1\n          )\n          .search();\n      };\n\n    return {\n      $$type: 'ais.infiniteHits',\n\n      init(initOptions) {\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance: initOptions.instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        const widgetRenderState = this.getWidgetRenderState(renderOptions);\n\n        renderFn(\n          {\n            ...widgetRenderState,\n            instantSearchInstance,\n          },\n          false\n        );\n\n        sendEvent('view', widgetRenderState.currentPageHits);\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          infiniteHits: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState({ results, helper, state, instantSearchInstance }) {\n        let isFirstPage: boolean;\n        let currentPageHits: Array<Hit<THit>> = [];\n        const cachedHits = cache.read({ state }) || {};\n\n        if (!results) {\n          showPrevious = getShowPrevious(helper);\n          showMore = getShowMore(helper);\n          sendEvent = createSendEventForHits({\n            instantSearchInstance,\n            index: helper.getIndex(),\n            widgetType: this.$$type,\n          });\n          bindEvent = createBindEventForHits({\n            index: helper.getIndex(),\n            widgetType: this.$$type,\n          });\n          isFirstPage =\n            state.page === undefined ||\n            getFirstReceivedPage(state, cachedHits) === 0;\n        } else {\n          const { page = 0 } = state;\n\n          if (escapeHTML && results.hits.length > 0) {\n            results.hits = escapeHits(results.hits);\n          }\n\n          const hitsWithAbsolutePosition = addAbsolutePosition(\n            results.hits,\n            results.page,\n            results.hitsPerPage\n          );\n\n          const hitsWithAbsolutePositionAndQueryID = addQueryID(\n            hitsWithAbsolutePosition,\n            results.queryID\n          );\n\n          const transformedHits = transformItems(\n            hitsWithAbsolutePositionAndQueryID,\n            { results }\n          );\n\n          if (cachedHits[page] === undefined && !results.__isArtificial) {\n            cachedHits[page] = transformedHits;\n            cache.write({ state, hits: cachedHits });\n          }\n          currentPageHits = transformedHits;\n\n          isFirstPage = getFirstReceivedPage(state, cachedHits) === 0;\n        }\n\n        const hits = extractHitsFromCachedHits(cachedHits);\n        const isLastPage = results\n          ? results.nbPages <= getLastReceivedPage(state, cachedHits) + 1\n          : true;\n\n        return {\n          hits,\n          currentPageHits,\n          sendEvent,\n          bindEvent,\n          results,\n          showPrevious,\n          showMore,\n          isFirstPage,\n          isLastPage,\n          widgetParams,\n        };\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        const stateWithoutPage = state.setQueryParameter('page', undefined);\n\n        if (!escapeHTML) {\n          return stateWithoutPage;\n        }\n\n        return stateWithoutPage.setQueryParameters(\n          Object.keys(TAG_PLACEHOLDER).reduce(\n            (acc, key) => ({\n              ...acc,\n              [key]: undefined,\n            }),\n            {}\n          )\n        );\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const page = searchParameters.page || 0;\n\n        if (!page) {\n          // return without adding `page` to uiState\n          // because we don't want `page=1` in the URL\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          // The page in the UI state is incremented by one\n          // to expose the user value (not `0`).\n          page: page + 1,\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        let widgetSearchParameters = searchParameters;\n\n        if (escapeHTML) {\n          widgetSearchParameters =\n            searchParameters.setQueryParameters(TAG_PLACEHOLDER);\n        }\n\n        // The page in the search parameters is decremented by one\n        // to get to the actual parameter value from the UI state.\n        const page = uiState.page ? uiState.page - 1 : 0;\n\n        return widgetSearchParameters.setQueryParameter('page', page);\n      },\n    };\n  };\n};\n\nexport default connectInfiniteHits;\n","import type { SearchResults } from 'algoliasearch-helper';\nimport type { SendEventForFacet } from '../../lib/utils';\nimport {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  createSendEventForFacet,\n  noop,\n} from '../../lib/utils';\nimport type {\n  Connector,\n  CreateURL,\n  RenderOptions,\n  SortBy,\n  TransformItems,\n  Widget,\n  WidgetRenderState,\n} from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'menu',\n  connector: true,\n});\n\nconst DEFAULT_SORT = ['isRefined', 'name:asc'];\n\nexport type MenuItem = {\n  /**\n   * The value of the menu item.\n   */\n  value: string;\n  /**\n   * Human-readable value of the menu item.\n   */\n  label: string;\n  /**\n   * Number of results matched after refinement is applied.\n   */\n  count: number;\n  /**\n   * Indicates if the refinement is applied.\n   */\n  isRefined: boolean;\n};\n\nexport type MenuConnectorParams = {\n  /**\n   * Name of the attribute for faceting (eg. \"free_shipping\").\n   */\n  attribute: string;\n  /**\n   * How many facets values to retrieve.\n   */\n  limit?: number;\n  /**\n   * Whether to display a button that expands the number of items.\n   */\n  showMore?: boolean;\n  /**\n   * How many facets values to retrieve when `toggleShowMore` is called, this value is meant to be greater than `limit` option.\n   */\n  showMoreLimit?: number;\n  /**\n   * How to sort refinements. Possible values: `count|isRefined|name:asc|name:desc`.\n   *\n   * You can also use a sort function that behaves like the standard Javascript [compareFunction](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#Syntax).\n   *\n   * If a facetOrdering is set in the index settings, it is used when sortBy isn't passed\n   */\n  sortBy?: SortBy<SearchResults.HierarchicalFacet>;\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<MenuItem>;\n};\n\nexport type MenuRenderState = {\n  /**\n   * The elements that can be refined for the current search results.\n   */\n  items: MenuItem[];\n  /**\n   * Creates the URL for a single item name in the list.\n   */\n  createURL: CreateURL<string>;\n  /**\n   * Filter the search to item value.\n   */\n  refine(value: string): void;\n  /**\n   * True if refinement can be applied.\n   */\n  canRefine: boolean;\n  /**\n   * True if the menu is displaying all the menu items.\n   */\n  isShowingMore: boolean;\n  /**\n   * Toggles the number of values displayed between `limit` and `showMore.limit`.\n   */\n  toggleShowMore(): void;\n  /**\n   * `true` if the toggleShowMore button can be activated (enough items to display more or\n   * already displaying more than `limit` items)\n   */\n  canToggleShowMore: boolean;\n  /**\n   * Send event to insights middleware\n   */\n  sendEvent: SendEventForFacet;\n};\n\nexport type MenuWidgetDescription = {\n  $$type: 'ais.menu';\n  renderState: MenuRenderState;\n  indexRenderState: {\n    menu: {\n      [attribute: string]: WidgetRenderState<\n        MenuRenderState,\n        MenuConnectorParams\n      >;\n    };\n  };\n  indexUiState: {\n    menu: {\n      [attribute: string]: string;\n    };\n  };\n};\n\nexport type MenuConnector = Connector<\n  MenuWidgetDescription,\n  MenuConnectorParams\n>;\n\n/**\n * **Menu** connector provides the logic to build a widget that will give the user the ability to choose a single value for a specific facet. The typical usage of menu is for navigation in categories.\n *\n * This connector provides a `toggleShowMore()` function to display more or less items and a `refine()`\n * function to select an item. While selecting a new element, the `refine` will also unselect the\n * one that is currently selected.\n *\n * **Requirement:** the attribute passed as `attribute` must be present in \"attributes for faceting\" on the Algolia dashboard or configured as attributesForFaceting via a set settings call to the Algolia API.\n */\nconst connectMenu: MenuConnector = function connectMenu(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const {\n      attribute,\n      limit = 10,\n      showMore = false,\n      showMoreLimit = 20,\n      sortBy = DEFAULT_SORT,\n      transformItems = ((items) => items) as NonNullable<\n        MenuConnectorParams['transformItems']\n      >,\n    } = widgetParams || {};\n\n    if (!attribute) {\n      throw new Error(withUsage('The `attribute` option is required.'));\n    }\n\n    if (showMore === true && showMoreLimit <= limit) {\n      throw new Error(\n        withUsage('The `showMoreLimit` option must be greater than `limit`.')\n      );\n    }\n\n    type ThisWidget = Widget<\n      MenuWidgetDescription & { widgetParams: typeof widgetParams }\n    >;\n\n    let sendEvent: MenuRenderState['sendEvent'] | undefined;\n    let _createURL: MenuRenderState['createURL'] | undefined;\n    let _refine: MenuRenderState['refine'] | undefined;\n\n    // Provide the same function to the `renderFn` so that way the user\n    // has to only bind it once when `isFirstRendering` for instance\n    let isShowingMore = false;\n    let toggleShowMore = () => {};\n    function createToggleShowMore(\n      renderOptions: RenderOptions,\n      widget: ThisWidget\n    ) {\n      return () => {\n        isShowingMore = !isShowingMore;\n        widget.render!(renderOptions);\n      };\n    }\n    function cachedToggleShowMore() {\n      toggleShowMore();\n    }\n\n    function getLimit() {\n      return isShowingMore ? showMoreLimit : limit;\n    }\n\n    return {\n      $$type: 'ais.menu' as const,\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return state\n          .removeHierarchicalFacet(attribute)\n          .setQueryParameter('maxValuesPerFacet', undefined);\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          menu: {\n            ...renderState.menu,\n            [attribute]: this.getWidgetRenderState(renderOptions),\n          },\n        };\n      },\n\n      getWidgetRenderState(renderOptions) {\n        const { results, createURL, instantSearchInstance, helper } =\n          renderOptions;\n\n        let items: MenuRenderState['items'] = [];\n        let canToggleShowMore = false;\n\n        if (!sendEvent) {\n          sendEvent = createSendEventForFacet({\n            instantSearchInstance,\n            helper,\n            attribute,\n            widgetType: this.$$type,\n          });\n        }\n\n        if (!_createURL) {\n          _createURL = (facetValue: string) =>\n            createURL(\n              helper.state\n                .resetPage()\n                .toggleFacetRefinement(attribute, facetValue)\n            );\n        }\n\n        if (!_refine) {\n          _refine = function (facetValue: string) {\n            const [refinedItem] =\n              helper.getHierarchicalFacetBreadcrumb(attribute);\n            sendEvent!('click', facetValue ? facetValue : refinedItem);\n            helper\n              .toggleFacetRefinement(\n                attribute,\n                facetValue ? facetValue : refinedItem\n              )\n              .search();\n          };\n        }\n\n        if (renderOptions.results) {\n          toggleShowMore = createToggleShowMore(renderOptions, this);\n        }\n\n        if (results) {\n          const facetValues = results.getFacetValues(attribute, {\n            sortBy,\n            facetOrdering: sortBy === DEFAULT_SORT,\n          });\n          const facetItems =\n            facetValues && !Array.isArray(facetValues) && facetValues.data\n              ? facetValues.data\n              : [];\n\n          canToggleShowMore =\n            showMore && (isShowingMore || facetItems.length > getLimit());\n\n          items = transformItems(\n            facetItems\n              .slice(0, getLimit())\n              .map(({ name: label, escapedValue: value, path, ...item }) => ({\n                ...item,\n                label,\n                value,\n              })),\n            { results }\n          );\n        }\n\n        return {\n          items,\n          createURL: _createURL,\n          refine: _refine,\n          sendEvent,\n          canRefine: items.length > 0,\n          widgetParams,\n          isShowingMore,\n          toggleShowMore: cachedToggleShowMore,\n          canToggleShowMore,\n        };\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const [value] =\n          searchParameters.getHierarchicalFacetBreadcrumb(attribute);\n\n        if (!value) {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          menu: {\n            ...uiState.menu,\n            [attribute]: value,\n          },\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        const value = uiState.menu && uiState.menu[attribute];\n\n        const withFacetConfiguration = searchParameters\n          .removeHierarchicalFacet(attribute)\n          .addHierarchicalFacet({\n            name: attribute,\n            attributes: [attribute],\n          });\n\n        const currentMaxValuesPerFacet =\n          withFacetConfiguration.maxValuesPerFacet || 0;\n\n        const nextMaxValuesPerFacet = Math.max(\n          currentMaxValuesPerFacet,\n          showMore ? showMoreLimit : limit\n        );\n\n        const withMaxValuesPerFacet = withFacetConfiguration.setQueryParameter(\n          'maxValuesPerFacet',\n          nextMaxValuesPerFacet\n        );\n\n        if (!value) {\n          return withMaxValuesPerFacet.setQueryParameters({\n            hierarchicalFacetsRefinements: {\n              ...withMaxValuesPerFacet.hierarchicalFacetsRefinements,\n              [attribute]: [],\n            },\n          });\n        }\n\n        return withMaxValuesPerFacet.addHierarchicalFacetRefinement(\n          attribute,\n          value\n        );\n      },\n    };\n  };\n};\n\nexport default connectMenu;\n","import type { SendEventForFacet } from '../../lib/utils';\nimport {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  isFiniteNumber,\n  noop,\n} from '../../lib/utils';\nimport type {\n  Connector,\n  CreateURL,\n  InstantSearch,\n  TransformItems,\n  WidgetRenderState,\n} from '../../types';\nimport type { SearchParameters } from 'algoliasearch-helper';\nimport type { InsightsEvent } from '../../middlewares';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'numeric-menu',\n  connector: true,\n});\n\nexport type NumericMenuConnectorParamsItem = {\n  /**\n   * Name of the option\n   */\n  label: string;\n\n  /**\n   * Higher bound of the option (<=)\n   */\n  start?: number;\n\n  /**\n   * Lower bound of the option (>=)\n   */\n  end?: number;\n};\n\nexport type NumericMenuRenderStateItem = {\n  /**\n   *  Name of the option.\n   */\n  label: string;\n\n  /**\n   * URL encoded of the bounds object with the form `{start, end}`.\n   * This value can be used verbatim in the webpage and can be read by `refine`\n   * directly. If you want to inspect the value, you can do:\n   * `JSON.parse(decodeURI(value))` to get the object.\n   */\n  value: string;\n\n  /**\n   * True if the value is selected\n   */\n  isRefined: boolean;\n};\n\nexport type NumericMenuConnectorParams = {\n  /**\n   * Name of the attribute for filtering\n   */\n  attribute: string;\n\n  /**\n   * List of all the items\n   */\n  items: NumericMenuConnectorParamsItem[];\n\n  /**\n   * Function to transform the items passed to the templates\n   */\n  transformItems?: TransformItems<NumericMenuRenderStateItem>;\n};\n\nexport type NumericMenuRenderState = {\n  /**\n   * The list of available choices\n   */\n  items: NumericMenuRenderStateItem[];\n\n  /**\n   * Creates URLs for the next state, the string is the name of the selected option\n   */\n  createURL: CreateURL<NumericMenuRenderStateItem['value']>;\n\n  /**\n   * `true` if the last search contains no result\n   * @deprecated Use `canRefine` instead.\n   */\n  hasNoResults: boolean;\n\n  /**\n   * Indicates if search state can be refined.\n   *\n   * This is `true` if the last search contains no result and\n   * \"All\" range is selected\n   */\n  canRefine: boolean;\n\n  /**\n   * Sets the selected value and trigger a new search\n   */\n  refine: (facetValue: string) => void;\n\n  /**\n   * Send event to insights middleware\n   */\n  sendEvent: SendEventForFacet;\n};\n\nexport type NumericMenuWidgetDescription = {\n  $$type: 'ais.numericMenu';\n  renderState: NumericMenuRenderState;\n  indexRenderState: {\n    numericMenu: {\n      [attribute: string]: WidgetRenderState<\n        NumericMenuRenderState,\n        NumericMenuConnectorParams\n      >;\n    };\n  };\n  indexUiState: {\n    numericMenu: {\n      // @TODO: this could possibly become `${number}:${number}` later\n      [attribute: string]: string;\n    };\n  };\n};\n\nexport type NumericMenuConnector = Connector<\n  NumericMenuWidgetDescription,\n  NumericMenuConnectorParams\n>;\n\nconst $$type = 'ais.numericMenu';\n\nconst createSendEvent =\n  ({ instantSearchInstance }: { instantSearchInstance: InstantSearch }) =>\n  (...args: [InsightsEvent] | [string, string, string?]) => {\n    if (args.length === 1) {\n      instantSearchInstance.sendEventToInsights(args[0]);\n      return;\n    }\n  };\n\nconst connectNumericMenu: NumericMenuConnector = function connectNumericMenu(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const {\n      attribute = '',\n      items = [],\n      transformItems = ((item) => item) as NonNullable<\n        NumericMenuConnectorParams['transformItems']\n      >,\n    } = widgetParams || {};\n\n    if (attribute === '') {\n      throw new Error(withUsage('The `attribute` option is required.'));\n    }\n\n    if (!items || items.length === 0) {\n      throw new Error(\n        withUsage('The `items` option expects an array of objects.')\n      );\n    }\n\n    type ConnectorState = {\n      refine?(facetValue: string): void;\n      createURL?(state: SearchParameters): (facetValue: string) => string;\n      sendEvent?: SendEventForFacet;\n    };\n\n    const prepareItems = (state: SearchParameters) =>\n      items.map(({ start, end, label }) => ({\n        label,\n        value: encodeURI(JSON.stringify({ start, end })),\n        isRefined: isRefined(state, attribute, { start, end, label }),\n      }));\n\n    const connectorState: ConnectorState = {};\n\n    return {\n      $$type,\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose({ state }) {\n        unmountFn();\n        return state.clearRefinements(attribute);\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const values = searchParameters.getNumericRefinements(attribute);\n\n        const equal = values['='] && values['='][0];\n\n        if (equal || equal === 0) {\n          return {\n            ...uiState,\n            numericMenu: {\n              ...uiState.numericMenu,\n              [attribute]: `${values['=']}`,\n            },\n          };\n        }\n\n        const min = (values['>='] && values['>='][0]) || '';\n        const max = (values['<='] && values['<='][0]) || '';\n\n        if (min === '' && max === '') {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          numericMenu: {\n            ...uiState.numericMenu,\n            [attribute]: `${min}:${max}`,\n          },\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        const value = uiState.numericMenu && uiState.numericMenu[attribute];\n\n        const withoutRefinements = searchParameters.clearRefinements(attribute);\n\n        if (!value) {\n          return withoutRefinements.setQueryParameters({\n            numericRefinements: {\n              ...withoutRefinements.numericRefinements,\n              [attribute]: {},\n            },\n          });\n        }\n\n        const isExact = value.indexOf(':') === -1;\n\n        if (isExact) {\n          return withoutRefinements.addNumericRefinement(\n            attribute,\n            '=',\n            Number(value)\n          );\n        }\n\n        const [min, max] = value.split(':').map(parseFloat);\n\n        const withMinRefinement = isFiniteNumber(min)\n          ? withoutRefinements.addNumericRefinement(attribute, '>=', min)\n          : withoutRefinements;\n\n        const withMaxRefinement = isFiniteNumber(max)\n          ? withMinRefinement.addNumericRefinement(attribute, '<=', max)\n          : withMinRefinement;\n\n        return withMaxRefinement;\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          numericMenu: {\n            ...renderState.numericMenu,\n            [attribute]: this.getWidgetRenderState(renderOptions),\n          },\n        };\n      },\n\n      getWidgetRenderState({\n        results,\n        state,\n        instantSearchInstance,\n        helper,\n        createURL,\n      }) {\n        if (!connectorState.refine) {\n          connectorState.refine = (facetValue) => {\n            const refinedState = getRefinedState(\n              helper.state,\n              attribute,\n              facetValue\n            );\n            connectorState.sendEvent!('click', facetValue);\n            helper.setState(refinedState).search();\n          };\n        }\n\n        if (!connectorState.createURL) {\n          connectorState.createURL = (newState) => (facetValue) =>\n            createURL(getRefinedState(newState, attribute, facetValue));\n        }\n\n        if (!connectorState.sendEvent) {\n          connectorState.sendEvent = createSendEvent({\n            instantSearchInstance,\n          });\n        }\n\n        const hasNoResults = results ? results.nbHits === 0 : true;\n        const preparedItems = prepareItems(state);\n        let allIsSelected = true;\n        // @TODO avoid for..of for polyfill reasons\n        // eslint-disable-next-line no-restricted-syntax\n        for (const item of preparedItems) {\n          if (item.isRefined && decodeURI(item.value) !== '{}') {\n            allIsSelected = false;\n            break;\n          }\n        }\n\n        return {\n          createURL: connectorState.createURL(state),\n          items: transformItems(preparedItems, { results }),\n          hasNoResults,\n          canRefine: !(hasNoResults && allIsSelected),\n          refine: connectorState.refine,\n          sendEvent: connectorState.sendEvent,\n          widgetParams,\n        };\n      },\n    };\n  };\n};\n\nfunction isRefined(\n  state: SearchParameters,\n  attribute: string,\n  option: NumericMenuConnectorParamsItem\n) {\n  // @TODO: same as another spot, why is this mixing arrays & elements?\n  const currentRefinements = state.getNumericRefinements(attribute);\n\n  if (option.start !== undefined && option.end !== undefined) {\n    if (option.start === option.end) {\n      return hasNumericRefinement(currentRefinements, '=', option.start);\n    } else {\n      return (\n        hasNumericRefinement(currentRefinements, '>=', option.start) &&\n        hasNumericRefinement(currentRefinements, '<=', option.end)\n      );\n    }\n  }\n\n  if (option.start !== undefined) {\n    return hasNumericRefinement(currentRefinements, '>=', option.start);\n  }\n\n  if (option.end !== undefined) {\n    return hasNumericRefinement(currentRefinements, '<=', option.end);\n  }\n\n  if (option.start === undefined && option.end === undefined) {\n    return (\n      Object.keys(currentRefinements) as SearchParameters.Operator[]\n    ).every((operator) => (currentRefinements[operator] || []).length === 0);\n  }\n\n  return false;\n}\n\nfunction getRefinedState(\n  state: SearchParameters,\n  attribute: string,\n  facetValue: string\n) {\n  let resolvedState = state;\n\n  const refinedOption = JSON.parse(decodeURI(facetValue));\n\n  // @TODO: why is array / element mixed here & hasRefinements; seems wrong?\n  const currentRefinements = resolvedState.getNumericRefinements(attribute);\n\n  if (refinedOption.start === undefined && refinedOption.end === undefined) {\n    return resolvedState.removeNumericRefinement(attribute);\n  }\n\n  if (!isRefined(resolvedState, attribute, refinedOption)) {\n    resolvedState = resolvedState.removeNumericRefinement(attribute);\n  }\n\n  if (refinedOption.start !== undefined && refinedOption.end !== undefined) {\n    if (refinedOption.start > refinedOption.end) {\n      throw new Error('option.start should be > to option.end');\n    }\n\n    if (refinedOption.start === refinedOption.end) {\n      if (hasNumericRefinement(currentRefinements, '=', refinedOption.start)) {\n        resolvedState = resolvedState.removeNumericRefinement(\n          attribute,\n          '=',\n          refinedOption.start\n        );\n      } else {\n        resolvedState = resolvedState.addNumericRefinement(\n          attribute,\n          '=',\n          refinedOption.start\n        );\n      }\n      return resolvedState;\n    }\n  }\n\n  if (refinedOption.start !== undefined) {\n    if (hasNumericRefinement(currentRefinements, '>=', refinedOption.start)) {\n      resolvedState = resolvedState.removeNumericRefinement(\n        attribute,\n        '>=',\n        refinedOption.start\n      );\n    }\n    resolvedState = resolvedState.addNumericRefinement(\n      attribute,\n      '>=',\n      refinedOption.start\n    );\n  }\n\n  if (refinedOption.end !== undefined) {\n    if (hasNumericRefinement(currentRefinements, '<=', refinedOption.end)) {\n      resolvedState = resolvedState.removeNumericRefinement(\n        attribute,\n        '<=',\n        refinedOption.end\n      );\n    }\n    resolvedState = resolvedState.addNumericRefinement(\n      attribute,\n      '<=',\n      refinedOption.end\n    );\n  }\n\n  if (typeof resolvedState.page === 'number') {\n    resolvedState.page = 0;\n  }\n\n  return resolvedState;\n}\n\nfunction hasNumericRefinement(\n  currentRefinements: SearchParameters.OperatorList,\n  operator: SearchParameters.Operator,\n  value: number\n) {\n  return (\n    currentRefinements[operator] !== undefined &&\n    currentRefinements[operator]!.includes(value)\n  );\n}\n\nexport default connectNumericMenu;\n","import { withInsights } from '../../lib/insights';\nimport type {\n  InfiniteHitsWidgetDescription,\n  InfiniteHitsConnectorParams,\n} from './connectInfiniteHits';\nimport connectInfiniteHits from './connectInfiniteHits';\nimport type { Connector } from '../../types';\n\n/**\n * Due to https://github.com/microsoft/web-build-tools/issues/1050, we need\n * Connector<...> imported in this file, even though it is only used implicitly.\n * This _uses_ Connector<...> so it is not accidentally removed by someone.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ndeclare type ImportWorkaround = Connector<\n  InfiniteHitsWidgetDescription,\n  InfiniteHitsConnectorParams\n>;\n\nconst connectInfiniteHitsWithInsights = withInsights(connectInfiniteHits);\n\nexport default connectInfiniteHitsWithInsights;\n","import {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  noop,\n} from '../../lib/utils';\nimport Paginator from './Paginator';\nimport type { Connector, CreateURL, WidgetRenderState } from '../../types';\nimport type { SearchParameters } from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'pagination',\n  connector: true,\n});\n\nexport type PaginationConnectorParams = {\n  /**\n   * The total number of pages to browse.\n   */\n  totalPages?: number;\n\n  /**\n   * The padding of pages to show around the current page\n   * @default 3\n   */\n  padding?: number;\n};\n\nexport type PaginationRenderState = {\n  /** Creates URLs for the next state, the number is the page to generate the URL for. */\n  createURL: CreateURL<number>;\n\n  /** Sets the current page and triggers a search. */\n  refine(page: number): void;\n\n  /** true if this search returned more than one page */\n  canRefine: boolean;\n\n  /** The number of the page currently displayed. */\n  currentRefinement: number;\n\n  /** The number of hits computed for the last query (can be approximated). */\n  nbHits: number;\n\n  /** The number of pages for the result set. */\n  nbPages: number;\n\n  /** The actual pages relevant to the current situation and padding. */\n  pages: number[];\n\n  /** true if the current page is also the first page. */\n  isFirstPage: boolean;\n\n  /** true if the current page is also the last page. */\n  isLastPage: boolean;\n};\n\nexport type PaginationWidgetDescription = {\n  $$type: 'ais.pagination';\n  renderState: PaginationRenderState;\n  indexRenderState: {\n    pagination: WidgetRenderState<\n      PaginationRenderState,\n      PaginationConnectorParams\n    >;\n  };\n  indexUiState: {\n    page: number;\n  };\n};\n\nexport type PaginationConnector = Connector<\n  PaginationWidgetDescription,\n  PaginationConnectorParams\n>;\n\n/**\n * **Pagination** connector provides the logic to build a widget that will let the user\n * choose the current page of the results.\n *\n * When using the pagination with Algolia, you should be aware that the engine won't provide you pages\n * beyond the 1000th hits by default. You can find more information on the [Algolia documentation](https://www.algolia.com/doc/guides/searching/pagination/#pagination-limitations).\n */\nconst connectPagination: PaginationConnector = function connectPagination(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const { totalPages, padding = 3 } = widgetParams || {};\n\n    const pager = new Paginator({\n      currentPage: 0,\n      total: 0,\n      padding,\n    });\n\n    type ConnectorState = {\n      refine?(page: number): void;\n      createURL?(state: SearchParameters): (page: number) => string;\n    };\n\n    const connectorState: ConnectorState = {};\n\n    function getMaxPage({ nbPages }: { nbPages: number }) {\n      return totalPages !== undefined ? Math.min(totalPages, nbPages) : nbPages;\n    }\n\n    return {\n      $$type: 'ais.pagination',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return state.setQueryParameter('page', undefined);\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const page = searchParameters.page || 0;\n\n        if (!page) {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          page: page + 1,\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        const page = uiState.page ? uiState.page - 1 : 0;\n\n        return searchParameters.setQueryParameter('page', page);\n      },\n\n      getWidgetRenderState({ results, helper, state, createURL }) {\n        if (!connectorState.refine) {\n          connectorState.refine = (page) => {\n            helper.setPage(page);\n            helper.search();\n          };\n        }\n\n        if (!connectorState.createURL) {\n          connectorState.createURL = (helperState) => (page) =>\n            createURL(helperState.setPage(page));\n        }\n\n        const page = state.page || 0;\n        const nbPages = getMaxPage(results || { nbPages: 0 });\n        pager.currentPage = page;\n        pager.total = nbPages;\n\n        return {\n          createURL: connectorState.createURL(state),\n          refine: connectorState.refine,\n          canRefine: nbPages > 1,\n          currentRefinement: page,\n          nbHits: results?.nbHits || 0,\n          nbPages,\n          pages: results ? pager.pages() : [],\n          isFirstPage: pager.isFirstPage(),\n          isLastPage: pager.isLastPage(),\n          widgetParams,\n        };\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          pagination: this.getWidgetRenderState(renderOptions),\n        };\n      },\n    };\n  };\n};\n\nexport default connectPagination;\n","import { range } from '../../lib/utils';\n\nclass Paginator {\n  public currentPage: number;\n  public total: number;\n  public padding: number;\n\n  public constructor(params: {\n    currentPage: number;\n    total: number;\n    padding: number;\n  }) {\n    this.currentPage = params.currentPage;\n    this.total = params.total;\n    this.padding = params.padding;\n  }\n\n  public pages() {\n    const { total, currentPage, padding } = this;\n\n    if (total === 0) return [0];\n\n    const totalDisplayedPages = this.nbPagesDisplayed(padding, total);\n    if (totalDisplayedPages === total) {\n      return range({ end: total });\n    }\n\n    const paddingLeft = this.calculatePaddingLeft(\n      currentPage,\n      padding,\n      total,\n      totalDisplayedPages\n    );\n    const paddingRight = totalDisplayedPages - paddingLeft;\n\n    const first = currentPage - paddingLeft;\n    const last = currentPage + paddingRight;\n\n    return range({ start: first, end: last });\n  }\n\n  public nbPagesDisplayed(padding: number, total: number) {\n    return Math.min(2 * padding + 1, total);\n  }\n\n  public calculatePaddingLeft(\n    current: number,\n    padding: number,\n    total: number,\n    totalDisplayedPages: number\n  ) {\n    if (current <= padding) {\n      return current;\n    }\n\n    if (current >= total - padding) {\n      return totalDisplayedPages - (total - current);\n    }\n\n    return padding;\n  }\n\n  public isLastPage() {\n    return this.currentPage === this.total - 1 || this.total === 0;\n  }\n\n  public isFirstPage() {\n    return this.currentPage === 0;\n  }\n}\n\nexport default Paginator;\n","import type { AlgoliaSearchHelper, SearchResults } from 'algoliasearch-helper';\nimport type { SendEventForFacet } from '../../lib/utils';\nimport {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  isFiniteNumber,\n  find,\n  noop,\n} from '../../lib/utils';\nimport type { InsightsEvent } from '../../middlewares';\nimport type { Connector, InstantSearch, WidgetRenderState } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator(\n  { name: 'range-input', connector: true },\n  { name: 'range-slider', connector: true }\n);\n\nconst $$type = 'ais.range';\n\nexport type RangeMin = number | undefined;\nexport type RangeMax = number | undefined;\n\n// @MAJOR: potentially we should consolidate these types\nexport type RangeBoundaries = [RangeMin, RangeMax];\nexport type Range = {\n  min: RangeMin;\n  max: RangeMax;\n};\n\nexport type RangeRenderState = {\n  /**\n   * Sets a range to filter the results on. Both values\n   * are optional, and will default to the higher and lower bounds. You can use `undefined` to remove a\n   * previously set bound or to set an infinite bound.\n   * @param rangeValue tuple of [min, max] bounds\n   */\n  refine(rangeValue: RangeBoundaries): void;\n\n  /**\n   * Indicates whether this widget can be refined\n   */\n  canRefine: boolean;\n\n  /**\n   * Send an event to the insights middleware\n   */\n  sendEvent: SendEventForFacet;\n\n  /**\n   * Maximum range possible for this search\n   */\n  range: Range;\n\n  /**\n   * Current refinement of the search\n   */\n  start: RangeBoundaries;\n\n  /**\n   * Transform for the rendering `from` and/or `to` values.\n   * Both functions take a `number` as input and should output a `string`.\n   */\n  format: {\n    from(fromValue: number): string;\n    to(toValue: number): string;\n  };\n};\n\nexport type RangeConnectorParams = {\n  /**\n   * Name of the attribute for faceting.\n   */\n  attribute: string;\n\n  /**\n   * Minimal range value, default to automatically computed from the result set.\n   */\n  min?: number;\n\n  /**\n   * Maximal range value, default to automatically computed from the result set.\n   */\n  max?: number;\n\n  /**\n   * Number of digits after decimal point to use.\n   */\n  precision?: number;\n};\n\nexport type RangeWidgetDescription = {\n  $$type: 'ais.range';\n  renderState: RangeRenderState;\n  indexRenderState: {\n    range: {\n      [attribute: string]: WidgetRenderState<\n        RangeRenderState,\n        RangeConnectorParams\n      >;\n    };\n  };\n  indexUiState: {\n    range: {\n      // @TODO: this could possibly become `${number}:${number}` later\n      [attribute: string]: string;\n    };\n  };\n};\n\nexport type RangeConnector = Connector<\n  RangeWidgetDescription,\n  RangeConnectorParams\n>;\n\nfunction toPrecision({\n  min,\n  max,\n  precision,\n}: {\n  min?: number;\n  max?: number;\n  precision: number;\n}) {\n  const pow = Math.pow(10, precision);\n\n  return {\n    min: min ? Math.floor(min * pow) / pow : min,\n    max: max ? Math.ceil(max * pow) / pow : max,\n  };\n}\n\n/**\n * **Range** connector provides the logic to create custom widget that will let\n * the user refine results using a numeric range.\n *\n * This connectors provides a `refine()` function that accepts bounds. It will also provide\n * information about the min and max bounds for the current result set.\n */\nconst connectRange: RangeConnector = function connectRange(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const {\n      attribute = '',\n      min: minBound,\n      max: maxBound,\n      precision = 0,\n    } = widgetParams || {};\n\n    if (!attribute) {\n      throw new Error(withUsage('The `attribute` option is required.'));\n    }\n\n    if (\n      isFiniteNumber(minBound) &&\n      isFiniteNumber(maxBound) &&\n      minBound > maxBound\n    ) {\n      throw new Error(withUsage(\"The `max` option can't be lower than `min`.\"));\n    }\n\n    const formatToNumber = (v: string | number) =>\n      Number(Number(v).toFixed(precision));\n\n    const rangeFormatter = {\n      from: (v: number) => v.toLocaleString(),\n      to: (v: number) => formatToNumber(v).toLocaleString(),\n    };\n\n    // eslint-disable-next-line complexity\n    const getRefinedState = (\n      helper: AlgoliaSearchHelper,\n      currentRange: Range,\n      nextMin: RangeMin | string,\n      nextMax: RangeMax | string\n    ) => {\n      let resolvedState = helper.state;\n      const { min: currentRangeMin, max: currentRangeMax } = currentRange;\n\n      const [min] = resolvedState.getNumericRefinement(attribute, '>=') || [];\n      const [max] = resolvedState.getNumericRefinement(attribute, '<=') || [];\n\n      const isResetMin = nextMin === undefined || nextMin === '';\n      const isResetMax = nextMax === undefined || nextMax === '';\n\n      const { min: nextMinAsNumber, max: nextMaxAsNumber } = toPrecision({\n        min: !isResetMin ? parseFloat(nextMin as string) : undefined,\n        max: !isResetMax ? parseFloat(nextMax as string) : undefined,\n        precision,\n      });\n\n      let newNextMin: RangeMin;\n      if (!isFiniteNumber(minBound) && currentRangeMin === nextMinAsNumber) {\n        newNextMin = undefined;\n      } else if (isFiniteNumber(minBound) && isResetMin) {\n        newNextMin = minBound;\n      } else {\n        newNextMin = nextMinAsNumber;\n      }\n\n      let newNextMax: RangeMax;\n      if (!isFiniteNumber(maxBound) && currentRangeMax === nextMaxAsNumber) {\n        newNextMax = undefined;\n      } else if (isFiniteNumber(maxBound) && isResetMax) {\n        newNextMax = maxBound;\n      } else {\n        newNextMax = nextMaxAsNumber;\n      }\n\n      const isResetNewNextMin = newNextMin === undefined;\n\n      const isGreaterThanCurrentRange =\n        isFiniteNumber(currentRangeMin) && currentRangeMin <= newNextMin!;\n      const isMinValid =\n        isResetNewNextMin ||\n        (isFiniteNumber(newNextMin) &&\n          (!isFiniteNumber(currentRangeMin) || isGreaterThanCurrentRange));\n\n      const isResetNewNextMax = newNextMax === undefined;\n      const isLowerThanRange =\n        isFiniteNumber(newNextMax) && currentRangeMax! >= newNextMax;\n      const isMaxValid =\n        isResetNewNextMax ||\n        (isFiniteNumber(newNextMax) &&\n          (!isFiniteNumber(currentRangeMax) || isLowerThanRange));\n\n      const hasMinChange = min !== newNextMin;\n      const hasMaxChange = max !== newNextMax;\n\n      if ((hasMinChange || hasMaxChange) && isMinValid && isMaxValid) {\n        resolvedState = resolvedState.removeNumericRefinement(attribute);\n\n        if (isFiniteNumber(newNextMin)) {\n          resolvedState = resolvedState.addNumericRefinement(\n            attribute,\n            '>=',\n            newNextMin\n          );\n        }\n\n        if (isFiniteNumber(newNextMax)) {\n          resolvedState = resolvedState.addNumericRefinement(\n            attribute,\n            '<=',\n            newNextMax\n          );\n        }\n\n        return resolvedState.resetPage();\n      }\n\n      return null;\n    };\n\n    const createSendEvent =\n      (instantSearchInstance: InstantSearch) =>\n      (...args: [InsightsEvent] | [string, string, string?]) => {\n        if (args.length === 1) {\n          instantSearchInstance.sendEventToInsights(args[0]);\n          return;\n        }\n      };\n\n    function _getCurrentRange(\n      stats: Partial<NonNullable<SearchResults.Facet['stats']>>\n    ) {\n      let min: number;\n      if (isFiniteNumber(minBound)) {\n        min = minBound;\n      } else if (isFiniteNumber(stats.min)) {\n        min = stats.min;\n      } else {\n        min = 0;\n      }\n\n      let max: number;\n      if (isFiniteNumber(maxBound)) {\n        max = maxBound;\n      } else if (isFiniteNumber(stats.max)) {\n        max = stats.max;\n      } else {\n        max = 0;\n      }\n\n      return toPrecision({ min, max, precision });\n    }\n\n    function _getCurrentRefinement(\n      helper: AlgoliaSearchHelper\n    ): RangeBoundaries {\n      const [minValue] = helper.getNumericRefinement(attribute, '>=') || [];\n\n      const [maxValue] = helper.getNumericRefinement(attribute, '<=') || [];\n\n      const min = isFiniteNumber(minValue) ? minValue : -Infinity;\n      const max = isFiniteNumber(maxValue) ? maxValue : Infinity;\n\n      return [min, max];\n    }\n\n    function _refine(helper: AlgoliaSearchHelper, currentRange: Range) {\n      return ([nextMin, nextMax]: RangeBoundaries = [undefined, undefined]) => {\n        const refinedState = getRefinedState(\n          helper,\n          currentRange,\n          nextMin,\n          nextMax\n        );\n        if (refinedState) {\n          helper.setState(refinedState).search();\n        }\n      };\n    }\n\n    return {\n      $$type,\n\n      init(initOptions) {\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance: initOptions.instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance: renderOptions.instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          range: {\n            ...renderState.range,\n            [attribute]: this.getWidgetRenderState(renderOptions),\n          },\n        };\n      },\n\n      getWidgetRenderState({ results, helper, instantSearchInstance }) {\n        const facetsFromResults = (results && results.disjunctiveFacets) || [];\n        const facet = find(\n          facetsFromResults,\n          (facetResult) => facetResult.name === attribute\n        );\n        const stats = (facet && facet.stats) || {\n          min: undefined,\n          max: undefined,\n        };\n\n        const currentRange = _getCurrentRange(stats);\n        const start = _getCurrentRefinement(helper);\n\n        let refine: ReturnType<typeof _refine>;\n\n        if (!results) {\n          // On first render pass an empty range\n          // to be able to bypass the validation\n          // related to it\n          refine = _refine(helper, {\n            min: undefined,\n            max: undefined,\n          });\n        } else {\n          refine = _refine(helper, currentRange);\n        }\n\n        return {\n          refine,\n          canRefine: currentRange.min !== currentRange.max,\n          format: rangeFormatter,\n          range: currentRange,\n          sendEvent: createSendEvent(instantSearchInstance),\n          widgetParams: {\n            ...widgetParams,\n            precision,\n          },\n          start,\n        };\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return state\n          .removeDisjunctiveFacet(attribute)\n          .removeNumericRefinement(attribute);\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const { '>=': min = [], '<=': max = [] } =\n          searchParameters.getNumericRefinements(attribute);\n\n        if (min.length === 0 && max.length === 0) {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          range: {\n            ...uiState.range,\n            [attribute]: `${min}:${max}`,\n          },\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        let widgetSearchParameters = searchParameters\n          .addDisjunctiveFacet(attribute)\n          .setQueryParameters({\n            numericRefinements: {\n              ...searchParameters.numericRefinements,\n              [attribute]: {},\n            },\n          });\n\n        if (isFiniteNumber(minBound)) {\n          widgetSearchParameters = widgetSearchParameters.addNumericRefinement(\n            attribute,\n            '>=',\n            minBound\n          );\n        }\n\n        if (isFiniteNumber(maxBound)) {\n          widgetSearchParameters = widgetSearchParameters.addNumericRefinement(\n            attribute,\n            '<=',\n            maxBound\n          );\n        }\n\n        const value = uiState.range && uiState.range[attribute];\n\n        if (!value || value.indexOf(':') === -1) {\n          return widgetSearchParameters;\n        }\n\n        const [lowerBound, upperBound] = value.split(':').map(parseFloat);\n\n        if (\n          isFiniteNumber(lowerBound) &&\n          (!isFiniteNumber(minBound) || minBound < lowerBound)\n        ) {\n          widgetSearchParameters =\n            widgetSearchParameters.removeNumericRefinement(attribute, '>=');\n          widgetSearchParameters = widgetSearchParameters.addNumericRefinement(\n            attribute,\n            '>=',\n            lowerBound\n          );\n        }\n\n        if (\n          isFiniteNumber(upperBound) &&\n          (!isFiniteNumber(maxBound) || upperBound < maxBound)\n        ) {\n          widgetSearchParameters =\n            widgetSearchParameters.removeNumericRefinement(attribute, '<=');\n          widgetSearchParameters = widgetSearchParameters.addNumericRefinement(\n            attribute,\n            '<=',\n            upperBound\n          );\n        }\n\n        return widgetSearchParameters;\n      },\n    };\n  };\n};\n\nexport default connectRange;\n","import type { AlgoliaSearchHelper, SearchResults } from 'algoliasearch-helper';\nimport type { SendEventForFacet } from '../../lib/utils';\nimport {\n  escapeFacets,\n  TAG_PLACEHOLDER,\n  TAG_REPLACEMENT,\n  checkRendering,\n  createDocumentationMessageGenerator,\n  createSendEventForFacet,\n  noop,\n} from '../../lib/utils';\nimport type {\n  Connector,\n  TransformItems,\n  SortBy,\n  RenderOptions,\n  Widget,\n  InitOptions,\n  FacetHit,\n  CreateURL,\n  WidgetRenderState,\n} from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'refinement-list',\n  connector: true,\n});\n\nconst DEFAULT_SORT = ['isRefined', 'count:desc', 'name:asc'];\n\nexport type RefinementListItem = {\n  /**\n   * The value of the refinement list item.\n   */\n  value: string;\n  /**\n   * Human-readable value of the refinement list item.\n   */\n  label: string;\n  /**\n   * Human-readable value of the searched refinement list item.\n   */\n  highlighted?: string;\n  /**\n   * Number of matched results after refinement is applied.\n   */\n  count: number;\n  /**\n   * Indicates if the list item is refined.\n   */\n  isRefined: boolean;\n};\n\nexport type RefinementListConnectorParams = {\n  /**\n   * The name of the attribute in the records.\n   */\n  attribute: string;\n  /**\n   * How the filters are combined together.\n   */\n  operator?: 'and' | 'or';\n  /**\n   * The max number of items to display when\n   * `showMoreLimit` is not set or if the widget is showing less value.\n   */\n  limit?: number;\n  /**\n   * Whether to display a button that expands the number of items.\n   */\n  showMore?: boolean;\n  /**\n   * The max number of items to display if the widget\n   * is showing more items.\n   */\n  showMoreLimit?: number;\n  /**\n   * How to sort refinements. Possible values: `count|isRefined|name:asc|name:desc`.\n   *\n   * You can also use a sort function that behaves like the standard Javascript [compareFunction](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#Syntax).\n   *\n   * If a facetOrdering is set in the index settings, it is used when sortBy isn't passed\n   */\n  sortBy?: SortBy<SearchResults.FacetValue>;\n  /**\n   * Escapes the content of the facet values.\n   */\n  escapeFacetValues?: boolean;\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<RefinementListItem>;\n};\n\nexport type RefinementListRenderState = {\n  /**\n   * The list of filtering values returned from Algolia API.\n   */\n  items: RefinementListItem[];\n  /**\n   * indicates whether the results are exhaustive (complete)\n   */\n  hasExhaustiveItems: boolean;\n  /**\n   * Creates the next state url for a selected refinement.\n   */\n  createURL: CreateURL<string>;\n  /**\n   * Action to apply selected refinements.\n   */\n  refine(value: string): void;\n  /**\n   * Send event to insights middleware\n   */\n  sendEvent: SendEventForFacet;\n  /**\n   * Searches for values inside the list.\n   */\n  searchForItems(query: string): void;\n  /**\n   * `true` if the values are from an index search.\n   */\n  isFromSearch: boolean;\n  /**\n   * `true` if a refinement can be applied.\n   */\n  canRefine: boolean;\n  /**\n   * `true` if the toggleShowMore button can be activated (enough items to display more or\n   * already displaying more than `limit` items)\n   */\n  canToggleShowMore: boolean;\n  /**\n   * True if the menu is displaying all the menu items.\n   */\n  isShowingMore: boolean;\n  /**\n   * Toggles the number of values displayed between `limit` and `showMoreLimit`.\n   */\n  toggleShowMore(): void;\n};\n\nexport type RefinementListWidgetDescription = {\n  $$type: 'ais.refinementList';\n  renderState: RefinementListRenderState;\n  indexRenderState: {\n    refinementList: {\n      [attribute: string]: WidgetRenderState<\n        RefinementListRenderState,\n        RefinementListConnectorParams\n      >;\n    };\n  };\n  indexUiState: {\n    refinementList: {\n      [attribute: string]: string[];\n    };\n  };\n};\n\nexport type RefinementListConnector = Connector<\n  RefinementListWidgetDescription,\n  RefinementListConnectorParams\n>;\n\n/**\n * **RefinementList** connector provides the logic to build a custom widget that\n * will let the user filter the results based on the values of a specific facet.\n *\n * **Requirement:** the attribute passed as `attribute` must be present in\n * attributesForFaceting of the searched index.\n *\n * This connector provides:\n * - a `refine()` function to select an item.\n * - a `toggleShowMore()` function to display more or less items\n * - a `searchForItems()` function to search within the items.\n */\nconst connectRefinementList: RefinementListConnector =\n  function connectRefinementList(renderFn, unmountFn = noop) {\n    checkRendering(renderFn, withUsage());\n\n    return (widgetParams) => {\n      const {\n        attribute,\n        operator = 'or',\n        limit = 10,\n        showMore = false,\n        showMoreLimit = 20,\n        sortBy = DEFAULT_SORT,\n        escapeFacetValues = true,\n        transformItems = ((items) => items) as NonNullable<\n          RefinementListConnectorParams['transformItems']\n        >,\n      } = widgetParams || {};\n\n      type ThisWidget = Widget<\n        RefinementListWidgetDescription & { widgetParams: typeof widgetParams }\n      >;\n\n      if (!attribute) {\n        throw new Error(withUsage('The `attribute` option is required.'));\n      }\n\n      if (!/^(and|or)$/.test(operator)) {\n        throw new Error(\n          withUsage(\n            `The \\`operator\\` must one of: \\`\"and\"\\`, \\`\"or\"\\` (got \"${operator}\").`\n          )\n        );\n      }\n\n      if (showMore === true && showMoreLimit <= limit) {\n        throw new Error(\n          withUsage('`showMoreLimit` should be greater than `limit`.')\n        );\n      }\n\n      const formatItems = ({\n        name: label,\n        escapedValue: value,\n        ...item\n      }: SearchResults.FacetValue): RefinementListItem => ({\n        ...item,\n        value,\n        label,\n        highlighted: label,\n      });\n\n      let lastResultsFromMainSearch: SearchResults;\n      let lastItemsFromMainSearch: RefinementListItem[] = [];\n      let hasExhaustiveItems = true;\n      let triggerRefine: RefinementListRenderState['refine'] | undefined;\n      let sendEvent: RefinementListRenderState['sendEvent'] | undefined;\n\n      let isShowingMore = false;\n      // Provide the same function to the `renderFn` so that way the user\n      // has to only bind it once when `isFirstRendering` for instance\n      let toggleShowMore = () => {};\n      function cachedToggleShowMore() {\n        toggleShowMore();\n      }\n\n      function createToggleShowMore(\n        renderOptions: RenderOptions,\n        widget: ThisWidget\n      ) {\n        return () => {\n          isShowingMore = !isShowingMore;\n          widget.render!(renderOptions);\n        };\n      }\n\n      function getLimit() {\n        return isShowingMore ? showMoreLimit : limit;\n      }\n\n      let searchForFacetValues: (\n        renderOptions: RenderOptions | InitOptions\n      ) => RefinementListRenderState['searchForItems'] = () => () => {};\n\n      const createSearchForFacetValues = function (\n        helper: AlgoliaSearchHelper,\n        widget: ThisWidget\n      ) {\n        return (renderOptions: RenderOptions | InitOptions) =>\n          (query: string) => {\n            const { instantSearchInstance, results: searchResults } =\n              renderOptions;\n            if (query === '' && lastItemsFromMainSearch) {\n              // render with previous data from the helper.\n              renderFn(\n                {\n                  ...widget.getWidgetRenderState({\n                    ...renderOptions,\n                    results: lastResultsFromMainSearch,\n                  }),\n                  instantSearchInstance,\n                },\n                false\n              );\n            } else {\n              const tags = {\n                highlightPreTag: escapeFacetValues\n                  ? TAG_PLACEHOLDER.highlightPreTag\n                  : TAG_REPLACEMENT.highlightPreTag,\n                highlightPostTag: escapeFacetValues\n                  ? TAG_PLACEHOLDER.highlightPostTag\n                  : TAG_REPLACEMENT.highlightPostTag,\n              };\n\n              helper\n                .searchForFacetValues(\n                  attribute,\n                  query,\n                  // We cap the `maxFacetHits` value to 100 because the Algolia API\n                  // doesn't support a greater number.\n                  // See https://www.algolia.com/doc/api-reference/api-parameters/maxFacetHits/\n                  Math.min(getLimit(), 100),\n                  tags\n                )\n                .then((results) => {\n                  const facetValues = escapeFacetValues\n                    ? escapeFacets(results.facetHits)\n                    : results.facetHits;\n\n                  const normalizedFacetValues = transformItems(\n                    facetValues.map(({ escapedValue, value, ...item }) => ({\n                      ...item,\n                      value: escapedValue,\n                      label: value,\n                    })),\n                    { results: searchResults }\n                  );\n\n                  renderFn(\n                    {\n                      ...widget.getWidgetRenderState({\n                        ...renderOptions,\n                        results: lastResultsFromMainSearch,\n                      }),\n                      items: normalizedFacetValues,\n                      canToggleShowMore: false,\n                      canRefine: true,\n                      isFromSearch: true,\n                      instantSearchInstance,\n                    },\n                    false\n                  );\n                });\n            }\n          };\n      };\n\n      return {\n        $$type: 'ais.refinementList' as const,\n\n        init(initOptions) {\n          renderFn(\n            {\n              ...this.getWidgetRenderState(initOptions),\n              instantSearchInstance: initOptions.instantSearchInstance,\n            },\n            true\n          );\n        },\n\n        render(renderOptions) {\n          renderFn(\n            {\n              ...this.getWidgetRenderState(renderOptions),\n              instantSearchInstance: renderOptions.instantSearchInstance,\n            },\n            false\n          );\n        },\n\n        getRenderState(renderState, renderOptions) {\n          return {\n            ...renderState,\n            refinementList: {\n              ...renderState.refinementList,\n              [attribute]: this.getWidgetRenderState(renderOptions),\n            },\n          };\n        },\n\n        getWidgetRenderState(renderOptions) {\n          const { results, state, createURL, instantSearchInstance, helper } =\n            renderOptions;\n          let items: RefinementListItem[] = [];\n          let facetValues: SearchResults.FacetValue[] | FacetHit[] = [];\n\n          if (!sendEvent || !triggerRefine || !searchForFacetValues) {\n            sendEvent = createSendEventForFacet({\n              instantSearchInstance,\n              helper,\n              attribute,\n              widgetType: this.$$type,\n            });\n\n            triggerRefine = (facetValue) => {\n              sendEvent!('click', facetValue);\n              helper.toggleFacetRefinement(attribute, facetValue).search();\n            };\n\n            searchForFacetValues = createSearchForFacetValues(helper, this);\n          }\n\n          if (results) {\n            const values = results.getFacetValues(attribute, {\n              sortBy,\n              facetOrdering: sortBy === DEFAULT_SORT,\n            });\n            facetValues = values && Array.isArray(values) ? values : [];\n            items = transformItems(\n              facetValues.slice(0, getLimit()).map(formatItems),\n              { results }\n            );\n\n            const maxValuesPerFacetConfig = state.maxValuesPerFacet;\n            const currentLimit = getLimit();\n            // If the limit is the max number of facet retrieved it is impossible to know\n            // if the facets are exhaustive. The only moment we are sure it is exhaustive\n            // is when it is strictly under the number requested unless we know that another\n            // widget has requested more values (maxValuesPerFacet > getLimit()).\n            // Because this is used for making the search of facets unable or not, it is important\n            // to be conservative here.\n            hasExhaustiveItems =\n              maxValuesPerFacetConfig! > currentLimit\n                ? facetValues.length <= currentLimit\n                : facetValues.length < currentLimit;\n\n            lastResultsFromMainSearch = results;\n            lastItemsFromMainSearch = items;\n\n            if (renderOptions.results) {\n              toggleShowMore = createToggleShowMore(renderOptions, this);\n            }\n          }\n\n          // Do not mistake searchForFacetValues and searchFacetValues which is the actual search\n          // function\n          const searchFacetValues =\n            searchForFacetValues && searchForFacetValues(renderOptions);\n\n          const canShowLess =\n            isShowingMore && lastItemsFromMainSearch.length > limit;\n          const canShowMore = showMore && !hasExhaustiveItems;\n\n          const canToggleShowMore = canShowLess || canShowMore;\n\n          return {\n            createURL: (facetValue) =>\n              createURL(\n                state.resetPage().toggleFacetRefinement(attribute, facetValue)\n              ),\n            items,\n            refine: triggerRefine,\n            searchForItems: searchFacetValues,\n            isFromSearch: false,\n            canRefine: items.length > 0,\n            widgetParams,\n            isShowingMore,\n            canToggleShowMore,\n            toggleShowMore: cachedToggleShowMore,\n            sendEvent,\n            hasExhaustiveItems,\n          };\n        },\n\n        dispose({ state }) {\n          unmountFn();\n\n          const withoutMaxValuesPerFacet = state.setQueryParameter(\n            'maxValuesPerFacet',\n            undefined\n          );\n          if (operator === 'and') {\n            return withoutMaxValuesPerFacet.removeFacet(attribute);\n          }\n          return withoutMaxValuesPerFacet.removeDisjunctiveFacet(attribute);\n        },\n\n        getWidgetUiState(uiState, { searchParameters }) {\n          const values =\n            operator === 'or'\n              ? searchParameters.getDisjunctiveRefinements(attribute)\n              : searchParameters.getConjunctiveRefinements(attribute);\n\n          if (!values.length) {\n            return uiState;\n          }\n\n          return {\n            ...uiState,\n            refinementList: {\n              ...uiState.refinementList,\n              [attribute]: values,\n            },\n          };\n        },\n\n        getWidgetSearchParameters(searchParameters, { uiState }) {\n          const isDisjunctive = operator === 'or';\n          const values =\n            uiState.refinementList && uiState.refinementList[attribute];\n\n          const withoutRefinements =\n            searchParameters.clearRefinements(attribute);\n          const withFacetConfiguration = isDisjunctive\n            ? withoutRefinements.addDisjunctiveFacet(attribute)\n            : withoutRefinements.addFacet(attribute);\n\n          const currentMaxValuesPerFacet =\n            withFacetConfiguration.maxValuesPerFacet || 0;\n\n          const nextMaxValuesPerFacet = Math.max(\n            currentMaxValuesPerFacet,\n            showMore ? showMoreLimit : limit\n          );\n\n          const withMaxValuesPerFacet =\n            withFacetConfiguration.setQueryParameter(\n              'maxValuesPerFacet',\n              nextMaxValuesPerFacet\n            );\n\n          if (!values) {\n            const key = isDisjunctive\n              ? 'disjunctiveFacetsRefinements'\n              : 'facetsRefinements';\n\n            return withMaxValuesPerFacet.setQueryParameters({\n              [key]: {\n                ...withMaxValuesPerFacet[key],\n                [attribute]: [],\n              },\n            });\n          }\n\n          return values.reduce(\n            (parameters, value) =>\n              isDisjunctive\n                ? parameters.addDisjunctiveFacetRefinement(attribute, value)\n                : parameters.addFacetRefinement(attribute, value),\n            withMaxValuesPerFacet\n          );\n        },\n      };\n    };\n  };\n\nexport default connectRefinementList;\n","import {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  noop,\n} from '../../lib/utils';\nimport type { Connector, WidgetRenderState } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'search-box',\n  connector: true,\n});\n\nexport type SearchBoxConnectorParams = {\n  /**\n   * A function that will be called every time\n   * a new value for the query is set. The first parameter is the query and the second is a\n   * function to actually trigger the search. The function takes the query as the parameter.\n   *\n   * This queryHook can be used to debounce the number of searches done from the searchBox.\n   */\n  queryHook?: (query: string, hook: (value: string) => void) => void;\n};\n\n/**\n * @typedef {Object} CustomSearchBoxWidgetParams\n * @property {function(string, function(string))} [queryHook = undefined] A function that will be called every time\n * a new value for the query is set. The first parameter is the query and the second is a\n * function to actually trigger the search. The function takes the query as the parameter.\n *\n * This queryHook can be used to debounce the number of searches done from the searchBox.\n */\n\nexport type SearchBoxRenderState = {\n  /**\n   * The query from the last search.\n   */\n  query: string;\n  /**\n   * Sets a new query and searches.\n   */\n  refine: (value: string) => void;\n  /**\n   * Remove the query and perform search.\n   */\n  clear: () => void;\n  /**\n   * `true` if the search results takes more than a certain time to come back\n   * from Algolia servers. This can be configured on the InstantSearch constructor with the attribute\n   * `stalledSearchDelay` which is 200ms, by default.\n   * @deprecated use `instantSearchInstance.status` instead\n   */\n  isSearchStalled: boolean;\n};\n\nexport type SearchBoxWidgetDescription = {\n  $$type: 'ais.searchBox';\n  renderState: SearchBoxRenderState;\n  indexRenderState: {\n    searchBox: WidgetRenderState<\n      SearchBoxRenderState,\n      SearchBoxConnectorParams\n    >;\n  };\n  indexUiState: {\n    query: string;\n  };\n};\n\nexport type SearchBoxConnector = Connector<\n  SearchBoxWidgetDescription,\n  SearchBoxConnectorParams\n>;\n\nconst defaultQueryHook: SearchBoxConnectorParams['queryHook'] = (query, hook) =>\n  hook(query);\n\n/**\n * **SearchBox** connector provides the logic to build a widget that will let the user search for a query.\n *\n * The connector provides to the rendering: `refine()` to set the query. The behaviour of this function\n * may be impacted by the `queryHook` widget parameter.\n */\nconst connectSearchBox: SearchBoxConnector = function connectSearchBox(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const { queryHook = defaultQueryHook } = widgetParams || {};\n\n    let _refine: SearchBoxRenderState['refine'];\n    let _clear: SearchBoxRenderState['clear'];\n\n    return {\n      $$type: 'ais.searchBox',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return state.setQueryParameter('query', undefined);\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          searchBox: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState({ helper, searchMetadata, state }) {\n        if (!_refine) {\n          _refine = (query) => {\n            queryHook(query, (q) => helper.setQuery(q).search());\n          };\n\n          _clear = () => {\n            helper.setQuery('').search();\n          };\n        }\n\n        return {\n          query: state.query || '',\n          refine: _refine,\n          clear: _clear,\n          widgetParams,\n          isSearchStalled: searchMetadata.isSearchStalled,\n        };\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const query = searchParameters.query || '';\n\n        if (query === '' || (uiState && uiState.query === query)) {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          query,\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        return searchParameters.setQueryParameter('query', uiState.query || '');\n      },\n    };\n  };\n};\n\nexport default connectSearchBox;\n","import {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  find,\n  warning,\n  noop,\n} from '../../lib/utils';\nimport type { Connector, TransformItems, WidgetRenderState } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'sort-by',\n  connector: true,\n});\n\n/**\n * The **SortBy** connector provides the logic to build a custom widget that will display a\n * list of indices. With Algolia, this is most commonly used for changing ranking strategy. This allows\n * a user to change how the hits are being sorted.\n */\n\nexport type SortByItem = {\n  /**\n   * The name of the index to target.\n   */\n  value: string;\n  /**\n   * The label of the index to display.\n   */\n  label: string;\n};\n\nexport type SortByConnectorParams = {\n  /**\n   * Array of objects defining the different indices to choose from.\n   */\n  items: SortByItem[];\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<SortByItem>;\n};\n\nexport type SortByRenderState = {\n  /**\n   * The initially selected index.\n   */\n  initialIndex?: string;\n  /**\n   * The currently selected index.\n   */\n  currentRefinement: string;\n  /**\n   * All the available indices\n   */\n  options: SortByItem[];\n  /**\n   * Switches indices and triggers a new search.\n   */\n  refine: (value: string) => void;\n  /**\n   * `true` if the last search contains no result.\n   * @deprecated Use `canRefine` instead.\n   */\n  hasNoResults: boolean;\n  /**\n   * `true` if we can refine.\n   */\n  canRefine: boolean;\n};\n\nexport type SortByWidgetDescription = {\n  $$type: 'ais.sortBy';\n  renderState: SortByRenderState;\n  indexRenderState: {\n    sortBy: WidgetRenderState<SortByRenderState, SortByConnectorParams>;\n  };\n  indexUiState: {\n    sortBy: string;\n  };\n};\n\nexport type SortByConnector = Connector<\n  SortByWidgetDescription,\n  SortByConnectorParams\n>;\n\nconst connectSortBy: SortByConnector = function connectSortBy(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  const connectorState: ConnectorState = {};\n\n  type ConnectorState = {\n    setIndex?(indexName: string): void;\n    initialIndex?: string;\n  };\n\n  return (widgetParams) => {\n    const {\n      items,\n      transformItems = ((x) => x) as NonNullable<\n        SortByConnectorParams['transformItems']\n      >,\n    } = widgetParams || {};\n\n    if (!Array.isArray(items)) {\n      throw new Error(\n        withUsage('The `items` option expects an array of objects.')\n      );\n    }\n\n    return {\n      $$type: 'ais.sortBy',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        const widgetRenderState = this.getWidgetRenderState(initOptions);\n        const currentIndex = widgetRenderState.currentRefinement;\n        const isCurrentIndexInItems = find(\n          items,\n          (item) => item.value === currentIndex\n        );\n\n        warning(\n          isCurrentIndexInItems !== undefined,\n          `The index named \"${currentIndex}\" is not listed in the \\`items\\` of \\`sortBy\\`.`\n        );\n\n        renderFn(\n          {\n            ...widgetRenderState,\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return connectorState.initialIndex\n          ? state.setIndex(connectorState.initialIndex)\n          : state;\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          sortBy: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState({ results, helper, state, parent }) {\n        if (!connectorState.initialIndex && parent) {\n          connectorState.initialIndex = parent.getIndexName();\n        }\n        if (!connectorState.setIndex) {\n          connectorState.setIndex = (indexName) => {\n            helper.setIndex(indexName).search();\n          };\n        }\n\n        const hasNoResults = results ? results.nbHits === 0 : true;\n\n        return {\n          currentRefinement: state.index,\n          options: transformItems(items, { results }),\n          refine: connectorState.setIndex,\n          hasNoResults,\n          canRefine: !hasNoResults && items.length > 0,\n          widgetParams,\n        };\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const currentIndex = searchParameters.index;\n\n        return {\n          ...uiState,\n          sortBy:\n            currentIndex !== connectorState.initialIndex\n              ? currentIndex\n              : undefined,\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        return searchParameters.setQueryParameter(\n          'index',\n          uiState.sortBy ||\n            connectorState.initialIndex ||\n            searchParameters.index\n        );\n      },\n    };\n  };\n};\n\nexport default connectSortBy;\n","import type {\n  AlgoliaSearchHelper,\n  SearchParameters,\n  SearchResults,\n} from 'algoliasearch-helper';\nimport {\n  checkRendering,\n  createDocumentationLink,\n  createDocumentationMessageGenerator,\n  noop,\n  warning,\n} from '../../lib/utils';\nimport type {\n  Connector,\n  InstantSearch,\n  CreateURL,\n  WidgetRenderState,\n} from '../../types';\nimport type { InsightsEvent } from '../../middlewares';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'rating-menu',\n  connector: true,\n});\n\nconst $$type = 'ais.ratingMenu';\n\nconst MAX_VALUES_PER_FACET_API_LIMIT = 1000;\nconst STEP = 1;\n\ntype SendEvent = (...args: [InsightsEvent] | [string, string, string?]) => void;\n\ntype CreateSendEvent = (createSendEventArgs: {\n  instantSearchInstance: InstantSearch;\n  helper: AlgoliaSearchHelper;\n  getRefinedStar: () => number | number[] | undefined;\n  attribute: string;\n}) => SendEvent;\n\nconst createSendEvent: CreateSendEvent =\n  ({ instantSearchInstance, helper, getRefinedStar, attribute }) =>\n  (...args) => {\n    if (args.length === 1) {\n      instantSearchInstance.sendEventToInsights(args[0]);\n      return;\n    }\n    const [eventType, facetValue, eventName = 'Filter Applied'] = args;\n    if (eventType !== 'click') {\n      return;\n    }\n    const isRefined = getRefinedStar() === Number(facetValue);\n    if (!isRefined) {\n      instantSearchInstance.sendEventToInsights({\n        insightsMethod: 'clickedFilters',\n        widgetType: $$type,\n        eventType,\n        payload: {\n          eventName,\n          index: helper.getIndex(),\n          filters: [`${attribute}>=${facetValue}`],\n        },\n        attribute,\n      });\n    }\n  };\n\ntype StarRatingItems = {\n  /**\n   * Name corresponding to the number of stars.\n   */\n  name: string;\n  /**\n   * Human-readable name corresponding to the number of stars.\n   */\n  label: string;\n  /**\n   * Number of stars as string.\n   */\n  value: string;\n  /**\n   * Count of matched results corresponding to the number of stars.\n   */\n  count: number;\n  /**\n   *  Array of length of maximum rating value with stars to display or not.\n   */\n  stars: boolean[];\n  /**\n   * Indicates if star rating refinement is applied.\n   */\n  isRefined: boolean;\n};\n\nexport type RatingMenuConnectorParams = {\n  /**\n   * Name of the attribute for faceting (eg. \"free_shipping\").\n   */\n  attribute: string;\n\n  /**\n   * The maximum rating value.\n   */\n  max?: number;\n};\n\nexport type RatingMenuRenderState = {\n  /**\n   * Possible star ratings the user can apply.\n   */\n  items: StarRatingItems[];\n\n  /**\n   * Creates an URL for the next state (takes the item value as parameter). Takes the value of an item as parameter.\n   */\n  createURL: CreateURL<string>;\n\n  /**\n   *  Indicates if search state can be refined.\n   */\n  canRefine: boolean;\n\n  /**\n   * Selects a rating to filter the results (takes the filter value as parameter). Takes the value of an item as parameter.\n   */\n  refine: (value: string) => void;\n\n  /**\n   * `true` if the last search contains no result.\n   *\n   * @deprecated Use `canRefine` instead.\n   */\n  hasNoResults: boolean;\n\n  /**\n   * Send event to insights middleware\n   */\n  sendEvent: SendEvent;\n};\n\nexport type RatingMenuWidgetDescription = {\n  $$type: 'ais.ratingMenu';\n  renderState: RatingMenuRenderState;\n  indexRenderState: {\n    ratingMenu: {\n      [attribute: string]: WidgetRenderState<\n        RatingMenuRenderState,\n        RatingMenuConnectorParams\n      >;\n    };\n  };\n  indexUiState: {\n    ratingMenu: {\n      [attribute: string]: number;\n    };\n  };\n};\n\nexport type RatingMenuConnector = Connector<\n  RatingMenuWidgetDescription,\n  RatingMenuConnectorParams\n>;\n\n/**\n * **StarRating** connector provides the logic to build a custom widget that will let\n * the user refine search results based on ratings.\n *\n * The connector provides to the rendering: `refine()` to select a value and\n * `items` that are the values that can be selected. `refine` should be used\n * with `items.value`.\n */\nconst connectRatingMenu: RatingMenuConnector = function connectRatingMenu(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const { attribute, max = 5 } = widgetParams || {};\n    let sendEvent: SendEvent;\n\n    if (!attribute) {\n      throw new Error(withUsage('The `attribute` option is required.'));\n    }\n\n    const getRefinedStar = (state: SearchParameters) => {\n      const values = state.getNumericRefinements(attribute);\n\n      if (!values['>=']?.length) {\n        return undefined;\n      }\n\n      return values['>='][0];\n    };\n\n    const getFacetsMaxDecimalPlaces = (\n      facetResults: SearchResults.FacetValue[]\n    ) => {\n      let maxDecimalPlaces = 0;\n      facetResults.forEach((facetResult) => {\n        const [, decimal = ''] = facetResult.name.split('.');\n        maxDecimalPlaces = Math.max(maxDecimalPlaces, decimal.length);\n      });\n      return maxDecimalPlaces;\n    };\n\n    const getFacetValuesWarningMessage = ({\n      maxDecimalPlaces,\n      maxFacets,\n      maxValuesPerFacet,\n    }: {\n      maxDecimalPlaces: number;\n      maxFacets: number;\n      maxValuesPerFacet: number;\n    }) => {\n      const maxDecimalPlacesInRange = Math.max(\n        0,\n        Math.floor(Math.log10(MAX_VALUES_PER_FACET_API_LIMIT / max))\n      );\n      const maxFacetsInRange = Math.min(\n        MAX_VALUES_PER_FACET_API_LIMIT,\n        Math.pow(10, maxDecimalPlacesInRange) * max\n      );\n\n      const solutions: string[] = [];\n\n      if (maxFacets > MAX_VALUES_PER_FACET_API_LIMIT) {\n        solutions.push(\n          `- Update your records to lower the precision of the values in the \"${attribute}\" attribute (for example: ${(5.123456789).toPrecision(\n            maxDecimalPlaces + 1\n          )} to ${(5.123456789).toPrecision(maxDecimalPlacesInRange + 1)})`\n        );\n      }\n      if (maxValuesPerFacet < maxFacetsInRange) {\n        solutions.push(\n          `- Increase the maximum number of facet values to ${maxFacetsInRange} using the \"configure\" widget ${createDocumentationLink(\n            { name: 'configure' }\n          )} and the \"maxValuesPerFacet\" parameter https://www.algolia.com/doc/api-reference/api-parameters/maxValuesPerFacet/`\n        );\n      }\n\n      return `The ${attribute} attribute can have ${maxFacets} different values (0 to ${max} with a maximum of ${maxDecimalPlaces} decimals = ${maxFacets}) but you retrieved only ${maxValuesPerFacet} facet values. Therefore the number of results that match the refinements can be incorrect.\n    ${\n      solutions.length\n        ? `To resolve this problem you can:\\n${solutions.join('\\n')}`\n        : ``\n    }`;\n    };\n\n    function getRefinedState(state: SearchParameters, facetValue: string) {\n      const isRefined = getRefinedStar(state) === Number(facetValue);\n\n      const emptyState = state.resetPage().removeNumericRefinement(attribute);\n\n      if (!isRefined) {\n        return emptyState\n          .addNumericRefinement(attribute, '<=', max)\n          .addNumericRefinement(attribute, '>=', Number(facetValue));\n      }\n      return emptyState;\n    }\n\n    const toggleRefinement = (\n      helper: AlgoliaSearchHelper,\n      facetValue: string\n    ) => {\n      sendEvent('click', facetValue);\n      helper.setState(getRefinedState(helper.state, facetValue)).search();\n    };\n\n    type ConnectorState = {\n      toggleRefinementFactory: (\n        helper: AlgoliaSearchHelper\n      ) => (facetValue: string) => void;\n      createURLFactory: ({\n        state,\n        createURL,\n      }: {\n        state: SearchParameters;\n        createURL: (createURLState: SearchParameters) => string;\n      }) => (value: string) => string;\n    };\n\n    const connectorState: ConnectorState = {\n      toggleRefinementFactory: (helper) => toggleRefinement.bind(null, helper),\n      createURLFactory:\n        ({ state, createURL }) =>\n        (value) =>\n          createURL(getRefinedState(state, value)),\n    };\n\n    return {\n      $$type,\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          ratingMenu: {\n            ...renderState.ratingMenu,\n            [attribute]: this.getWidgetRenderState(renderOptions),\n          },\n        };\n      },\n\n      getWidgetRenderState({\n        helper,\n        results,\n        state,\n        instantSearchInstance,\n        createURL,\n      }) {\n        let facetValues: StarRatingItems[] = [];\n\n        if (!sendEvent) {\n          sendEvent = createSendEvent({\n            instantSearchInstance,\n            helper,\n            getRefinedStar: () => getRefinedStar(helper.state),\n            attribute,\n          });\n        }\n\n        let refinementIsApplied = false;\n        let totalCount = 0;\n\n        const facetResults = results?.getFacetValues(attribute, {}) as\n          | SearchResults.FacetValue[]\n          | undefined;\n\n        if (results && facetResults) {\n          const maxValuesPerFacet = facetResults.length;\n          const maxDecimalPlaces = getFacetsMaxDecimalPlaces(facetResults);\n          const maxFacets = Math.pow(10, maxDecimalPlaces) * max;\n\n          warning(\n            maxFacets <= maxValuesPerFacet || Boolean(results.__isArtificial),\n            getFacetValuesWarningMessage({\n              maxDecimalPlaces,\n              maxFacets,\n              maxValuesPerFacet,\n            })\n          );\n\n          const refinedStar = getRefinedStar(state);\n\n          for (let star = STEP; star < max; star += STEP) {\n            const isRefined = refinedStar === star;\n            refinementIsApplied = refinementIsApplied || isRefined;\n\n            const count = facetResults\n              .filter((f) => Number(f.name) >= star && Number(f.name) <= max)\n              .map((f) => f.count)\n              .reduce((sum, current) => sum + current, 0);\n            totalCount += count;\n\n            if (refinedStar && !isRefined && count === 0) {\n              // skip count==0 when at least 1 refinement is enabled\n              // eslint-disable-next-line no-continue\n              continue;\n            }\n\n            const stars = [...new Array(Math.floor(max / STEP))].map(\n              (_v, i) => i * STEP < star\n            );\n\n            facetValues.push({\n              stars,\n              name: String(star),\n              label: String(star),\n              value: String(star),\n              count,\n              isRefined,\n            });\n          }\n        }\n        facetValues = facetValues.reverse();\n\n        const hasNoResults = results ? results.nbHits === 0 : true;\n\n        return {\n          items: facetValues,\n          hasNoResults,\n          canRefine: (!hasNoResults || refinementIsApplied) && totalCount > 0,\n          refine: connectorState.toggleRefinementFactory(helper),\n          sendEvent,\n          createURL: connectorState.createURLFactory({ state, createURL }),\n          widgetParams,\n        };\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return state.removeNumericRefinement(attribute);\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const value = getRefinedStar(searchParameters);\n\n        if (typeof value !== 'number') {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          ratingMenu: {\n            ...uiState.ratingMenu,\n            [attribute]: value,\n          },\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        const value = uiState.ratingMenu && uiState.ratingMenu[attribute];\n\n        const withoutRefinements = searchParameters.clearRefinements(attribute);\n        const withDisjunctiveFacet =\n          withoutRefinements.addDisjunctiveFacet(attribute);\n\n        if (!value) {\n          return withDisjunctiveFacet.setQueryParameters({\n            numericRefinements: {\n              ...withDisjunctiveFacet.numericRefinements,\n              [attribute]: {},\n            },\n          });\n        }\n\n        return withDisjunctiveFacet\n          .addNumericRefinement(attribute, '<=', max)\n          .addNumericRefinement(attribute, '>=', value);\n      },\n    };\n  };\n};\n\nexport default connectRatingMenu;\n","import {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  noop,\n} from '../../lib/utils';\nimport type { Connector, WidgetRenderState } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'stats',\n  connector: true,\n});\n\n/**\n * **Stats** connector provides the logic to build a custom widget that will displays\n * search statistics (hits number and processing time).\n */\n\nexport type StatsRenderState = {\n  /**\n   * The maximum number of hits per page returned by Algolia.\n   */\n  hitsPerPage?: number;\n  /**\n   * The number of hits in the result set.\n   */\n  nbHits: number;\n  /**\n   * The number of sorted hits in the result set (when using Relevant sort).\n   */\n  nbSortedHits?: number;\n  /**\n   * Indicates whether the index is currently using Relevant sort and is displaying only sorted hits.\n   */\n  areHitsSorted: boolean;\n  /**\n   * The number of pages computed for the result set.\n   */\n  nbPages: number;\n  /**\n   * The current page.\n   */\n  page: number;\n  /**\n   * The time taken to compute the results inside the Algolia engine.\n   */\n  processingTimeMS: number;\n  /**\n   * The query used for the current search.\n   */\n  query: string;\n};\n\nexport type StatsConnectorParams = Record<string, unknown>;\n\nexport type StatsWidgetDescription = {\n  $$type: 'ais.stats';\n  renderState: StatsRenderState;\n  indexRenderState: {\n    stats: WidgetRenderState<StatsRenderState, StatsConnectorParams>;\n  };\n};\n\nexport type StatsConnector = Connector<\n  StatsWidgetDescription,\n  StatsConnectorParams\n>;\n\nconst connectStats: StatsConnector = function connectStats(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => ({\n    $$type: 'ais.stats',\n\n    init(initOptions) {\n      const { instantSearchInstance } = initOptions;\n\n      renderFn(\n        {\n          ...this.getWidgetRenderState(initOptions),\n          instantSearchInstance,\n        },\n        true\n      );\n    },\n\n    render(renderOptions) {\n      const { instantSearchInstance } = renderOptions;\n\n      renderFn(\n        {\n          ...this.getWidgetRenderState(renderOptions),\n          instantSearchInstance,\n        },\n        false\n      );\n    },\n\n    dispose() {\n      unmountFn();\n    },\n\n    getRenderState(renderState, renderOptions) {\n      return {\n        ...renderState,\n        stats: this.getWidgetRenderState(renderOptions),\n      };\n    },\n\n    getWidgetRenderState({ results, state }) {\n      if (!results) {\n        return {\n          hitsPerPage: state.hitsPerPage,\n          nbHits: 0,\n          nbSortedHits: undefined,\n          areHitsSorted: false,\n          nbPages: 0,\n          page: state.page || 0,\n          processingTimeMS: -1,\n          query: state.query || '',\n          widgetParams,\n        };\n      }\n\n      return {\n        hitsPerPage: results.hitsPerPage,\n        nbHits: results.nbHits,\n        nbSortedHits: results.nbSortedHits,\n        areHitsSorted:\n          typeof results.appliedRelevancyStrictness !== 'undefined' &&\n          results.appliedRelevancyStrictness > 0 &&\n          results.nbSortedHits !== results.nbHits,\n        nbPages: results.nbPages,\n        page: results.page,\n        processingTimeMS: results.processingTimeMS,\n        query: results.query,\n        widgetParams,\n      };\n    },\n  });\n};\n\nexport default connectStats;\n","import type {\n  AlgoliaSearchHelper,\n  SearchParameters,\n  SearchResults,\n} from 'algoliasearch-helper';\nimport {\n  checkRendering,\n  escapeFacetValue,\n  createDocumentationMessageGenerator,\n  find,\n  noop,\n  toArray,\n} from '../../lib/utils';\nimport type {\n  Connector,\n  CreateURL,\n  InstantSearch,\n  WidgetRenderState,\n} from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'toggle-refinement',\n  connector: true,\n});\n\nconst $$type = 'ais.toggleRefinement';\n\ntype BuiltInSendEventForToggle = (\n  eventType: string,\n  isRefined: boolean,\n  eventName?: string\n) => void;\ntype CustomSendEventForToggle = (customPayload: any) => void;\n\nexport type SendEventForToggle = BuiltInSendEventForToggle &\n  CustomSendEventForToggle;\n\nconst createSendEvent = ({\n  instantSearchInstance,\n  helper,\n  attribute,\n  on,\n}: {\n  instantSearchInstance: InstantSearch;\n  helper: AlgoliaSearchHelper;\n  attribute: string;\n  on: string[] | undefined;\n}) => {\n  const sendEventForToggle: SendEventForToggle = (...args: any[]) => {\n    if (args.length === 1) {\n      instantSearchInstance.sendEventToInsights(args[0]);\n      return;\n    }\n    const [eventType, isRefined, eventName = 'Filter Applied'] = args;\n    if (eventType !== 'click' || on === undefined) {\n      return;\n    }\n\n    // only send an event when the refinement gets applied,\n    // not when it gets removed\n    if (!isRefined) {\n      instantSearchInstance.sendEventToInsights({\n        insightsMethod: 'clickedFilters',\n        widgetType: $$type,\n        eventType,\n        payload: {\n          eventName,\n          index: helper.getIndex(),\n          filters: on.map((value) => `${attribute}:${value}`),\n        },\n        attribute,\n      });\n    }\n  };\n  return sendEventForToggle;\n};\n\nexport type ToggleRefinementValue = {\n  /**\n   * Whether this option is enabled.\n   */\n  isRefined: boolean;\n  /**\n   * Number of result if this option is toggled.\n   */\n  count: number | null;\n};\n\nexport type ToggleRefinementConnectorParams = {\n  /**\n   * Name of the attribute for faceting (e.g., \"free_shipping\").\n   */\n  attribute: string;\n  /**\n   * Value to filter on when toggled.\n   * @default \"true\"\n   */\n  on?: FacetValue | FacetValue[];\n  /**\n   * Value to filter on when not toggled.\n   */\n  off?: FacetValue | FacetValue[];\n};\n\ntype FacetValue = string | boolean | number;\n\nexport type ToggleRefinementRenderState = {\n  /** The current toggle value */\n  value: {\n    /**\n     * The attribute name of this toggle.\n     */\n    name: string;\n    /**\n     * Whether the current option is \"on\" (true) or \"off\" (false)\n     */\n    isRefined: boolean;\n    /**\n     * Number of results if this option is toggled.\n     */\n    count: number | null;\n    /**\n     * Information about the \"on\" toggle.\n     */\n    onFacetValue: ToggleRefinementValue;\n    /**\n     * Information about the \"off\" toggle.\n     */\n    offFacetValue: ToggleRefinementValue;\n  };\n  /**\n   * Creates an URL for the next state.\n   */\n  createURL: CreateURL<string>;\n  /**\n   * Send a \"Facet Clicked\" Insights event.\n   */\n  sendEvent: SendEventForToggle;\n  /**\n   * Indicates if search state can be refined.\n   */\n  canRefine: boolean;\n  /**\n   * Updates to the next state by applying the toggle refinement.\n   */\n  refine: (value?: { isRefined: boolean }) => void;\n};\n\nexport type ToggleRefinementWidgetDescription = {\n  $$type: 'ais.toggleRefinement';\n  renderState: ToggleRefinementRenderState;\n  indexRenderState: {\n    toggleRefinement: {\n      [attribute: string]: WidgetRenderState<\n        ToggleRefinementRenderState,\n        ToggleRefinementConnectorParams\n      >;\n    };\n  };\n  indexUiState: {\n    toggle: {\n      [attribute: string]: boolean;\n    };\n  };\n};\n\nexport type ToggleRefinementConnector = Connector<\n  ToggleRefinementWidgetDescription,\n  ToggleRefinementConnectorParams\n>;\n\n/**\n * **Toggle** connector provides the logic to build a custom widget that will provide\n * an on/off filtering feature based on an attribute value or values.\n *\n * Two modes are implemented in the custom widget:\n *  - with or without the value filtered\n *  - switch between two values.\n */\nconst connectToggleRefinement: ToggleRefinementConnector =\n  function connectToggleRefinement(renderFn, unmountFn = noop) {\n    checkRendering(renderFn, withUsage());\n\n    return (widgetParams) => {\n      const { attribute, on: userOn = true, off: userOff } = widgetParams || {};\n\n      if (!attribute) {\n        throw new Error(withUsage('The `attribute` option is required.'));\n      }\n\n      const hasAnOffValue = userOff !== undefined;\n      // even though facet values can be numbers and boolean,\n      // the helper methods only accept string in the type\n      const on = toArray(userOn).map(escapeFacetValue) as string[];\n      const off = hasAnOffValue\n        ? (toArray(userOff).map(escapeFacetValue) as string[])\n        : undefined;\n\n      let sendEvent: SendEventForToggle;\n\n      const toggleRefinementFactory =\n        (helper: AlgoliaSearchHelper) =>\n        (\n          {\n            isRefined,\n          }: {\n            isRefined: boolean;\n          } = { isRefined: false }\n        ) => {\n          if (!isRefined) {\n            sendEvent('click', isRefined);\n            if (hasAnOffValue) {\n              off!.forEach((v) =>\n                helper.removeDisjunctiveFacetRefinement(attribute, v)\n              );\n            }\n\n            on.forEach((v) =>\n              helper.addDisjunctiveFacetRefinement(attribute, v)\n            );\n          } else {\n            on.forEach((v) =>\n              helper.removeDisjunctiveFacetRefinement(attribute, v)\n            );\n\n            if (hasAnOffValue) {\n              off!.forEach((v) =>\n                helper.addDisjunctiveFacetRefinement(attribute, v)\n              );\n            }\n          }\n\n          helper.search();\n        };\n\n      const connectorState = {\n        createURLFactory:\n          (\n            isRefined: boolean,\n            {\n              state,\n              createURL,\n            }: {\n              state: SearchParameters;\n              createURL(parameters: SearchParameters): string;\n            }\n          ) =>\n          () => {\n            state = state.resetPage();\n\n            const valuesToRemove = isRefined ? on : off;\n            if (valuesToRemove) {\n              valuesToRemove.forEach((v) => {\n                state = state.removeDisjunctiveFacetRefinement(attribute, v);\n              });\n            }\n\n            const valuesToAdd = isRefined ? off : on;\n            if (valuesToAdd) {\n              valuesToAdd.forEach((v) => {\n                state = state.addDisjunctiveFacetRefinement(attribute, v);\n              });\n            }\n\n            return createURL(state);\n          },\n      };\n\n      return {\n        $$type,\n\n        init(initOptions) {\n          const { instantSearchInstance } = initOptions;\n\n          renderFn(\n            {\n              ...this.getWidgetRenderState(initOptions),\n              instantSearchInstance,\n            },\n            true\n          );\n        },\n\n        render(renderOptions) {\n          const { instantSearchInstance } = renderOptions;\n\n          renderFn(\n            {\n              ...this.getWidgetRenderState(renderOptions),\n              instantSearchInstance,\n            },\n            false\n          );\n        },\n\n        dispose({ state }) {\n          unmountFn();\n\n          return state.removeDisjunctiveFacet(attribute);\n        },\n\n        getRenderState(renderState, renderOptions) {\n          return {\n            ...renderState,\n            toggleRefinement: {\n              ...renderState.toggleRefinement,\n              [attribute]: this.getWidgetRenderState(renderOptions),\n            },\n          };\n        },\n\n        getWidgetRenderState({\n          state,\n          helper,\n          results,\n          createURL,\n          instantSearchInstance,\n        }) {\n          const isRefined = results\n            ? on.every((v) => state.isDisjunctiveFacetRefined(attribute, v))\n            : on.every((v) => state.isDisjunctiveFacetRefined(attribute, v));\n\n          let onFacetValue: ToggleRefinementValue = {\n            isRefined,\n            count: 0,\n          };\n\n          let offFacetValue: ToggleRefinementValue = {\n            isRefined: hasAnOffValue && !isRefined,\n            count: 0,\n          };\n\n          if (results) {\n            const offValue = toArray(off || false);\n            const allFacetValues = (results.getFacetValues(attribute, {}) ||\n              []) as SearchResults.FacetValue[];\n\n            const onData = on\n              .map((v) =>\n                find(\n                  allFacetValues,\n                  ({ escapedValue }) =>\n                    escapedValue === escapeFacetValue(String(v))\n                )\n              )\n              .filter((v): v is SearchResults.FacetValue => v !== undefined);\n\n            const offData = hasAnOffValue\n              ? offValue\n                  .map((v) =>\n                    find(\n                      allFacetValues,\n                      ({ escapedValue }) =>\n                        escapedValue === escapeFacetValue(String(v))\n                    )\n                  )\n                  .filter((v): v is SearchResults.FacetValue => v !== undefined)\n              : [];\n\n            onFacetValue = {\n              isRefined: onData.length\n                ? onData.every((v) => v.isRefined)\n                : false,\n              count: onData.reduce((acc, v) => acc + v.count, 0) || null,\n            };\n\n            offFacetValue = {\n              isRefined: offData.length\n                ? offData.every((v) => v.isRefined)\n                : false,\n              count:\n                offData.reduce((acc, v) => acc + v.count, 0) ||\n                allFacetValues.reduce((total, { count }) => total + count, 0),\n            };\n          }\n\n          if (!sendEvent) {\n            sendEvent = createSendEvent({\n              instantSearchInstance,\n              attribute,\n              on,\n              helper,\n            });\n          }\n          const nextRefinement = isRefined ? offFacetValue : onFacetValue;\n\n          return {\n            value: {\n              name: attribute,\n              isRefined,\n              count: results ? nextRefinement.count : null,\n              onFacetValue,\n              offFacetValue,\n            },\n            createURL: connectorState.createURLFactory(isRefined, {\n              state,\n              createURL,\n            }),\n            sendEvent,\n            canRefine: Boolean(results ? nextRefinement.count : null),\n            refine: toggleRefinementFactory(helper),\n            widgetParams,\n          };\n        },\n\n        getWidgetUiState(uiState, { searchParameters }) {\n          const isRefined =\n            on &&\n            on.every((v) =>\n              searchParameters.isDisjunctiveFacetRefined(attribute, v)\n            );\n\n          if (!isRefined) {\n            return uiState;\n          }\n\n          return {\n            ...uiState,\n            toggle: {\n              ...uiState.toggle,\n              [attribute]: isRefined,\n            },\n          };\n        },\n\n        getWidgetSearchParameters(searchParameters, { uiState }) {\n          let withFacetConfiguration = searchParameters\n            .clearRefinements(attribute)\n            .addDisjunctiveFacet(attribute);\n\n          const isRefined = Boolean(\n            uiState.toggle && uiState.toggle[attribute]\n          );\n\n          if (isRefined) {\n            if (on) {\n              on.forEach((v) => {\n                withFacetConfiguration =\n                  withFacetConfiguration.addDisjunctiveFacetRefinement(\n                    attribute,\n                    v\n                  );\n              });\n            }\n\n            return withFacetConfiguration;\n          }\n\n          // It's not refined with an `off` value\n          if (hasAnOffValue) {\n            if (off) {\n              off.forEach((v) => {\n                withFacetConfiguration =\n                  withFacetConfiguration.addDisjunctiveFacetRefinement(\n                    attribute,\n                    v\n                  );\n              });\n            }\n            return withFacetConfiguration;\n          }\n\n          // It's not refined without an `off` value\n          return withFacetConfiguration.setQueryParameters({\n            disjunctiveFacetsRefinements: {\n              ...searchParameters.disjunctiveFacetsRefinements,\n              [attribute]: [],\n            },\n          });\n        },\n      };\n    };\n  };\n\nexport default connectToggleRefinement;\n","import {\n  checkRendering,\n  warning,\n  createDocumentationMessageGenerator,\n  isEqual,\n  noop,\n} from '../../lib/utils';\nimport type { SearchParameters, SearchResults } from 'algoliasearch-helper';\nimport type {\n  Connector,\n  TransformItems,\n  CreateURL,\n  WidgetRenderState,\n} from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'breadcrumb',\n  connector: true,\n});\n\nexport type BreadcrumbConnectorParamsItem = {\n  /**\n   * Label of the category or subcategory.\n   */\n  label: string;\n\n  /**\n   * Value of breadcrumb item.\n   */\n  value: string | null;\n};\n\nexport type BreadcrumbConnectorParams = {\n  /**\n   * Attributes to use to generate the hierarchy of the breadcrumb.\n   */\n  attributes: string[];\n\n  /**\n   * Prefix path to use if the first level is not the root level.\n   */\n  rootPath?: string;\n\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<BreadcrumbConnectorParamsItem>;\n\n  /**\n   * The level separator used in the records.\n   *\n   * @default '>'\n   */\n  separator?: string;\n};\n\nexport type BreadcrumbRenderState = {\n  /**\n   * Creates the URL for a single item name in the list.\n   */\n  createURL: CreateURL<BreadcrumbConnectorParamsItem['value']>;\n\n  /**\n   * Array of objects defining the different values and labels.\n   */\n  items: BreadcrumbConnectorParamsItem[];\n\n  /**\n   * Sets the path of the hierarchical filter and triggers a new search.\n   */\n  refine: (value: BreadcrumbConnectorParamsItem['value']) => void;\n\n  /**\n   * True if refinement can be applied.\n   */\n  canRefine: boolean;\n};\n\nexport type BreadcrumbWidgetDescription = {\n  $$type: 'ais.breadcrumb';\n  renderState: BreadcrumbRenderState;\n  indexRenderState: {\n    breadcrumb: {\n      [rootAttribute: string]: WidgetRenderState<\n        BreadcrumbRenderState,\n        BreadcrumbConnectorParams\n      >;\n    };\n  };\n};\n\nexport type BreadcrumbConnector = Connector<\n  BreadcrumbWidgetDescription,\n  BreadcrumbConnectorParams\n>;\n\nconst connectBreadcrumb: BreadcrumbConnector = function connectBreadcrumb(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  type ConnectorState = {\n    refine?: BreadcrumbRenderState['refine'];\n    createURL?: BreadcrumbRenderState['createURL'];\n  };\n\n  const connectorState: ConnectorState = {};\n\n  return (widgetParams) => {\n    const {\n      attributes,\n      separator = ' > ',\n      rootPath = null,\n      transformItems = ((items) => items) as NonNullable<\n        BreadcrumbConnectorParams['transformItems']\n      >,\n    } = widgetParams || {};\n\n    if (!attributes || !Array.isArray(attributes) || attributes.length === 0) {\n      throw new Error(\n        withUsage('The `attributes` option expects an array of strings.')\n      );\n    }\n\n    const [hierarchicalFacetName] = attributes;\n\n    function getRefinedState(\n      state: SearchParameters,\n      facetValue: string | null\n    ) {\n      if (!facetValue) {\n        const breadcrumb = state.getHierarchicalFacetBreadcrumb(\n          hierarchicalFacetName\n        );\n        if (breadcrumb.length === 0) {\n          return state;\n        } else {\n          return state\n            .resetPage()\n            .toggleFacetRefinement(hierarchicalFacetName, breadcrumb[0]);\n        }\n      }\n      return state\n        .resetPage()\n        .toggleFacetRefinement(hierarchicalFacetName, facetValue);\n    }\n\n    return {\n      $$type: 'ais.breadcrumb',\n\n      init(initOptions) {\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance: initOptions.instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance: renderOptions.instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose() {\n        unmountFn();\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          breadcrumb: {\n            ...renderState.breadcrumb,\n            [hierarchicalFacetName]: this.getWidgetRenderState(renderOptions),\n          },\n        };\n      },\n\n      getWidgetRenderState({ helper, createURL, results, state }) {\n        function getItems() {\n          // The hierarchicalFacets condition is required for flavors\n          // that render immediately with empty results, without relying\n          // on init() (like React InstantSearch Hooks).\n          if (!results || state.hierarchicalFacets.length === 0) {\n            return [];\n          }\n\n          const [{ name: facetName }] = state.hierarchicalFacets;\n\n          const facetValues = results.getFacetValues(\n            facetName,\n            {}\n          ) as SearchResults.HierarchicalFacet;\n          const data = Array.isArray(facetValues.data) ? facetValues.data : [];\n          const items = transformItems(shiftItemsValues(prepareItems(data)), {\n            results,\n          });\n\n          return items;\n        }\n\n        const items = getItems();\n\n        if (!connectorState.createURL) {\n          connectorState.createURL = (facetValue) => {\n            return createURL(getRefinedState(helper.state, facetValue));\n          };\n        }\n\n        if (!connectorState.refine) {\n          connectorState.refine = (facetValue) => {\n            helper.setState(getRefinedState(helper.state, facetValue)).search();\n          };\n        }\n\n        return {\n          canRefine: items.length > 0,\n          createURL: connectorState.createURL,\n          items,\n          refine: connectorState.refine,\n          widgetParams,\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters) {\n        if (searchParameters.isHierarchicalFacet(hierarchicalFacetName)) {\n          const facet = searchParameters.getHierarchicalFacetByName(\n            hierarchicalFacetName\n          );\n\n          warning(\n            isEqual(facet.attributes, attributes) &&\n              facet.separator === separator &&\n              facet.rootPath === rootPath,\n            'Using Breadcrumb and HierarchicalMenu on the same facet with different options overrides the configuration of the HierarchicalMenu.'\n          );\n\n          return searchParameters;\n        }\n\n        return searchParameters.addHierarchicalFacet({\n          name: hierarchicalFacetName,\n          attributes,\n          separator,\n          rootPath,\n        });\n      },\n    };\n  };\n};\n\nfunction prepareItems(data: SearchResults.HierarchicalFacet[]) {\n  return data.reduce<BreadcrumbConnectorParamsItem[]>((result, currentItem) => {\n    if (currentItem.isRefined) {\n      result.push({\n        label: currentItem.name,\n        value: currentItem.escapedValue,\n      });\n      if (Array.isArray(currentItem.data)) {\n        result = result.concat(prepareItems(currentItem.data));\n      }\n    }\n    return result;\n  }, []);\n}\n\nfunction shiftItemsValues(array: BreadcrumbConnectorParamsItem[]) {\n  return array.map((x, idx) => ({\n    label: x.label,\n    value: idx + 1 === array.length ? null : array[idx + 1].value,\n  }));\n}\n\nexport default connectBreadcrumb;\n","import type {\n  AlgoliaSearchHelper,\n  SearchParameters,\n} from 'algoliasearch-helper';\nimport type { SendEventForHits } from '../../lib/utils';\nimport {\n  checkRendering,\n  aroundLatLngToPosition,\n  insideBoundingBoxToBoundingBox,\n  createDocumentationMessageGenerator,\n  createSendEventForHits,\n  noop,\n} from '../../lib/utils';\nimport type {\n  BaseHit,\n  Connector,\n  GeoLoc,\n  Hit,\n  InitOptions,\n  RenderOptions,\n  TransformItems,\n  WidgetRenderState,\n} from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'geo-search',\n  connector: true,\n});\n\n// in this connector, we assume insideBoundingBox is only a string,\n// even though in the helper it's defined as number[][] alone.\n// This can be done, since the connector assumes \"control\" of the parameter\nfunction getBoundingBoxAsString(state: SearchParameters) {\n  return (state.insideBoundingBox as unknown as string) || '';\n}\nfunction setBoundingBoxAsString(state: SearchParameters, value: string) {\n  return state.setQueryParameter(\n    'insideBoundingBox',\n    value as unknown as number[][]\n  );\n}\n\nexport type GeoHit<THit extends BaseHit = Record<string, any>> = Hit<THit> &\n  Required<Pick<Hit, '_geoloc'>>;\n\ntype Bounds = {\n  /**\n   * The top right corner of the map view.\n   */\n  northEast: GeoLoc;\n  /**\n   * The bottom left corner of the map view.\n   */\n  southWest: GeoLoc;\n};\n\nexport type GeoSearchRenderState<THit extends BaseHit = Record<string, any>> = {\n  /**\n   * Reset the current bounding box refinement.\n   */\n  clearMapRefinement(): void;\n  /**\n   * The current bounding box of the search.\n   */\n  currentRefinement?: Bounds;\n  /**\n   * Return true if the map has move since the last refinement.\n   */\n  hasMapMoveSinceLastRefine(): boolean;\n  /**\n   * Return true if the current refinement is set with the map bounds.\n   */\n  isRefinedWithMap(): boolean;\n  /**\n   * Return true if the user is able to refine on map move.\n   */\n  isRefineOnMapMove(): boolean;\n  /**\n   * The matched hits from Algolia API.\n   */\n  items: Array<GeoHit<THit>>;\n  /**\n   * The current position of the search.\n   */\n  position?: GeoLoc;\n  /**\n   * Sets a bounding box to filter the results from the given map bounds.\n   */\n  refine(bounds: Bounds): void;\n  /**\n   * Send event to insights middleware\n   */\n  sendEvent: SendEventForHits;\n  /**\n   * Set the fact that the map has moved since the last refinement, should be\n   * called on each map move. The call to the function triggers a new rendering\n   * only when the value change.\n   */\n  setMapMoveSinceLastRefine(): void;\n  /**\n   * Toggle the fact that the user is able to refine on map move.\n   */\n  toggleRefineOnMapMove(): void;\n};\n\nexport type GeoSearchConnectorParams<\n  THit extends BaseHit = Record<string, any>\n> = {\n  /**\n   * If true, refine will be triggered as you move the map.\n   * @default true\n   */\n  enableRefineOnMapMove?: boolean;\n  /**\n   * Function to transform the items passed to the templates.\n   * @default items => items\n   */\n  transformItems?: TransformItems<GeoHit<THit>>;\n};\n\nconst $$type = 'ais.geoSearch';\n\nexport type GeoSearchWidgetDescription<\n  THit extends BaseHit = Record<string, any>\n> = {\n  $$type: 'ais.geoSearch';\n  renderState: GeoSearchRenderState<THit>;\n  indexRenderState: {\n    geoSearch: WidgetRenderState<\n      GeoSearchRenderState<THit>,\n      GeoSearchConnectorParams<THit>\n    >;\n  };\n  indexUiState: {\n    geoSearch: {\n      /**\n       * The rectangular area in geo coordinates.\n       * The rectangle is defined by two diagonally opposite points,\n       * hence by 4 floats separated by commas.\n       *\n       * @example '47.3165,4.9665,47.3424,5.0201'\n       */\n      boundingBox: string;\n    };\n  };\n};\n\nexport type GeoSearchConnector<THit extends BaseHit = Record<string, any>> =\n  Connector<GeoSearchWidgetDescription<THit>, GeoSearchConnectorParams<THit>>;\n\n/**\n * The **GeoSearch** connector provides the logic to build a widget that will display the results on a map. It also provides a way to search for results based on their position. The connector provides functions to manage the search experience (search on map interaction or control the interaction for example).\n *\n * @requirements\n *\n * Note that the GeoSearch connector uses the [geosearch](https://www.algolia.com/doc/guides/searching/geo-search) capabilities of Algolia. Your hits **must** have a `_geoloc` attribute in order to be passed to the rendering function.\n *\n * Currently, the feature is not compatible with multiple values in the _geoloc attribute.\n */\nconst connectGeoSearch: GeoSearchConnector = (renderFn, unmountFn = noop) => {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const {\n      enableRefineOnMapMove = true,\n      transformItems = ((items) => items) as NonNullable<\n        GeoSearchConnectorParams['transformItems']\n      >,\n    } = widgetParams || {};\n\n    const widgetState = {\n      isRefineOnMapMove: enableRefineOnMapMove,\n      // @MAJOR hasMapMoveSinceLastRefine -> hasMapMovedSinceLastRefine\n      hasMapMoveSinceLastRefine: false,\n      lastRefinePosition: '',\n      lastRefineBoundingBox: '',\n      internalToggleRefineOnMapMove: noop,\n      internalSetMapMoveSinceLastRefine: noop,\n    };\n\n    const getPositionFromState = (state: SearchParameters) =>\n      state.aroundLatLng\n        ? aroundLatLngToPosition(state.aroundLatLng)\n        : undefined;\n\n    const getCurrentRefinementFromState = (state: SearchParameters) =>\n      state.insideBoundingBox &&\n      insideBoundingBoxToBoundingBox(state.insideBoundingBox);\n\n    const refine =\n      (helper: AlgoliaSearchHelper) =>\n      ({ northEast: ne, southWest: sw }: Bounds) => {\n        const boundingBox = [ne.lat, ne.lng, sw.lat, sw.lng].join();\n\n        helper\n          .setState(\n            setBoundingBoxAsString(helper.state, boundingBox).resetPage()\n          )\n          .search();\n\n        widgetState.hasMapMoveSinceLastRefine = false;\n        widgetState.lastRefineBoundingBox = boundingBox;\n      };\n\n    const clearMapRefinement = (helper: AlgoliaSearchHelper) => () => {\n      helper.setQueryParameter('insideBoundingBox', undefined).search();\n    };\n\n    const isRefinedWithMap = (state: SearchParameters) => () =>\n      Boolean(state.insideBoundingBox);\n\n    const toggleRefineOnMapMove = () =>\n      widgetState.internalToggleRefineOnMapMove();\n    const createInternalToggleRefinementOnMapMove =\n      <TRenderOptions extends RenderOptions | InitOptions>(\n        renderOptions: TRenderOptions,\n        // false positive eslint because of generics\n        // eslint-disable-next-line no-shadow\n        render: (renderOptions: TRenderOptions) => void\n      ) =>\n      () => {\n        widgetState.isRefineOnMapMove = !widgetState.isRefineOnMapMove;\n\n        render(renderOptions);\n      };\n\n    const isRefineOnMapMove = () => widgetState.isRefineOnMapMove;\n\n    const setMapMoveSinceLastRefine = () =>\n      widgetState.internalSetMapMoveSinceLastRefine();\n    const createInternalSetMapMoveSinceLastRefine =\n      <TRenderOptions extends RenderOptions | InitOptions>(\n        renderOptions: TRenderOptions,\n        // false positive eslint because of generics\n        // eslint-disable-next-line no-shadow\n        render: (renderOptions: TRenderOptions) => void\n      ) =>\n      () => {\n        const shouldTriggerRender =\n          widgetState.hasMapMoveSinceLastRefine !== true;\n\n        widgetState.hasMapMoveSinceLastRefine = true;\n\n        if (shouldTriggerRender) {\n          render(renderOptions);\n        }\n      };\n\n    const hasMapMoveSinceLastRefine = () =>\n      widgetState.hasMapMoveSinceLastRefine;\n\n    let sendEvent: SendEventForHits;\n\n    return {\n      $$type,\n\n      init(initArgs) {\n        const { instantSearchInstance } = initArgs;\n        const isFirstRendering = true;\n\n        widgetState.internalToggleRefineOnMapMove =\n          createInternalToggleRefinementOnMapMove(initArgs, noop);\n\n        widgetState.internalSetMapMoveSinceLastRefine =\n          createInternalSetMapMoveSinceLastRefine(initArgs, noop);\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initArgs),\n            instantSearchInstance,\n          },\n          isFirstRendering\n        );\n      },\n\n      render(renderArgs) {\n        const { helper, instantSearchInstance } = renderArgs;\n        const isFirstRendering = false;\n        // We don't use the state provided by the render function because we need\n        // to be sure that the state is the latest one for the following condition\n        const state = helper.state;\n\n        const positionChangedSinceLastRefine =\n          Boolean(state.aroundLatLng) &&\n          Boolean(widgetState.lastRefinePosition) &&\n          state.aroundLatLng !== widgetState.lastRefinePosition;\n\n        const boundingBoxChangedSinceLastRefine =\n          !state.insideBoundingBox &&\n          Boolean(widgetState.lastRefineBoundingBox) &&\n          state.insideBoundingBox !== widgetState.lastRefineBoundingBox;\n\n        if (\n          positionChangedSinceLastRefine ||\n          boundingBoxChangedSinceLastRefine\n        ) {\n          widgetState.hasMapMoveSinceLastRefine = false;\n        }\n\n        widgetState.lastRefinePosition = state.aroundLatLng || '';\n\n        widgetState.lastRefineBoundingBox = getBoundingBoxAsString(state);\n\n        widgetState.internalToggleRefineOnMapMove =\n          createInternalToggleRefinementOnMapMove(\n            renderArgs,\n            this.render!.bind(this)\n          );\n\n        widgetState.internalSetMapMoveSinceLastRefine =\n          createInternalSetMapMoveSinceLastRefine(\n            renderArgs,\n            this.render!.bind(this)\n          );\n\n        const widgetRenderState = this.getWidgetRenderState(renderArgs);\n\n        sendEvent('view', widgetRenderState.items);\n\n        renderFn(\n          {\n            ...widgetRenderState,\n            instantSearchInstance,\n          },\n          isFirstRendering\n        );\n      },\n\n      getWidgetRenderState(renderOptions) {\n        const { helper, results, instantSearchInstance } = renderOptions;\n        const state = helper.state;\n\n        const items = results\n          ? transformItems(\n              results.hits.filter((hit) => hit._geoloc),\n              { results }\n            )\n          : [];\n\n        if (!sendEvent) {\n          sendEvent = createSendEventForHits({\n            instantSearchInstance,\n            index: helper.getIndex(),\n            widgetType: $$type,\n          });\n        }\n\n        return {\n          items,\n          position: getPositionFromState(state),\n          currentRefinement: getCurrentRefinementFromState(state),\n          refine: refine(helper),\n          sendEvent,\n          clearMapRefinement: clearMapRefinement(helper),\n          isRefinedWithMap: isRefinedWithMap(state),\n          toggleRefineOnMapMove,\n          isRefineOnMapMove,\n          setMapMoveSinceLastRefine,\n          hasMapMoveSinceLastRefine,\n          widgetParams,\n        };\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          geoSearch: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return state.setQueryParameter('insideBoundingBox', undefined);\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const boundingBox = getBoundingBoxAsString(searchParameters);\n\n        if (\n          !boundingBox ||\n          (uiState &&\n            uiState.geoSearch &&\n            uiState.geoSearch.boundingBox === boundingBox)\n        ) {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          geoSearch: {\n            boundingBox,\n          },\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        if (!uiState || !uiState.geoSearch) {\n          return searchParameters.setQueryParameter(\n            'insideBoundingBox',\n            undefined\n          );\n        }\n        return setBoundingBoxAsString(\n          searchParameters,\n          uiState.geoSearch.boundingBox\n        );\n      },\n    };\n  };\n};\n\nexport default connectGeoSearch;\n","import {\n  safelyRunOnBrowser,\n  checkRendering,\n  createDocumentationMessageGenerator,\n  noop,\n} from '../../lib/utils';\n\nimport type { Connector, WidgetRenderState } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'powered-by',\n  connector: true,\n});\n\nexport type PoweredByRenderState = {\n  /** the url to redirect to on click */\n  url: string;\n};\n\nexport type PoweredByConnectorParams = {\n  /** the url to redirect to on click */\n  url?: string;\n};\n\nexport type PoweredByWidgetDescription = {\n  $$type: 'ais.poweredBy';\n  renderState: PoweredByRenderState;\n  indexRenderState: {\n    poweredBy: WidgetRenderState<\n      PoweredByRenderState,\n      PoweredByConnectorParams\n    >;\n  };\n};\n\nexport type PoweredByConnector = Connector<\n  PoweredByWidgetDescription,\n  PoweredByConnectorParams\n>;\n\n/**\n * **PoweredBy** connector provides the logic to build a custom widget that will displays\n * the logo to redirect to Algolia.\n */\nconst connectPoweredBy: PoweredByConnector = function connectPoweredBy(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  const defaultUrl =\n    'https://www.algolia.com/?' +\n    'utm_source=instantsearch.js&' +\n    'utm_medium=website&' +\n    `utm_content=${safelyRunOnBrowser<string>(\n      ({ window }) => window.location?.hostname || '',\n      { fallback: () => '' }\n    )}&` +\n    'utm_campaign=poweredby';\n\n  return (widgetParams) => {\n    const { url = defaultUrl } = widgetParams || {};\n\n    return {\n      $$type: 'ais.poweredBy',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          poweredBy: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState() {\n        return {\n          url,\n          widgetParams,\n        };\n      },\n\n      dispose() {\n        unmountFn();\n      },\n    };\n  };\n};\n\nexport default connectPoweredBy;\n","import type {\n  SearchParameters,\n  PlainSearchParameters,\n  AlgoliaSearchHelper,\n} from 'algoliasearch-helper';\nimport algoliasearchHelper from 'algoliasearch-helper';\nimport type { Connector, WidgetRenderState } from '../../types';\nimport {\n  createDocumentationMessageGenerator,\n  isPlainObject,\n  mergeSearchParameters,\n  noop,\n} from '../../lib/utils';\n\n/**\n * Refine the given search parameters.\n */\ntype Refine = (searchParameters: PlainSearchParameters) => void;\n\nexport type ConfigureConnectorParams = {\n  /**\n   * A list of [search parameters](https://www.algolia.com/doc/api-reference/search-api-parameters/)\n   * to enable when the widget mounts.\n   */\n  searchParameters: PlainSearchParameters;\n};\n\nexport type ConfigureRenderState = {\n  /**\n   * Refine the given search parameters.\n   */\n  refine: Refine;\n};\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'configure',\n  connector: true,\n});\n\nfunction getInitialSearchParameters(\n  state: SearchParameters,\n  widgetParams: ConfigureConnectorParams\n): SearchParameters {\n  // We leverage the helper internals to remove the `widgetParams` from\n  // the state. The function `setQueryParameters` omits the values that\n  // are `undefined` on the next state.\n  return state.setQueryParameters(\n    Object.keys(widgetParams.searchParameters).reduce(\n      (acc, key) => ({\n        ...acc,\n        [key]: undefined,\n      }),\n      {}\n    )\n  );\n}\n\nexport type ConfigureWidgetDescription = {\n  $$type: 'ais.configure';\n  renderState: ConfigureRenderState;\n  indexRenderState: {\n    configure: WidgetRenderState<\n      ConfigureRenderState,\n      ConfigureConnectorParams\n    >;\n  };\n  indexUiState: {\n    configure: PlainSearchParameters;\n  };\n};\n\nexport type ConfigureConnector = Connector<\n  ConfigureWidgetDescription,\n  ConfigureConnectorParams\n>;\n\nconst connectConfigure: ConfigureConnector = function connectConfigure(\n  renderFn = noop,\n  unmountFn = noop\n) {\n  return (widgetParams) => {\n    if (!widgetParams || !isPlainObject(widgetParams.searchParameters)) {\n      throw new Error(\n        withUsage('The `searchParameters` option expects an object.')\n      );\n    }\n\n    type ConnectorState = {\n      refine?: Refine;\n    };\n\n    const connectorState: ConnectorState = {};\n\n    function refine(helper: AlgoliaSearchHelper): Refine {\n      return (searchParameters: PlainSearchParameters) => {\n        // Merge new `searchParameters` with the ones set from other widgets\n        const actualState = getInitialSearchParameters(\n          helper.state,\n          widgetParams\n        );\n        const nextSearchParameters = mergeSearchParameters(\n          actualState,\n          new algoliasearchHelper.SearchParameters(searchParameters)\n        );\n\n        // Update original `widgetParams.searchParameters` to the new refined one\n        widgetParams.searchParameters = searchParameters;\n\n        // Trigger a search with the resolved search parameters\n        helper.setState(nextSearchParameters).search();\n      };\n    }\n\n    return {\n      $$type: 'ais.configure',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return getInitialSearchParameters(state, widgetParams);\n      },\n\n      getRenderState(renderState, renderOptions) {\n        const widgetRenderState = this.getWidgetRenderState(renderOptions);\n        return {\n          ...renderState,\n          configure: {\n            ...widgetRenderState,\n            widgetParams: {\n              ...widgetRenderState.widgetParams,\n              searchParameters: mergeSearchParameters(\n                new algoliasearchHelper.SearchParameters(\n                  renderState.configure?.widgetParams.searchParameters\n                ),\n                new algoliasearchHelper.SearchParameters(\n                  widgetRenderState.widgetParams.searchParameters\n                )\n              ).getQueryParams(),\n            },\n          },\n        };\n      },\n\n      getWidgetRenderState({ helper }) {\n        if (!connectorState.refine) {\n          connectorState.refine = refine(helper);\n        }\n\n        return {\n          refine: connectorState.refine,\n          widgetParams,\n        };\n      },\n\n      getWidgetSearchParameters(state, { uiState }) {\n        return mergeSearchParameters(\n          state,\n          new algoliasearchHelper.SearchParameters({\n            ...uiState.configure,\n            ...widgetParams.searchParameters,\n          })\n        );\n      },\n\n      getWidgetUiState(uiState) {\n        return {\n          ...uiState,\n          configure: {\n            ...uiState.configure,\n            ...widgetParams.searchParameters,\n          },\n        };\n      },\n    };\n  };\n};\n\nexport default connectConfigure;\n","import type {\n  SearchParameters,\n  PlainSearchParameters,\n} from 'algoliasearch-helper';\nimport algoliasearchHelper from 'algoliasearch-helper';\nimport type { AlgoliaHit, Connector } from '../../types';\nimport {\n  createDocumentationMessageGenerator,\n  getObjectType,\n  warning,\n  getPropertyByPath,\n} from '../../lib/utils';\nimport type { ConfigureWidgetDescription } from '../configure/connectConfigure';\nimport connectConfigure from '../configure/connectConfigure';\n\nexport type MatchingPatterns = {\n  [attribute: string]: {\n    /**\n     * The score of the optional filter.\n     *\n     * @see https://www.algolia.com/doc/guides/managing-results/rules/merchandising-and-promoting/in-depth/optional-filters/\n     */\n    score: number;\n  };\n};\n\nexport type TransformSearchParameters = (\n  searchParameters: SearchParameters\n) => PlainSearchParameters;\n\nexport type ConfigureRelatedItemsConnectorParams = {\n  /**\n   * The reference hit to extract the filters from.\n   */\n  hit: AlgoliaHit;\n  /**\n   * The schema to create the optional filters.\n   * Each key represents an attribute from the hit.\n   */\n  matchingPatterns: MatchingPatterns;\n  /**\n   * Function to transform the generated search parameters.\n   */\n  transformSearchParameters?: TransformSearchParameters;\n};\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'configure-related-items',\n  connector: true,\n});\n\nfunction createOptionalFilter({\n  attributeName,\n  attributeValue,\n  attributeScore,\n}: {\n  attributeName: string;\n  attributeValue: string;\n  attributeScore: number;\n}) {\n  return `${attributeName}:${attributeValue}<score=${attributeScore || 1}>`;\n}\n\nexport type ConfigureRelatedItemsWidgetDescription = {\n  $$type: 'ais.configureRelatedItems';\n} & Omit<ConfigureWidgetDescription, '$$type'>;\n\nexport type ConfigureRelatedItemsConnector = Connector<\n  ConfigureRelatedItemsWidgetDescription,\n  ConfigureRelatedItemsConnectorParams\n>;\n\nconst connectConfigureRelatedItems: ConfigureRelatedItemsConnector =\n  function connectConfigureRelatedItems(renderFn, unmountFn) {\n    return (widgetParams) => {\n      const {\n        hit,\n        matchingPatterns,\n        transformSearchParameters = ((x) => x) as TransformSearchParameters,\n      } = widgetParams || {};\n\n      if (!hit) {\n        throw new Error(withUsage('The `hit` option is required.'));\n      }\n\n      if (!matchingPatterns) {\n        throw new Error(\n          withUsage('The `matchingPatterns` option is required.')\n        );\n      }\n\n      const optionalFilters = Object.keys(matchingPatterns).reduce<\n        Array<string | string[]>\n      >((acc, attributeName) => {\n        const attribute = matchingPatterns[attributeName];\n        const attributeValue = getPropertyByPath(hit, attributeName);\n        const attributeScore = attribute.score;\n\n        if (Array.isArray(attributeValue)) {\n          return [\n            ...acc,\n            attributeValue.map((attributeSubValue) => {\n              return createOptionalFilter({\n                attributeName,\n                attributeValue: attributeSubValue,\n                attributeScore,\n              });\n            }),\n          ];\n        }\n\n        if (typeof attributeValue === 'string') {\n          return [\n            ...acc,\n            createOptionalFilter({\n              attributeName,\n              attributeValue,\n              attributeScore,\n            }),\n          ];\n        }\n\n        warning(\n          false,\n          `\nThe \\`matchingPatterns\\` option returned a value of type ${getObjectType(\n            attributeValue\n          )} for the \"${attributeName}\" key. This value was not sent to Algolia because \\`optionalFilters\\` only supports strings and array of strings.\n\nYou can remove the \"${attributeName}\" key from the \\`matchingPatterns\\` option.\n\nSee https://www.algolia.com/doc/api-reference/api-parameters/optionalFilters/\n            `\n        );\n\n        return acc;\n      }, []);\n\n      const searchParameters: PlainSearchParameters = {\n        ...transformSearchParameters(\n          new algoliasearchHelper.SearchParameters({\n            sumOrFiltersScores: true,\n            facetFilters: [`objectID:-${hit.objectID}`],\n            optionalFilters,\n          })\n        ),\n      };\n\n      const makeWidget = connectConfigure(renderFn, unmountFn);\n\n      return {\n        // required, since widget parameters differ between these connectors\n        // and we don't want to have the parameters of configure here\n        ...makeWidget({ searchParameters } as any),\n        $$type: 'ais.configureRelatedItems',\n      };\n    };\n  };\n\nexport default connectConfigureRelatedItems;\n","import type { SearchResults } from 'algoliasearch-helper';\nimport type { SendEventForHits } from '../../lib/utils';\nimport {\n  escapeHits,\n  TAG_PLACEHOLDER,\n  checkRendering,\n  createDocumentationMessageGenerator,\n  createSendEventForHits,\n  noop,\n  warning,\n} from '../../lib/utils';\nimport type { Hit, Connector, WidgetRenderState } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'autocomplete',\n  connector: true,\n});\n\nexport type AutocompleteConnectorParams = {\n  /**\n   * Escapes HTML entities from hits string values.\n   *\n   * @default `true`\n   */\n  escapeHTML?: boolean;\n};\n\nexport type AutocompleteRenderState = {\n  /**\n   * The current value of the query.\n   */\n  currentRefinement: string;\n\n  /**\n   * The indices this widget has access to.\n   */\n  indices: Array<{\n    /**\n     * The name of the index\n     */\n    indexName: string;\n\n    /**\n     * The resolved hits from the index matching the query.\n     */\n    hits: Hit[];\n\n    /**\n     * The full results object from the Algolia API.\n     */\n    results: SearchResults;\n\n    /**\n     * Send event to insights middleware\n     */\n    sendEvent: SendEventForHits;\n  }>;\n\n  /**\n   * Searches into the indices with the provided query.\n   */\n  refine: (query: string) => void;\n};\n\nexport type AutocompleteWidgetDescription = {\n  $$type: 'ais.autocomplete';\n  renderState: AutocompleteRenderState;\n  indexRenderState: {\n    autocomplete: WidgetRenderState<\n      AutocompleteRenderState,\n      AutocompleteConnectorParams\n    >;\n  };\n  indexUiState: { query: string };\n};\n\nexport type AutocompleteConnector = Connector<\n  AutocompleteWidgetDescription,\n  AutocompleteConnectorParams\n>;\n\nconst connectAutocomplete: AutocompleteConnector = function connectAutocomplete(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const { escapeHTML = true } = widgetParams || {};\n\n    warning(\n      !(widgetParams as any).indices,\n      `\nThe option \\`indices\\` has been removed from the Autocomplete connector.\n\nThe indices to target are now inferred from the widgets tree.\n${\n  Array.isArray((widgetParams as any).indices)\n    ? `\nAn alternative would be:\n\nconst autocomplete = connectAutocomplete(renderer);\n\nsearch.addWidgets([\n  ${(widgetParams as any).indices\n    .map(({ value }: { value: string }) => `index({ indexName: '${value}' }),`)\n    .join('\\n  ')}\n  autocomplete()\n]);\n`\n    : ''\n}\n      `\n    );\n\n    type ConnectorState = {\n      refine?(query: string): void;\n    };\n\n    const connectorState: ConnectorState = {};\n\n    return {\n      $$type: 'ais.autocomplete',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        const renderState = this.getWidgetRenderState(renderOptions);\n\n        renderState.indices.forEach(({ sendEvent, hits }) => {\n          sendEvent('view', hits);\n        });\n\n        renderFn(\n          {\n            ...renderState,\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          autocomplete: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState({\n        helper,\n        state,\n        scopedResults,\n        instantSearchInstance,\n      }) {\n        if (!connectorState.refine) {\n          connectorState.refine = (query: string) => {\n            helper.setQuery(query).search();\n          };\n        }\n\n        const indices = scopedResults.map((scopedResult) => {\n          // We need to escape the hits because highlighting\n          // exposes HTML tags to the end-user.\n          scopedResult.results.hits = escapeHTML\n            ? escapeHits(scopedResult.results.hits)\n            : scopedResult.results.hits;\n\n          const sendEvent = createSendEventForHits({\n            instantSearchInstance,\n            index: scopedResult.results.index,\n            widgetType: this.$$type,\n          });\n\n          return {\n            indexId: scopedResult.indexId,\n            indexName: scopedResult.results.index,\n            hits: scopedResult.results.hits,\n            results: scopedResult.results,\n            sendEvent,\n          };\n        });\n\n        return {\n          currentRefinement: state.query || '',\n          indices,\n          refine: connectorState.refine,\n          widgetParams,\n        };\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const query = searchParameters.query || '';\n\n        if (query === '' || (uiState && uiState.query === query)) {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          query,\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        const parameters = {\n          query: uiState.query || '',\n        };\n\n        if (!escapeHTML) {\n          return searchParameters.setQueryParameters(parameters);\n        }\n\n        return searchParameters.setQueryParameters({\n          ...parameters,\n          ...TAG_PLACEHOLDER,\n        });\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        const stateWithoutQuery = state.setQueryParameter('query', undefined);\n\n        if (!escapeHTML) {\n          return stateWithoutQuery;\n        }\n\n        return stateWithoutQuery.setQueryParameters(\n          Object.keys(TAG_PLACEHOLDER).reduce(\n            (acc, key) => ({\n              ...acc,\n              [key]: undefined,\n            }),\n            {}\n          )\n        );\n      },\n    };\n  };\n};\n\nexport default connectAutocomplete;\n","import type {\n  AlgoliaSearchHelper as Helper,\n  SearchParameters,\n} from 'algoliasearch-helper';\nimport type { Connector, TransformItems, WidgetRenderState } from '../../types';\nimport {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  warning,\n  getRefinements,\n  isEqual,\n  noop,\n} from '../../lib/utils';\nimport type {\n  Refinement as InternalRefinement,\n  NumericRefinement as InternalNumericRefinement,\n} from '../../lib/utils';\n\ntype TrackedFilterRefinement = string | number | boolean;\n\nexport type ParamTrackedFilters = {\n  [facetName: string]: (\n    facetValues: TrackedFilterRefinement[]\n  ) => TrackedFilterRefinement[];\n};\nexport type ParamTransformRuleContexts = (ruleContexts: string[]) => string[];\n\nexport type QueryRulesConnectorParams = {\n  trackedFilters?: ParamTrackedFilters;\n  transformRuleContexts?: ParamTransformRuleContexts;\n  transformItems?: TransformItems<any>;\n};\n\nexport type QueryRulesRenderState = {\n  items: any[];\n};\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'query-rules',\n  connector: true,\n});\n\nfunction hasStateRefinements(state: SearchParameters): boolean {\n  return [\n    state.disjunctiveFacetsRefinements,\n    state.facetsRefinements,\n    state.hierarchicalFacetsRefinements,\n    state.numericRefinements,\n  ].some((refinement) =>\n    Boolean(refinement && Object.keys(refinement).length > 0)\n  );\n}\n\n// A context rule must consist only of alphanumeric characters, hyphens, and underscores.\n// See https://www.algolia.com/doc/guides/managing-results/refine-results/merchandising-and-promoting/in-depth/implementing-query-rules/#context\nfunction escapeRuleContext(ruleName: string): string {\n  return ruleName.replace(/[^a-z0-9-_]+/gi, '_');\n}\n\nfunction getRuleContextsFromTrackedFilters({\n  helper,\n  sharedHelperState,\n  trackedFilters,\n}: {\n  helper: Helper;\n  sharedHelperState: SearchParameters;\n  trackedFilters: ParamTrackedFilters;\n}): string[] {\n  const ruleContexts = Object.keys(trackedFilters).reduce<string[]>(\n    (facets, facetName) => {\n      const facetRefinements: TrackedFilterRefinement[] = getRefinements(\n        helper.lastResults || {},\n        sharedHelperState,\n        true\n      )\n        .filter(\n          (refinement: InternalRefinement) => refinement.attribute === facetName\n        )\n        .map(\n          (refinement: InternalRefinement) =>\n            (refinement as InternalNumericRefinement).numericValue ||\n            refinement.name\n        );\n\n      const getTrackedFacetValues = trackedFilters[facetName];\n      const trackedFacetValues = getTrackedFacetValues(facetRefinements);\n\n      return [\n        ...facets,\n        ...facetRefinements\n          .filter((facetRefinement) =>\n            trackedFacetValues.includes(facetRefinement)\n          )\n          .map((facetValue) =>\n            escapeRuleContext(`ais-${facetName}-${facetValue}`)\n          ),\n      ];\n    },\n    []\n  );\n\n  return ruleContexts;\n}\n\nfunction applyRuleContexts(\n  this: {\n    helper: Helper;\n    initialRuleContexts: string[];\n    trackedFilters: ParamTrackedFilters;\n    transformRuleContexts: ParamTransformRuleContexts;\n  },\n  event: { state: SearchParameters }\n): void {\n  const { helper, initialRuleContexts, trackedFilters, transformRuleContexts } =\n    this;\n\n  const sharedHelperState = event.state;\n  const previousRuleContexts: string[] = sharedHelperState.ruleContexts || [];\n  const newRuleContexts = getRuleContextsFromTrackedFilters({\n    helper,\n    sharedHelperState,\n    trackedFilters,\n  });\n  const nextRuleContexts = [...initialRuleContexts, ...newRuleContexts];\n\n  warning(\n    nextRuleContexts.length <= 10,\n    `\nThe maximum number of \\`ruleContexts\\` is 10. They have been sliced to that limit.\nConsider using \\`transformRuleContexts\\` to minimize the number of rules sent to Algolia.\n`\n  );\n\n  const ruleContexts = transformRuleContexts(nextRuleContexts).slice(0, 10);\n\n  if (!isEqual(previousRuleContexts, ruleContexts)) {\n    helper.overrideStateWithoutTriggeringChangeEvent({\n      ...sharedHelperState,\n      ruleContexts,\n    });\n  }\n}\n\nexport type QueryRulesWidgetDescription = {\n  $$type: 'ais.queryRules';\n  renderState: QueryRulesRenderState;\n  indexRenderState: {\n    queryRules: WidgetRenderState<\n      QueryRulesRenderState,\n      QueryRulesConnectorParams\n    >;\n  };\n};\n\nexport type QueryRulesConnector = Connector<\n  QueryRulesWidgetDescription,\n  QueryRulesConnectorParams\n>;\n\nconst connectQueryRules: QueryRulesConnector = function connectQueryRules(\n  render,\n  unmount = noop\n) {\n  checkRendering(render, withUsage());\n\n  return (widgetParams) => {\n    const {\n      trackedFilters = {} as ParamTrackedFilters,\n      transformRuleContexts = ((rules) => rules) as ParamTransformRuleContexts,\n      transformItems = ((items) => items) as NonNullable<\n        QueryRulesConnectorParams['transformItems']\n      >,\n    } = widgetParams || {};\n\n    Object.keys(trackedFilters).forEach((facetName) => {\n      if (typeof trackedFilters[facetName] !== 'function') {\n        throw new Error(\n          withUsage(\n            `'The \"${facetName}\" filter value in the \\`trackedFilters\\` option expects a function.`\n          )\n        );\n      }\n    });\n\n    const hasTrackedFilters = Object.keys(trackedFilters).length > 0;\n\n    // We store the initial rule contexts applied before creating the widget\n    // so that we do not override them with the rules created from `trackedFilters`.\n    let initialRuleContexts: string[] = [];\n    let onHelperChange: (event: { state: SearchParameters }) => void;\n\n    return {\n      $$type: 'ais.queryRules',\n\n      init(initOptions) {\n        const { helper, state, instantSearchInstance } = initOptions;\n\n        initialRuleContexts = state.ruleContexts || [];\n        onHelperChange = applyRuleContexts.bind({\n          helper,\n          initialRuleContexts,\n          trackedFilters,\n          transformRuleContexts,\n        });\n\n        if (hasTrackedFilters) {\n          // We need to apply the `ruleContexts` based on the `trackedFilters`\n          // before the helper changes state in some cases:\n          //   - Some filters are applied on the first load (e.g. using `configure`)\n          //   - The `transformRuleContexts` option sets initial `ruleContexts`.\n          if (\n            hasStateRefinements(state) ||\n            Boolean(widgetParams.transformRuleContexts)\n          ) {\n            onHelperChange({ state });\n          }\n\n          // We track every change in the helper to override its state and add\n          // any `ruleContexts` needed based on the `trackedFilters`.\n          helper.on('change', onHelperChange);\n        }\n\n        render(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        render(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      getWidgetRenderState({ results }) {\n        const { userData = [] } = results || {};\n        const items = transformItems(userData, { results });\n\n        return {\n          items,\n          widgetParams,\n        };\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          queryRules: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      dispose({ helper, state }) {\n        unmount();\n\n        if (hasTrackedFilters) {\n          helper.removeListener('change', onHelperChange);\n\n          return state.setQueryParameter('ruleContexts', initialRuleContexts);\n        }\n\n        return state;\n      },\n    };\n  };\n};\n\nexport default connectQueryRules;\n","// `SpeechRecognition` is an API used on the browser so we can safely disable\n// the `window` check.\n/* eslint-disable no-restricted-globals */\n/* global SpeechRecognition SpeechRecognitionEvent */\nimport type {\n  CreateVoiceSearchHelper,\n  Status,\n  VoiceListeningState,\n} from './types';\n\nconst createVoiceSearchHelper: CreateVoiceSearchHelper =\n  function createVoiceSearchHelper({\n    searchAsYouSpeak,\n    language,\n    onQueryChange,\n    onStateChange,\n  }) {\n    const SpeechRecognitionAPI: new () => SpeechRecognition =\n      (window as any).webkitSpeechRecognition ||\n      (window as any).SpeechRecognition;\n    const getDefaultState = (status: Status): VoiceListeningState => ({\n      status,\n      transcript: '',\n      isSpeechFinal: false,\n      errorCode: undefined,\n    });\n    let state: VoiceListeningState = getDefaultState('initial');\n    let recognition: SpeechRecognition | undefined;\n\n    const isBrowserSupported = (): boolean => Boolean(SpeechRecognitionAPI);\n\n    const isListening = (): boolean =>\n      state.status === 'askingPermission' ||\n      state.status === 'waiting' ||\n      state.status === 'recognizing';\n\n    const setState = (newState: Partial<VoiceListeningState> = {}): void => {\n      state = { ...state, ...newState };\n      onStateChange();\n    };\n\n    const getState = (): VoiceListeningState => state;\n\n    const resetState = (status: Status = 'initial'): void => {\n      setState(getDefaultState(status));\n    };\n\n    const onStart = (): void => {\n      setState({\n        status: 'waiting',\n      });\n    };\n\n    const onError = (event: Event): void => {\n      setState({ status: 'error', errorCode: (event as any).error });\n    };\n\n    const onResult = (event: SpeechRecognitionEvent): void => {\n      setState({\n        status: 'recognizing',\n        transcript:\n          (event.results[0] &&\n            event.results[0][0] &&\n            event.results[0][0].transcript) ||\n          '',\n        isSpeechFinal: event.results[0] && event.results[0].isFinal,\n      });\n      if (searchAsYouSpeak && state.transcript) {\n        onQueryChange(state.transcript);\n      }\n    };\n\n    const onEnd = (): void => {\n      if (!state.errorCode && state.transcript && !searchAsYouSpeak) {\n        onQueryChange(state.transcript);\n      }\n      if (state.status !== 'error') {\n        setState({ status: 'finished' });\n      }\n    };\n\n    const startListening = (): void => {\n      recognition = new SpeechRecognitionAPI();\n      if (!recognition) {\n        return;\n      }\n      resetState('askingPermission');\n      recognition.interimResults = true;\n\n      if (language) {\n        recognition.lang = language;\n      }\n\n      recognition.addEventListener('start', onStart);\n      recognition.addEventListener('error', onError);\n      recognition.addEventListener('result', onResult);\n      recognition.addEventListener('end', onEnd);\n      recognition.start();\n    };\n\n    const dispose = (): void => {\n      if (!recognition) {\n        return;\n      }\n      recognition.stop();\n      recognition.removeEventListener('start', onStart);\n      recognition.removeEventListener('error', onError);\n      recognition.removeEventListener('result', onResult);\n      recognition.removeEventListener('end', onEnd);\n      recognition = undefined;\n    };\n\n    const stopListening = (): void => {\n      dispose();\n      // Because `dispose` removes event listeners, `end` listener is not called.\n      // So we're setting the `status` as `finished` here.\n      // If we don't do it, it will be still `waiting` or `recognizing`.\n      resetState('finished');\n    };\n\n    return {\n      getState,\n      isBrowserSupported,\n      isListening,\n      startListening,\n      stopListening,\n      dispose,\n    };\n  };\n\nexport default createVoiceSearchHelper;\n","import type { PlainSearchParameters } from 'algoliasearch-helper';\nimport {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  noop,\n} from '../../lib/utils';\nimport type { Connector, WidgetRenderState } from '../../types';\nimport builtInCreateVoiceSearchHelper from '../../lib/voiceSearchHelper';\nimport type {\n  CreateVoiceSearchHelper,\n  VoiceListeningState,\n} from '../../lib/voiceSearchHelper/types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'voice-search',\n  connector: true,\n});\n\nexport type VoiceSearchConnectorParams = {\n  searchAsYouSpeak?: boolean;\n  language?: string;\n  additionalQueryParameters?: (params: {\n    query: string;\n  }) => PlainSearchParameters | void;\n  createVoiceSearchHelper?: CreateVoiceSearchHelper;\n};\n\nexport type VoiceSearchRenderState = {\n  isBrowserSupported: boolean;\n  isListening: boolean;\n  toggleListening: () => void;\n  voiceListeningState: VoiceListeningState;\n};\n\nexport type VoiceSearchWidgetDescription = {\n  $$type: 'ais.voiceSearch';\n  renderState: VoiceSearchRenderState;\n  indexRenderState: {\n    voiceSearch: WidgetRenderState<\n      VoiceSearchRenderState,\n      VoiceSearchConnectorParams\n    >;\n  };\n  indexUiState: {\n    query: string;\n  };\n};\n\nexport type VoiceSearchConnector = Connector<\n  VoiceSearchWidgetDescription,\n  VoiceSearchConnectorParams\n>;\n\nconst connectVoiceSearch: VoiceSearchConnector = function connectVoiceSearch(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const {\n      searchAsYouSpeak = false,\n      language,\n      additionalQueryParameters,\n      createVoiceSearchHelper = builtInCreateVoiceSearchHelper,\n    } = widgetParams;\n\n    return {\n      $$type: 'ais.voiceSearch',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          voiceSearch: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState(renderOptions) {\n        const { helper, instantSearchInstance } = renderOptions;\n        if (!(this as any)._refine) {\n          (this as any)._refine = (query: string): void => {\n            if (query !== helper.state.query) {\n              const queryLanguages = language\n                ? [language.split('-')[0]]\n                : undefined;\n              helper.setQueryParameter('queryLanguages', queryLanguages);\n\n              if (typeof additionalQueryParameters === 'function') {\n                helper.setState(\n                  helper.state.setQueryParameters({\n                    ignorePlurals: true,\n                    removeStopWords: true,\n                    // @ts-ignore (optionalWords only allows array in v3, while string is also valid)\n                    optionalWords: query,\n                    ...additionalQueryParameters({ query }),\n                  })\n                );\n              }\n\n              helper.setQuery(query).search();\n            }\n          };\n        }\n\n        if (!(this as any)._voiceSearchHelper) {\n          (this as any)._voiceSearchHelper = createVoiceSearchHelper({\n            searchAsYouSpeak,\n            language,\n            onQueryChange: (query) => (this as any)._refine(query),\n            onStateChange: () => {\n              renderFn(\n                {\n                  ...this.getWidgetRenderState(renderOptions),\n                  instantSearchInstance,\n                },\n                false\n              );\n            },\n          });\n        }\n\n        const {\n          isBrowserSupported,\n          isListening,\n          startListening,\n          stopListening,\n          getState,\n        } = (this as any)._voiceSearchHelper;\n\n        return {\n          isBrowserSupported: isBrowserSupported(),\n          isListening: isListening(),\n          toggleListening() {\n            if (!isBrowserSupported()) {\n              return;\n            }\n            if (isListening()) {\n              stopListening();\n            } else {\n              startListening();\n            }\n          },\n          voiceListeningState: getState(),\n          widgetParams,\n        };\n      },\n\n      dispose({ state }) {\n        (this as any)._voiceSearchHelper.dispose();\n\n        unmountFn();\n\n        let newState = state;\n        if (typeof additionalQueryParameters === 'function') {\n          const additional = additionalQueryParameters({ query: '' });\n          const toReset = additional\n            ? (\n                Object.keys(additional) as Array<keyof PlainSearchParameters>\n              ).reduce<PlainSearchParameters>((acc, current) => {\n                // @ts-ignore search parameters is typed as readonly in v4\n                acc[current] = undefined;\n                return acc;\n              }, {})\n            : {};\n          newState = state.setQueryParameters({\n            // @ts-ignore (queryLanguages is not added to algoliasearch v3)\n            queryLanguages: undefined,\n            ignorePlurals: undefined,\n            removeStopWords: undefined,\n            optionalWords: undefined,\n            ...toReset,\n          });\n        }\n\n        return newState.setQueryParameter('query', undefined);\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const query = searchParameters.query || '';\n\n        if (!query) {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          query,\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        return searchParameters.setQueryParameter('query', uiState.query || '');\n      },\n    };\n  };\n};\n\nexport default connectVoiceSearch;\n","import {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  createConcurrentSafePromise,\n  addQueryID,\n  debounce,\n  addAbsolutePosition,\n  noop,\n  escapeHits,\n} from '../../lib/utils';\nimport type { DebouncedFunction } from '../../lib/utils';\nimport type {\n  Connector,\n  Hit,\n  FindAnswersOptions,\n  FindAnswersResponse,\n  WidgetRenderState,\n  SearchClient,\n} from '../../types';\n\ntype IndexWithAnswers = {\n  readonly findAnswers: any;\n};\n\nfunction hasFindAnswersMethod(\n  answersIndex: IndexWithAnswers | any\n): answersIndex is IndexWithAnswers {\n  return typeof (answersIndex as IndexWithAnswers).findAnswers === 'function';\n}\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'answers',\n  connector: true,\n});\n\nexport type AnswersRenderState = {\n  /**\n   * The matched hits from Algolia API.\n   */\n  hits: Hit[];\n\n  /**\n   * Whether it's still loading the results from the Answers API.\n   */\n  isLoading: boolean;\n};\n\nexport type AnswersConnectorParams = {\n  /**\n   * Attributes to use for predictions.\n   * If empty, we use all `searchableAttributes` to find answers.\n   * All your `attributesForPrediction` must be part of your `searchableAttributes`.\n   */\n  attributesForPrediction?: string[];\n\n  /**\n   * The languages in the query. Currently only supports `en`.\n   */\n  queryLanguages: ['en'];\n\n  /**\n   * Maximum number of answers to retrieve from the Answers Engine.\n   * Cannot be greater than 1000.\n   * @default 1\n   */\n  nbHits?: number;\n\n  /**\n   * Debounce time in milliseconds to debounce render\n   * @default 100\n   */\n  renderDebounceTime?: number;\n\n  /**\n   * Debounce time in milliseconds to debounce search\n   * @default 100\n   */\n  searchDebounceTime?: number;\n\n  /**\n   * Whether to escape HTML tags from hits string values.\n   *\n   * @default true\n   */\n  escapeHTML?: boolean;\n\n  /**\n   * Extra parameters to pass to findAnswers method.\n   * @default {}\n   */\n  extraParameters?: FindAnswersOptions;\n};\n\nexport type AnswersWidgetDescription = {\n  $$type: 'ais.answers';\n  renderState: AnswersRenderState;\n  indexRenderState: {\n    answers: WidgetRenderState<AnswersRenderState, AnswersConnectorParams>;\n  };\n};\n\nexport type AnswersConnector = Connector<\n  AnswersWidgetDescription,\n  AnswersConnectorParams\n>;\n\nconst connectAnswers: AnswersConnector = function connectAnswers(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const {\n      queryLanguages,\n      attributesForPrediction,\n      nbHits = 1,\n      renderDebounceTime = 100,\n      searchDebounceTime = 100,\n      escapeHTML = true,\n      extraParameters = {},\n    } = widgetParams || {};\n\n    // @ts-expect-error checking for the wrong value\n    if (!queryLanguages || queryLanguages.length === 0) {\n      throw new Error(\n        withUsage('The `queryLanguages` expects an array of strings.')\n      );\n    }\n\n    const runConcurrentSafePromise =\n      createConcurrentSafePromise<FindAnswersResponse<Hit>>();\n\n    let lastHits: FindAnswersResponse<Hit>['hits'] = [];\n    let isLoading = false;\n    const debouncedRender = debounce(renderFn, renderDebounceTime);\n\n    // this does not directly use DebouncedFunction<findAnswers>, since then the generic will disappear\n    let debouncedRefine: DebouncedFunction<\n      ReturnType<NonNullable<SearchClient['initIndex']>> extends {\n        findAnswers: infer FindAnswers;\n      }\n        ? FindAnswers\n        : any\n    >;\n\n    return {\n      $$type: 'ais.answers',\n\n      init(initOptions) {\n        const { state, instantSearchInstance } = initOptions;\n        const answersIndex = instantSearchInstance.client.initIndex!(\n          state.index\n        );\n        if (!hasFindAnswersMethod(answersIndex)) {\n          throw new Error(withUsage('`algoliasearch` >= 4.8.0 required.'));\n        }\n        debouncedRefine = debounce(\n          answersIndex.findAnswers,\n          searchDebounceTime\n        );\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance: initOptions.instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const query = renderOptions.state.query;\n        if (!query) {\n          // renders nothing with empty query\n          lastHits = [];\n          isLoading = false;\n          renderFn(\n            {\n              ...this.getWidgetRenderState(renderOptions),\n              instantSearchInstance: renderOptions.instantSearchInstance,\n            },\n            false\n          );\n          return;\n        }\n\n        // render the loader\n        lastHits = [];\n        isLoading = true;\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance: renderOptions.instantSearchInstance,\n          },\n          false\n        );\n\n        // call /answers API\n        runConcurrentSafePromise(\n          debouncedRefine(query, queryLanguages, {\n            ...extraParameters,\n            nbHits,\n            attributesForPrediction,\n          }) as unknown as Promise<FindAnswersResponse<Hit>>\n        ).then((result) => {\n          if (!result) {\n            // It's undefined when it's debounced.\n            return;\n          }\n\n          if (escapeHTML && result.hits.length > 0) {\n            result.hits = escapeHits(result.hits);\n          }\n\n          const hitsWithAbsolutePosition = addAbsolutePosition(\n            result.hits,\n            0,\n            nbHits\n          );\n\n          const hitsWithAbsolutePositionAndQueryID = addQueryID(\n            hitsWithAbsolutePosition,\n            result.queryID\n          );\n\n          lastHits = hitsWithAbsolutePositionAndQueryID;\n          isLoading = false;\n          debouncedRender(\n            {\n              ...this.getWidgetRenderState(renderOptions),\n              instantSearchInstance: renderOptions.instantSearchInstance,\n            },\n            false\n          );\n        });\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          answers: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState() {\n        return {\n          hits: lastHits,\n          isLoading,\n          widgetParams,\n        };\n      },\n\n      dispose({ state }) {\n        unmountFn();\n        return state;\n      },\n\n      getWidgetSearchParameters(state) {\n        return state;\n      },\n    };\n  };\n};\n\nexport default connectAnswers;\n","export type MaybePromise<TResolution> =\n  | Readonly<Promise<TResolution>>\n  | Promise<TResolution>\n  | TResolution;\n\n// copied from\n// https://github.com/algolia/autocomplete.js/blob/307a7acc4283e10a19cb7d067f04f1bea79dc56f/packages/autocomplete-core/src/utils/createConcurrentSafePromise.ts#L1:L1\n/**\n * Creates a runner that executes promises in a concurrent-safe way.\n *\n * This is useful to prevent older promises to resolve after a newer promise,\n * otherwise resulting in stale resolved values.\n */\nexport function createConcurrentSafePromise<TValue>() {\n  let basePromiseId = -1;\n  let latestResolvedId = -1;\n  let latestResolvedValue: TValue | undefined = undefined;\n\n  return function runConcurrentSafePromise(promise: MaybePromise<TValue>) {\n    const currentPromiseId = ++basePromiseId;\n\n    return Promise.resolve(promise).then((x) => {\n      // The promise might take too long to resolve and get outdated. This would\n      // result in resolving stale values.\n      // When this happens, we ignore the promise value and return the one\n      // coming from the latest resolved value.\n      //\n      // +----------------------------------+\n      // |        100ms                     |\n      // | run(1) +--->  R1                 |\n      // |        300ms                     |\n      // | run(2) +-------------> R2 (SKIP) |\n      // |        200ms                     |\n      // | run(3) +--------> R3             |\n      // +----------------------------------+\n      if (latestResolvedValue && currentPromiseId < latestResolvedId) {\n        return latestResolvedValue;\n      }\n\n      latestResolvedId = currentPromiseId;\n      latestResolvedValue = x;\n\n      return x;\n    });\n  };\n}\n","import type { Connector, WidgetRenderState } from '../../types';\nimport { noop } from '../../lib/utils';\n\nexport type RelevantSortConnectorParams = Record<string, unknown>;\n\ntype Refine = (relevancyStrictness: number) => void;\n\nexport type RelevantSortRenderState = {\n  /**\n   * Indicates if it has appliedRelevancyStrictness greater than zero\n   */\n  isRelevantSorted: boolean;\n\n  /**\n   * Indicates if the results come from a virtual replica\n   */\n  isVirtualReplica: boolean;\n\n  /**\n   * Indicates if search state can be refined\n   */\n  canRefine: boolean;\n\n  /**\n   * Sets the value as relevancyStrictness and trigger a new search\n   */\n  refine: Refine;\n};\n\nexport type RelevantSortWidgetDescription = {\n  $$type: 'ais.relevantSort';\n  renderState: RelevantSortRenderState;\n  indexRenderState: {\n    relevantSort: WidgetRenderState<\n      RelevantSortRenderState,\n      RelevantSortConnectorParams\n    >;\n  };\n  indexUiState: {\n    relevantSort: number;\n  };\n};\n\nexport type RelevantSortConnector = Connector<\n  RelevantSortWidgetDescription,\n  RelevantSortConnectorParams\n>;\n\nconst connectRelevantSort: RelevantSortConnector = function connectRelevantSort(\n  renderFn = noop,\n  unmountFn = noop\n) {\n  return (widgetParams) => {\n    type ConnectorState = {\n      refine?: Refine;\n    };\n\n    const connectorState: ConnectorState = {};\n\n    return {\n      $$type: 'ais.relevantSort',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return state.setQueryParameter('relevancyStrictness', undefined);\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          relevantSort: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState({ results, helper }) {\n        if (!connectorState.refine) {\n          connectorState.refine = (relevancyStrictness: number | undefined) => {\n            helper\n              .setQueryParameter('relevancyStrictness', relevancyStrictness)\n              .search();\n          };\n        }\n\n        const { appliedRelevancyStrictness } = results || {};\n\n        const isVirtualReplica = appliedRelevancyStrictness !== undefined;\n\n        return {\n          isRelevantSorted:\n            typeof appliedRelevancyStrictness !== 'undefined' &&\n            appliedRelevancyStrictness > 0,\n          isVirtualReplica,\n          canRefine: isVirtualReplica,\n          refine: connectorState.refine,\n          widgetParams,\n        };\n      },\n\n      getWidgetSearchParameters(state, { uiState }) {\n        return state.setQueryParameter(\n          'relevancyStrictness',\n          uiState.relevantSort ?? state.relevancyStrictness\n        );\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        return {\n          ...uiState,\n          relevantSort:\n            searchParameters.relevancyStrictness || uiState.relevantSort,\n        };\n      },\n    };\n  };\n};\n\nexport default connectRelevantSort;\n","import {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  getWidgetAttribute,\n  noop,\n  warning,\n} from '../../lib/utils';\nimport type {\n  Connector,\n  TransformItems,\n  TransformItemsMetadata,\n  Widget,\n} from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'dynamic-widgets',\n  connector: true,\n});\n\nexport type DynamicWidgetsRenderState = {\n  attributesToRender: string[];\n};\n\nexport type DynamicWidgetsConnectorParams = {\n  /**\n   * An array of widgets, displayed in the order defined by `facetOrdering`.\n   */\n  widgets: Widget[];\n\n  /**\n   * Function to return a fallback widget when an attribute isn't found in\n   * `widgets`.\n   */\n  fallbackWidget?(args: {\n    /** The attribute name to create a widget for. */\n    attribute: string;\n  }): Widget;\n\n  /**\n   * Function to transform the items to render.\n   * The function also exposes the full search response.\n   */\n  transformItems?: TransformItems<\n    string,\n    Omit<TransformItemsMetadata, 'results'> & {\n      results: NonNullable<TransformItemsMetadata['results']>;\n    }\n  >;\n\n  /**\n   * To prevent unneeded extra network requests when widgets mount or unmount,\n   * we request all facet values.\n   *\n   * @default ['*']\n   */\n  facets?: ['*'] | never[];\n\n  /**\n   * If you have more than 20 facet values pinned, you need to increase the\n   * maxValuesPerFacet to at least that value.\n   *\n   * @default 20\n   */\n  maxValuesPerFacet?: number;\n};\n\nexport type DynamicWidgetsWidgetDescription = {\n  $$type: 'ais.dynamicWidgets';\n  renderState: DynamicWidgetsRenderState;\n  indexRenderState: {\n    dynamicWidgets: DynamicWidgetsRenderState;\n  };\n};\n\nexport type DynamicWidgetsConnector = Connector<\n  DynamicWidgetsWidgetDescription,\n  DynamicWidgetsConnectorParams\n>;\n\nconst MAX_WILDCARD_FACETS = 20;\n\nconst connectDynamicWidgets: DynamicWidgetsConnector =\n  function connectDynamicWidgets(renderFn, unmountFn = noop) {\n    checkRendering(renderFn, withUsage());\n\n    return (widgetParams) => {\n      const {\n        widgets,\n        maxValuesPerFacet = 20,\n        facets = ['*'],\n        transformItems = (items) => items,\n        fallbackWidget,\n      } = widgetParams;\n\n      if (\n        !(\n          widgets &&\n          Array.isArray(widgets) &&\n          widgets.every((widget) => typeof widget === 'object')\n        )\n      ) {\n        throw new Error(\n          withUsage('The `widgets` option expects an array of widgets.')\n        );\n      }\n\n      if (\n        !(\n          Array.isArray(facets) &&\n          facets.length <= 1 &&\n          (facets[0] === '*' || facets[0] === undefined)\n        )\n      ) {\n        throw new Error(\n          withUsage(\n            `The \\`facets\\` option only accepts [] or [\"*\"], you passed ${JSON.stringify(\n              facets\n            )}`\n          )\n        );\n      }\n\n      const localWidgets: Map<string, { widget: Widget; isMounted: boolean }> =\n        new Map();\n\n      return {\n        $$type: 'ais.dynamicWidgets',\n        init(initOptions) {\n          widgets.forEach((widget) => {\n            const attribute = getWidgetAttribute(widget, initOptions);\n            localWidgets.set(attribute, { widget, isMounted: false });\n          });\n\n          renderFn(\n            {\n              ...this.getWidgetRenderState(initOptions),\n              instantSearchInstance: initOptions.instantSearchInstance,\n            },\n            true\n          );\n        },\n        render(renderOptions) {\n          const { parent } = renderOptions;\n          const renderState = this.getWidgetRenderState(renderOptions);\n\n          const widgetsToUnmount: Widget[] = [];\n          const widgetsToMount: Widget[] = [];\n\n          if (fallbackWidget) {\n            renderState.attributesToRender.forEach((attribute) => {\n              if (!localWidgets.has(attribute)) {\n                const widget = fallbackWidget({ attribute });\n                localWidgets.set(attribute, { widget, isMounted: false });\n              }\n            });\n          }\n\n          localWidgets.forEach(({ widget, isMounted }, attribute) => {\n            const shouldMount =\n              renderState.attributesToRender.indexOf(attribute) > -1;\n\n            if (!isMounted && shouldMount) {\n              widgetsToMount.push(widget);\n              localWidgets.set(attribute, {\n                widget,\n                isMounted: true,\n              });\n            } else if (isMounted && !shouldMount) {\n              widgetsToUnmount.push(widget);\n              localWidgets.set(attribute, {\n                widget,\n                isMounted: false,\n              });\n            }\n          });\n\n          parent.addWidgets(widgetsToMount);\n          // make sure this only happens after the regular render, otherwise it\n          // happens too quick, since render is \"deferred\" for the next microtask,\n          // so this needs to be a whole task later\n          setTimeout(() => parent.removeWidgets(widgetsToUnmount), 0);\n\n          renderFn(\n            {\n              ...renderState,\n              instantSearchInstance: renderOptions.instantSearchInstance,\n            },\n            false\n          );\n        },\n        dispose({ parent }) {\n          const toRemove: Widget[] = [];\n          localWidgets.forEach(({ widget, isMounted }) => {\n            if (isMounted) {\n              toRemove.push(widget);\n            }\n          });\n          parent.removeWidgets(toRemove);\n\n          unmountFn();\n        },\n        getWidgetSearchParameters(state) {\n          // broadening the scope of facets to avoid conflict between never and *\n          return (facets as string[]).reduce(\n            (acc, curr) => acc.addFacet(curr),\n            state.setQueryParameters({\n              maxValuesPerFacet: Math.max(\n                maxValuesPerFacet || 0,\n                state.maxValuesPerFacet || 0\n              ),\n            })\n          );\n        },\n        getRenderState(renderState, renderOptions) {\n          return {\n            ...renderState,\n            dynamicWidgets: this.getWidgetRenderState(renderOptions),\n          };\n        },\n        getWidgetRenderState({ results, state }) {\n          if (!results) {\n            return { attributesToRender: [], widgetParams };\n          }\n\n          const attributesToRender = transformItems(\n            results.renderingContent?.facetOrdering?.facets?.order ?? [],\n            { results }\n          );\n\n          if (!Array.isArray(attributesToRender)) {\n            throw new Error(\n              withUsage(\n                'The `transformItems` option expects a function that returns an Array.'\n              )\n            );\n          }\n\n          warning(\n            maxValuesPerFacet >= (state.maxValuesPerFacet || 0),\n            `The maxValuesPerFacet set by dynamic widgets (${maxValuesPerFacet}) is smaller than one of the limits set by a widget (${state.maxValuesPerFacet}). This causes a mismatch in query parameters and thus an extra network request when that widget is mounted.`\n          );\n\n          warning(\n            attributesToRender.length <= MAX_WILDCARD_FACETS ||\n              widgetParams.facets !== undefined,\n            `More than ${MAX_WILDCARD_FACETS} facets are requested to be displayed without explicitly setting which facets to retrieve. This could have a performance impact. Set \"facets\" to [] to do two smaller network requests, or explicitly to ['*'] to avoid this warning.`\n          );\n\n          return {\n            attributesToRender,\n            widgetParams,\n          };\n        },\n      };\n    };\n  };\n\nexport default connectDynamicWidgets;\n","import { deprecate } from '../lib/utils';\n\nexport { default as connectClearRefinements } from './clear-refinements/connectClearRefinements';\nexport { default as connectCurrentRefinements } from './current-refinements/connectCurrentRefinements';\nexport { default as connectHierarchicalMenu } from './hierarchical-menu/connectHierarchicalMenu';\nexport { default as connectHits } from './hits/connectHits';\nexport { default as connectHitsWithInsights } from './hits/connectHitsWithInsights';\nexport { default as connectHitsPerPage } from './hits-per-page/connectHitsPerPage';\nexport { default as connectInfiniteHits } from './infinite-hits/connectInfiniteHits';\nexport { default as connectInfiniteHitsWithInsights } from './infinite-hits/connectInfiniteHitsWithInsights';\nexport { default as connectMenu } from './menu/connectMenu';\nexport { default as connectNumericMenu } from './numeric-menu/connectNumericMenu';\nexport { default as connectPagination } from './pagination/connectPagination';\nexport { default as connectRange } from './range/connectRange';\nexport { default as connectRefinementList } from './refinement-list/connectRefinementList';\nexport { default as connectSearchBox } from './search-box/connectSearchBox';\nexport { default as connectSortBy } from './sort-by/connectSortBy';\nexport { default as connectRatingMenu } from './rating-menu/connectRatingMenu';\nexport { default as connectStats } from './stats/connectStats';\nexport { default as connectToggleRefinement } from './toggle-refinement/connectToggleRefinement';\nexport { default as connectBreadcrumb } from './breadcrumb/connectBreadcrumb';\nexport { default as connectGeoSearch } from './geo-search/connectGeoSearch';\nexport { default as connectPoweredBy } from './powered-by/connectPoweredBy';\nexport { default as connectConfigure } from './configure/connectConfigure';\nexport { default as EXPERIMENTAL_connectConfigureRelatedItems } from './configure-related-items/connectConfigureRelatedItems';\nexport { default as connectAutocomplete } from './autocomplete/connectAutocomplete';\nexport { default as connectQueryRules } from './query-rules/connectQueryRules';\nexport { default as connectVoiceSearch } from './voice-search/connectVoiceSearch';\nimport connectAnswers from './answers/connectAnswers';\n\n/** @deprecated answers is no longer supported */\nexport const EXPERIMENTAL_connectAnswers = deprecate(\n  connectAnswers,\n  'answers is no longer supported'\n);\n\nexport { default as connectRelevantSort } from './relevant-sort/connectRelevantSort';\n\nimport connectDynamicWidgets from './dynamic-widgets/connectDynamicWidgets';\nexport { connectDynamicWidgets };\n\n/** @deprecated use connectDynamicWidgets */\nexport const EXPERIMENTAL_connectDynamicWidgets = deprecate(\n  connectDynamicWidgets,\n  'use connectDynamicWidgets'\n);\n","import type { SearchParameters, SearchResults } from 'algoliasearch-helper';\nimport { createDocumentationMessageGenerator, warning } from '../../lib/utils';\nimport type { WidgetFactory, WidgetRenderState } from '../../types';\n\nexport type AnalyticsWidgetParamsPushFunction = (\n  /**\n   * Contains the search parameters, serialized as a query string.\n   */\n  formattedParameters: string,\n\n  /**\n   * Contains the whole search state.\n   */\n  state: SearchParameters,\n\n  /**\n   * The last received results.\n   */\n  results: SearchResults\n) => void;\n\nexport type AnalyticsWidgetParams = {\n  /**\n   * A function that is called every time the query or refinements changes. You\n   * need to add the logic to push the data to your analytics platform.\n   */\n  pushFunction: AnalyticsWidgetParamsPushFunction;\n\n  /**\n   * The number of milliseconds between the last search keystroke and calling `pushFunction`.\n   *\n   * @default 3000\n   */\n  delay?: number;\n\n  /**\n   * Triggers `pushFunction` after click on page or redirecting the page. This is useful if\n   * you want the pushFunction to be called for the last actions before the user leaves the\n   * current page, even if the delay wasn’t reached.\n   *\n   * @default false\n   */\n  triggerOnUIInteraction?: boolean;\n\n  /**\n   * Triggers `pushFunction` when InstantSearch is initialized. This means\n   * the `pushFunction` might be called even though the user didn’t perfom\n   * any search-related action.\n   *\n   * @default true\n   */\n  pushInitialSearch?: boolean;\n\n  /**\n   * Triggers `pushFunction` when the page changes, either through the UI or programmatically.\n   *\n   * @default false\n   */\n  pushPagination?: boolean;\n};\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'analytics' });\n\nexport type AnalyticsWidgetDescription = {\n  $$type: 'ais.analytics';\n  $$widgetType: 'ais.analytics';\n  renderState: Record<string, unknown>;\n  indexRenderState: {\n    analytics: WidgetRenderState<\n      Record<string, unknown>,\n      AnalyticsWidgetParams\n    >;\n  };\n};\n\nexport type AnalyticsWidget = WidgetFactory<\n  AnalyticsWidgetDescription,\n  AnalyticsWidgetParams,\n  AnalyticsWidgetParams\n>;\n\n// @major this widget will be removed from the next major version.\nconst analytics: AnalyticsWidget = function analytics(widgetParams) {\n  const {\n    pushFunction,\n    delay = 3000,\n    triggerOnUIInteraction = false,\n    pushInitialSearch = true,\n    pushPagination = false,\n  } = widgetParams || {};\n\n  if (!pushFunction) {\n    throw new Error(withUsage('The `pushFunction` option is required.'));\n  }\n\n  warning(\n    false,\n    `\\`analytics\\` widget has been deprecated. It is still supported in 4.x releases, but not further. It is replaced by the \\`insights\\` middleware.\n\nFor the migration, visit https://www.algolia.com/doc/guides/building-search-ui/upgrade-guides/js/#analytics-widget`\n  );\n\n  type AnalyticsState = {\n    results: SearchResults;\n    state: SearchParameters;\n  } | null;\n\n  let cachedState: AnalyticsState = null;\n\n  type RefinementParameters = {\n    [key: string]: string[];\n  };\n\n  const serializeRefinements = function (\n    parameters: RefinementParameters\n  ): string {\n    const refinements: string[] = [];\n\n    // eslint-disable-next-line no-restricted-syntax\n    for (const parameter in parameters) {\n      if (parameters.hasOwnProperty(parameter)) {\n        const values = parameters[parameter].join('+');\n        refinements.push(\n          `${encodeURIComponent(parameter)}=${encodeURIComponent(\n            parameter\n          )}_${encodeURIComponent(values)}`\n        );\n      }\n    }\n\n    return refinements.join('&');\n  };\n\n  const serializeNumericRefinements = function (\n    numericRefinements: SearchParameters['numericRefinements']\n  ): string {\n    const refinements: string[] = [];\n\n    // eslint-disable-next-line no-restricted-syntax\n    for (const attribute in numericRefinements) {\n      if (numericRefinements.hasOwnProperty(attribute)) {\n        const filter = numericRefinements[attribute];\n\n        if (filter.hasOwnProperty('>=') && filter.hasOwnProperty('<=')) {\n          if (\n            filter['>='] &&\n            filter['>='][0] === filter['<='] &&\n            filter['<='][0]\n          ) {\n            refinements.push(`${attribute}=${attribute}_${filter['>=']}`);\n          } else {\n            refinements.push(\n              `${attribute}=${attribute}_${filter['>=']}to${filter['<=']}`\n            );\n          }\n        } else if (filter.hasOwnProperty('>=')) {\n          refinements.push(`${attribute}=${attribute}_from${filter['>=']}`);\n        } else if (filter.hasOwnProperty('<=')) {\n          refinements.push(`${attribute}=${attribute}_to${filter['<=']}`);\n        } else if (filter.hasOwnProperty('=')) {\n          const equals: string[] = [];\n\n          // eslint-disable-next-line no-restricted-syntax\n          for (const equal in filter['=']) {\n            // eslint-disable-next-line max-depth\n            if (filter['='].hasOwnProperty(equal)) {\n              // @ts-ignore somehow 'equal' is a string, even though it's a number?\n              equals.push(filter['='][equal]);\n            }\n          }\n\n          refinements.push(`${attribute}=${attribute}_${equals.join('-')}`);\n        }\n      }\n    }\n\n    return refinements.join('&');\n  };\n\n  let lastSentData = '';\n\n  const sendAnalytics = function (analyticsState: AnalyticsState | null): void {\n    if (analyticsState === null) {\n      return;\n    }\n\n    const serializedParams: string[] = [];\n\n    const serializedRefinements = serializeRefinements({\n      ...analyticsState.state.disjunctiveFacetsRefinements,\n      ...analyticsState.state.facetsRefinements,\n      ...analyticsState.state.hierarchicalFacetsRefinements,\n    });\n\n    const serializedNumericRefinements = serializeNumericRefinements(\n      analyticsState.state.numericRefinements\n    );\n\n    if (serializedRefinements !== '') {\n      serializedParams.push(serializedRefinements);\n    }\n\n    if (serializedNumericRefinements !== '') {\n      serializedParams.push(serializedNumericRefinements);\n    }\n\n    const stringifiedParams = serializedParams.join('&');\n\n    let dataToSend = `Query: ${\n      analyticsState.state.query || ''\n    }, ${stringifiedParams}`;\n    if (pushPagination === true) {\n      dataToSend += `, Page: ${analyticsState.state.page || 0}`;\n    }\n\n    if (lastSentData !== dataToSend) {\n      pushFunction(\n        stringifiedParams,\n        analyticsState.state,\n        analyticsState.results\n      );\n\n      lastSentData = dataToSend;\n    }\n  };\n\n  let pushTimeout: number;\n  let isInitialSearch = true;\n\n  if (pushInitialSearch === true) {\n    isInitialSearch = false;\n  }\n\n  const onClick = (): void => {\n    sendAnalytics(cachedState);\n  };\n\n  const onUnload = (): void => {\n    sendAnalytics(cachedState);\n  };\n\n  return {\n    $$type: 'ais.analytics',\n    $$widgetType: 'ais.analytics',\n\n    init() {\n      if (triggerOnUIInteraction === true) {\n        document.addEventListener('click', onClick);\n        window.addEventListener('beforeunload', onUnload);\n      }\n    },\n\n    render({ results, state }) {\n      if (isInitialSearch === true) {\n        isInitialSearch = false;\n\n        return;\n      }\n\n      cachedState = { results, state };\n\n      if (pushTimeout) {\n        clearTimeout(pushTimeout);\n      }\n\n      pushTimeout = window.setTimeout(() => sendAnalytics(cachedState), delay);\n    },\n\n    dispose() {\n      if (triggerOnUIInteraction === true) {\n        document.removeEventListener('click', onClick);\n        window.removeEventListener('beforeunload', onUnload);\n      }\n    },\n\n    getRenderState(renderState, renderOptions) {\n      return {\n        ...renderState,\n        analytics: this.getWidgetRenderState(renderOptions),\n      };\n    },\n\n    getWidgetRenderState() {\n      return {\n        widgetParams,\n      };\n    },\n  };\n};\n\nexport default analytics;\n","export function cx() {\n  for (var _len = arguments.length, cssClasses = new Array(_len), _key = 0; _key < _len; _key++) {\n    cssClasses[_key] = arguments[_key];\n  }\n\n  return cssClasses.reduce(function (acc, className) {\n    if (Array.isArray(className)) {\n      return acc.concat(className);\n    }\n\n    return acc.concat([className]);\n  }, []).filter(Boolean).join(' ');\n}","import { uniq } from '../utils/uniq';\nimport type { HoganHelpers, Templates } from '../../types';\nimport type { HoganOptions } from 'hogan.js';\n\ntype TemplatesConfig = {\n  helpers?: HoganHelpers;\n  compileOptions?: HoganOptions;\n};\n\nexport type PreparedTemplateProps<TTemplates extends Templates> = {\n  templatesConfig: TemplatesConfig;\n  templates: TTemplates;\n  useCustomCompileOptions: {\n    [TKey in keyof Partial<TTemplates>]: boolean;\n  };\n};\n\nfunction prepareTemplates<TTemplates extends Templates>(\n  // can not use = {} here, since the template could have different constraints\n  defaultTemplates?: TTemplates,\n  templates: Partial<TTemplates> = {}\n) {\n  const allKeys = uniq([\n    ...Object.keys(defaultTemplates || {}),\n    ...Object.keys(templates),\n  ]);\n\n  return allKeys.reduce(\n    (config, key: keyof TTemplates) => {\n      const defaultTemplate = defaultTemplates\n        ? defaultTemplates[key]\n        : undefined;\n      const customTemplate = templates[key];\n      const isCustomTemplate =\n        customTemplate !== undefined && customTemplate !== defaultTemplate;\n\n      config.templates[key] = isCustomTemplate\n        ? customTemplate! // typescript doesn't recognize that this condition asserts customTemplate is defined\n        : defaultTemplate!;\n\n      config.useCustomCompileOptions[key] = isCustomTemplate;\n\n      return config;\n    },\n    {\n      // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n      templates: {} as TTemplates,\n      // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n      useCustomCompileOptions: {} as {\n        [TKey in keyof TTemplates]: boolean;\n      },\n    }\n  );\n}\n\n/**\n * Prepares an object to be passed to the Template widget\n */\nexport function prepareTemplateProps<TTemplates extends Templates>({\n  defaultTemplates,\n  templates,\n  templatesConfig,\n}: {\n  defaultTemplates: TTemplates;\n  templates?: Partial<TTemplates>;\n  templatesConfig: TemplatesConfig;\n}): PreparedTemplateProps<TTemplates> {\n  const preparedTemplates = prepareTemplates(defaultTemplates, templates);\n\n  return {\n    templatesConfig,\n    ...preparedTemplates,\n  };\n}\n","/*\n *  Copyright 2011 Twitter, Inc.\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n(function (Hogan) {\n  // Setup regex  assignments\n  // remove whitespace according to Mustache spec\n  var rIsWhitespace = /\\S/,\n      rQuot = /\\\"/g,\n      rNewline =  /\\n/g,\n      rCr = /\\r/g,\n      rSlash = /\\\\/g,\n      rLineSep = /\\u2028/,\n      rParagraphSep = /\\u2029/;\n\n  Hogan.tags = {\n    '#': 1, '^': 2, '<': 3, '$': 4,\n    '/': 5, '!': 6, '>': 7, '=': 8, '_v': 9,\n    '{': 10, '&': 11, '_t': 12\n  };\n\n  Hogan.scan = function scan(text, delimiters) {\n    var len = text.length,\n        IN_TEXT = 0,\n        IN_TAG_TYPE = 1,\n        IN_TAG = 2,\n        state = IN_TEXT,\n        tagType = null,\n        tag = null,\n        buf = '',\n        tokens = [],\n        seenTag = false,\n        i = 0,\n        lineStart = 0,\n        otag = '{{',\n        ctag = '}}';\n\n    function addBuf() {\n      if (buf.length > 0) {\n        tokens.push({tag: '_t', text: new String(buf)});\n        buf = '';\n      }\n    }\n\n    function lineIsWhitespace() {\n      var isAllWhitespace = true;\n      for (var j = lineStart; j < tokens.length; j++) {\n        isAllWhitespace =\n          (Hogan.tags[tokens[j].tag] < Hogan.tags['_v']) ||\n          (tokens[j].tag == '_t' && tokens[j].text.match(rIsWhitespace) === null);\n        if (!isAllWhitespace) {\n          return false;\n        }\n      }\n\n      return isAllWhitespace;\n    }\n\n    function filterLine(haveSeenTag, noNewLine) {\n      addBuf();\n\n      if (haveSeenTag && lineIsWhitespace()) {\n        for (var j = lineStart, next; j < tokens.length; j++) {\n          if (tokens[j].text) {\n            if ((next = tokens[j+1]) && next.tag == '>') {\n              // set indent to token value\n              next.indent = tokens[j].text.toString()\n            }\n            tokens.splice(j, 1);\n          }\n        }\n      } else if (!noNewLine) {\n        tokens.push({tag:'\\n'});\n      }\n\n      seenTag = false;\n      lineStart = tokens.length;\n    }\n\n    function changeDelimiters(text, index) {\n      var close = '=' + ctag,\n          closeIndex = text.indexOf(close, index),\n          delimiters = trim(\n            text.substring(text.indexOf('=', index) + 1, closeIndex)\n          ).split(' ');\n\n      otag = delimiters[0];\n      ctag = delimiters[delimiters.length - 1];\n\n      return closeIndex + close.length - 1;\n    }\n\n    if (delimiters) {\n      delimiters = delimiters.split(' ');\n      otag = delimiters[0];\n      ctag = delimiters[1];\n    }\n\n    for (i = 0; i < len; i++) {\n      if (state == IN_TEXT) {\n        if (tagChange(otag, text, i)) {\n          --i;\n          addBuf();\n          state = IN_TAG_TYPE;\n        } else {\n          if (text.charAt(i) == '\\n') {\n            filterLine(seenTag);\n          } else {\n            buf += text.charAt(i);\n          }\n        }\n      } else if (state == IN_TAG_TYPE) {\n        i += otag.length - 1;\n        tag = Hogan.tags[text.charAt(i + 1)];\n        tagType = tag ? text.charAt(i + 1) : '_v';\n        if (tagType == '=') {\n          i = changeDelimiters(text, i);\n          state = IN_TEXT;\n        } else {\n          if (tag) {\n            i++;\n          }\n          state = IN_TAG;\n        }\n        seenTag = i;\n      } else {\n        if (tagChange(ctag, text, i)) {\n          tokens.push({tag: tagType, n: trim(buf), otag: otag, ctag: ctag,\n                       i: (tagType == '/') ? seenTag - otag.length : i + ctag.length});\n          buf = '';\n          i += ctag.length - 1;\n          state = IN_TEXT;\n          if (tagType == '{') {\n            if (ctag == '}}') {\n              i++;\n            } else {\n              cleanTripleStache(tokens[tokens.length - 1]);\n            }\n          }\n        } else {\n          buf += text.charAt(i);\n        }\n      }\n    }\n\n    filterLine(seenTag, true);\n\n    return tokens;\n  }\n\n  function cleanTripleStache(token) {\n    if (token.n.substr(token.n.length - 1) === '}') {\n      token.n = token.n.substring(0, token.n.length - 1);\n    }\n  }\n\n  function trim(s) {\n    if (s.trim) {\n      return s.trim();\n    }\n\n    return s.replace(/^\\s*|\\s*$/g, '');\n  }\n\n  function tagChange(tag, text, index) {\n    if (text.charAt(index) != tag.charAt(0)) {\n      return false;\n    }\n\n    for (var i = 1, l = tag.length; i < l; i++) {\n      if (text.charAt(index + i) != tag.charAt(i)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  // the tags allowed inside super templates\n  var allowedInSuper = {'_t': true, '\\n': true, '$': true, '/': true};\n\n  function buildTree(tokens, kind, stack, customTags) {\n    var instructions = [],\n        opener = null,\n        tail = null,\n        token = null;\n\n    tail = stack[stack.length - 1];\n\n    while (tokens.length > 0) {\n      token = tokens.shift();\n\n      if (tail && tail.tag == '<' && !(token.tag in allowedInSuper)) {\n        throw new Error('Illegal content in < super tag.');\n      }\n\n      if (Hogan.tags[token.tag] <= Hogan.tags['$'] || isOpener(token, customTags)) {\n        stack.push(token);\n        token.nodes = buildTree(tokens, token.tag, stack, customTags);\n      } else if (token.tag == '/') {\n        if (stack.length === 0) {\n          throw new Error('Closing tag without opener: /' + token.n);\n        }\n        opener = stack.pop();\n        if (token.n != opener.n && !isCloser(token.n, opener.n, customTags)) {\n          throw new Error('Nesting error: ' + opener.n + ' vs. ' + token.n);\n        }\n        opener.end = token.i;\n        return instructions;\n      } else if (token.tag == '\\n') {\n        token.last = (tokens.length == 0) || (tokens[0].tag == '\\n');\n      }\n\n      instructions.push(token);\n    }\n\n    if (stack.length > 0) {\n      throw new Error('missing closing tag: ' + stack.pop().n);\n    }\n\n    return instructions;\n  }\n\n  function isOpener(token, tags) {\n    for (var i = 0, l = tags.length; i < l; i++) {\n      if (tags[i].o == token.n) {\n        token.tag = '#';\n        return true;\n      }\n    }\n  }\n\n  function isCloser(close, open, tags) {\n    for (var i = 0, l = tags.length; i < l; i++) {\n      if (tags[i].c == close && tags[i].o == open) {\n        return true;\n      }\n    }\n  }\n\n  function stringifySubstitutions(obj) {\n    var items = [];\n    for (var key in obj) {\n      items.push('\"' + esc(key) + '\": function(c,p,t,i) {' + obj[key] + '}');\n    }\n    return \"{ \" + items.join(\",\") + \" }\";\n  }\n\n  function stringifyPartials(codeObj) {\n    var partials = [];\n    for (var key in codeObj.partials) {\n      partials.push('\"' + esc(key) + '\":{name:\"' + esc(codeObj.partials[key].name) + '\", ' + stringifyPartials(codeObj.partials[key]) + \"}\");\n    }\n    return \"partials: {\" + partials.join(\",\") + \"}, subs: \" + stringifySubstitutions(codeObj.subs);\n  }\n\n  Hogan.stringify = function(codeObj, text, options) {\n    return \"{code: function (c,p,i) { \" + Hogan.wrapMain(codeObj.code) + \" },\" + stringifyPartials(codeObj) +  \"}\";\n  }\n\n  var serialNo = 0;\n  Hogan.generate = function(tree, text, options) {\n    serialNo = 0;\n    var context = { code: '', subs: {}, partials: {} };\n    Hogan.walk(tree, context);\n\n    if (options.asString) {\n      return this.stringify(context, text, options);\n    }\n\n    return this.makeTemplate(context, text, options);\n  }\n\n  Hogan.wrapMain = function(code) {\n    return 'var t=this;t.b(i=i||\"\");' + code + 'return t.fl();';\n  }\n\n  Hogan.template = Hogan.Template;\n\n  Hogan.makeTemplate = function(codeObj, text, options) {\n    var template = this.makePartials(codeObj);\n    template.code = new Function('c', 'p', 'i', this.wrapMain(codeObj.code));\n    return new this.template(template, text, this, options);\n  }\n\n  Hogan.makePartials = function(codeObj) {\n    var key, template = {subs: {}, partials: codeObj.partials, name: codeObj.name};\n    for (key in template.partials) {\n      template.partials[key] = this.makePartials(template.partials[key]);\n    }\n    for (key in codeObj.subs) {\n      template.subs[key] = new Function('c', 'p', 't', 'i', codeObj.subs[key]);\n    }\n    return template;\n  }\n\n  function esc(s) {\n    return s.replace(rSlash, '\\\\\\\\')\n            .replace(rQuot, '\\\\\\\"')\n            .replace(rNewline, '\\\\n')\n            .replace(rCr, '\\\\r')\n            .replace(rLineSep, '\\\\u2028')\n            .replace(rParagraphSep, '\\\\u2029');\n  }\n\n  function chooseMethod(s) {\n    return (~s.indexOf('.')) ? 'd' : 'f';\n  }\n\n  function createPartial(node, context) {\n    var prefix = \"<\" + (context.prefix || \"\");\n    var sym = prefix + node.n + serialNo++;\n    context.partials[sym] = {name: node.n, partials: {}};\n    context.code += 't.b(t.rp(\"' +  esc(sym) + '\",c,p,\"' + (node.indent || '') + '\"));';\n    return sym;\n  }\n\n  Hogan.codegen = {\n    '#': function(node, context) {\n      context.code += 'if(t.s(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,1),' +\n                      'c,p,0,' + node.i + ',' + node.end + ',\"' + node.otag + \" \" + node.ctag + '\")){' +\n                      't.rs(c,p,' + 'function(c,p,t){';\n      Hogan.walk(node.nodes, context);\n      context.code += '});c.pop();}';\n    },\n\n    '^': function(node, context) {\n      context.code += 'if(!t.s(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,1),c,p,1,0,0,\"\")){';\n      Hogan.walk(node.nodes, context);\n      context.code += '};';\n    },\n\n    '>': createPartial,\n    '<': function(node, context) {\n      var ctx = {partials: {}, code: '', subs: {}, inPartial: true};\n      Hogan.walk(node.nodes, ctx);\n      var template = context.partials[createPartial(node, context)];\n      template.subs = ctx.subs;\n      template.partials = ctx.partials;\n    },\n\n    '$': function(node, context) {\n      var ctx = {subs: {}, code: '', partials: context.partials, prefix: node.n};\n      Hogan.walk(node.nodes, ctx);\n      context.subs[node.n] = ctx.code;\n      if (!context.inPartial) {\n        context.code += 't.sub(\"' + esc(node.n) + '\",c,p,i);';\n      }\n    },\n\n    '\\n': function(node, context) {\n      context.code += write('\"\\\\n\"' + (node.last ? '' : ' + i'));\n    },\n\n    '_v': function(node, context) {\n      context.code += 't.b(t.v(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,0)));';\n    },\n\n    '_t': function(node, context) {\n      context.code += write('\"' + esc(node.text) + '\"');\n    },\n\n    '{': tripleStache,\n\n    '&': tripleStache\n  }\n\n  function tripleStache(node, context) {\n    context.code += 't.b(t.t(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,0)));';\n  }\n\n  function write(s) {\n    return 't.b(' + s + ');';\n  }\n\n  Hogan.walk = function(nodelist, context) {\n    var func;\n    for (var i = 0, l = nodelist.length; i < l; i++) {\n      func = Hogan.codegen[nodelist[i].tag];\n      func && func(nodelist[i], context);\n    }\n    return context;\n  }\n\n  Hogan.parse = function(tokens, text, options) {\n    options = options || {};\n    return buildTree(tokens, '', [], options.sectionTags || []);\n  }\n\n  Hogan.cache = {};\n\n  Hogan.cacheKey = function(text, options) {\n    return [text, !!options.asString, !!options.disableLambda, options.delimiters, !!options.modelGet].join('||');\n  }\n\n  Hogan.compile = function(text, options) {\n    options = options || {};\n    var key = Hogan.cacheKey(text, options);\n    var template = this.cache[key];\n\n    if (template) {\n      var partials = template.partials;\n      for (var name in partials) {\n        delete partials[name].instance;\n      }\n      return template;\n    }\n\n    template = this.generate(this.parse(this.scan(text, options.delimiters), text, options), text, options);\n    return this.cache[key] = template;\n  }\n})(typeof exports !== 'undefined' ? exports : Hogan);\n","/*\n *  Copyright 2011 Twitter, Inc.\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nvar Hogan = {};\n\n(function (Hogan) {\n  Hogan.Template = function (codeObj, text, compiler, options) {\n    codeObj = codeObj || {};\n    this.r = codeObj.code || this.r;\n    this.c = compiler;\n    this.options = options || {};\n    this.text = text || '';\n    this.partials = codeObj.partials || {};\n    this.subs = codeObj.subs || {};\n    this.buf = '';\n  }\n\n  Hogan.Template.prototype = {\n    // render: replaced by generated code.\n    r: function (context, partials, indent) { return ''; },\n\n    // variable escaping\n    v: hoganEscape,\n\n    // triple stache\n    t: coerceToString,\n\n    render: function render(context, partials, indent) {\n      return this.ri([context], partials || {}, indent);\n    },\n\n    // render internal -- a hook for overrides that catches partials too\n    ri: function (context, partials, indent) {\n      return this.r(context, partials, indent);\n    },\n\n    // ensurePartial\n    ep: function(symbol, partials) {\n      var partial = this.partials[symbol];\n\n      // check to see that if we've instantiated this partial before\n      var template = partials[partial.name];\n      if (partial.instance && partial.base == template) {\n        return partial.instance;\n      }\n\n      if (typeof template == 'string') {\n        if (!this.c) {\n          throw new Error(\"No compiler available.\");\n        }\n        template = this.c.compile(template, this.options);\n      }\n\n      if (!template) {\n        return null;\n      }\n\n      // We use this to check whether the partials dictionary has changed\n      this.partials[symbol].base = template;\n\n      if (partial.subs) {\n        // Make sure we consider parent template now\n        if (!partials.stackText) partials.stackText = {};\n        for (key in partial.subs) {\n          if (!partials.stackText[key]) {\n            partials.stackText[key] = (this.activeSub !== undefined && partials.stackText[this.activeSub]) ? partials.stackText[this.activeSub] : this.text;\n          }\n        }\n        template = createSpecializedPartial(template, partial.subs, partial.partials,\n          this.stackSubs, this.stackPartials, partials.stackText);\n      }\n      this.partials[symbol].instance = template;\n\n      return template;\n    },\n\n    // tries to find a partial in the current scope and render it\n    rp: function(symbol, context, partials, indent) {\n      var partial = this.ep(symbol, partials);\n      if (!partial) {\n        return '';\n      }\n\n      return partial.ri(context, partials, indent);\n    },\n\n    // render a section\n    rs: function(context, partials, section) {\n      var tail = context[context.length - 1];\n\n      if (!isArray(tail)) {\n        section(context, partials, this);\n        return;\n      }\n\n      for (var i = 0; i < tail.length; i++) {\n        context.push(tail[i]);\n        section(context, partials, this);\n        context.pop();\n      }\n    },\n\n    // maybe start a section\n    s: function(val, ctx, partials, inverted, start, end, tags) {\n      var pass;\n\n      if (isArray(val) && val.length === 0) {\n        return false;\n      }\n\n      if (typeof val == 'function') {\n        val = this.ms(val, ctx, partials, inverted, start, end, tags);\n      }\n\n      pass = !!val;\n\n      if (!inverted && pass && ctx) {\n        ctx.push((typeof val == 'object') ? val : ctx[ctx.length - 1]);\n      }\n\n      return pass;\n    },\n\n    // find values with dotted names\n    d: function(key, ctx, partials, returnFound) {\n      var found,\n          names = key.split('.'),\n          val = this.f(names[0], ctx, partials, returnFound),\n          doModelGet = this.options.modelGet,\n          cx = null;\n\n      if (key === '.' && isArray(ctx[ctx.length - 2])) {\n        val = ctx[ctx.length - 1];\n      } else {\n        for (var i = 1; i < names.length; i++) {\n          found = findInScope(names[i], val, doModelGet);\n          if (found !== undefined) {\n            cx = val;\n            val = found;\n          } else {\n            val = '';\n          }\n        }\n      }\n\n      if (returnFound && !val) {\n        return false;\n      }\n\n      if (!returnFound && typeof val == 'function') {\n        ctx.push(cx);\n        val = this.mv(val, ctx, partials);\n        ctx.pop();\n      }\n\n      return val;\n    },\n\n    // find values with normal names\n    f: function(key, ctx, partials, returnFound) {\n      var val = false,\n          v = null,\n          found = false,\n          doModelGet = this.options.modelGet;\n\n      for (var i = ctx.length - 1; i >= 0; i--) {\n        v = ctx[i];\n        val = findInScope(key, v, doModelGet);\n        if (val !== undefined) {\n          found = true;\n          break;\n        }\n      }\n\n      if (!found) {\n        return (returnFound) ? false : \"\";\n      }\n\n      if (!returnFound && typeof val == 'function') {\n        val = this.mv(val, ctx, partials);\n      }\n\n      return val;\n    },\n\n    // higher order templates\n    ls: function(func, cx, partials, text, tags) {\n      var oldTags = this.options.delimiters;\n\n      this.options.delimiters = tags;\n      this.b(this.ct(coerceToString(func.call(cx, text)), cx, partials));\n      this.options.delimiters = oldTags;\n\n      return false;\n    },\n\n    // compile text\n    ct: function(text, cx, partials) {\n      if (this.options.disableLambda) {\n        throw new Error('Lambda features disabled.');\n      }\n      return this.c.compile(text, this.options).render(cx, partials);\n    },\n\n    // template result buffering\n    b: function(s) { this.buf += s; },\n\n    fl: function() { var r = this.buf; this.buf = ''; return r; },\n\n    // method replace section\n    ms: function(func, ctx, partials, inverted, start, end, tags) {\n      var textSource,\n          cx = ctx[ctx.length - 1],\n          result = func.call(cx);\n\n      if (typeof result == 'function') {\n        if (inverted) {\n          return true;\n        } else {\n          textSource = (this.activeSub && this.subsText && this.subsText[this.activeSub]) ? this.subsText[this.activeSub] : this.text;\n          return this.ls(result, cx, partials, textSource.substring(start, end), tags);\n        }\n      }\n\n      return result;\n    },\n\n    // method replace variable\n    mv: function(func, ctx, partials) {\n      var cx = ctx[ctx.length - 1];\n      var result = func.call(cx);\n\n      if (typeof result == 'function') {\n        return this.ct(coerceToString(result.call(cx)), cx, partials);\n      }\n\n      return result;\n    },\n\n    sub: function(name, context, partials, indent) {\n      var f = this.subs[name];\n      if (f) {\n        this.activeSub = name;\n        f(context, partials, this, indent);\n        this.activeSub = false;\n      }\n    }\n\n  };\n\n  //Find a key in an object\n  function findInScope(key, scope, doModelGet) {\n    var val;\n\n    if (scope && typeof scope == 'object') {\n\n      if (scope[key] !== undefined) {\n        val = scope[key];\n\n      // try lookup with get for backbone or similar model data\n      } else if (doModelGet && scope.get && typeof scope.get == 'function') {\n        val = scope.get(key);\n      }\n    }\n\n    return val;\n  }\n\n  function createSpecializedPartial(instance, subs, partials, stackSubs, stackPartials, stackText) {\n    function PartialTemplate() {};\n    PartialTemplate.prototype = instance;\n    function Substitutions() {};\n    Substitutions.prototype = instance.subs;\n    var key;\n    var partial = new PartialTemplate();\n    partial.subs = new Substitutions();\n    partial.subsText = {};  //hehe. substext.\n    partial.buf = '';\n\n    stackSubs = stackSubs || {};\n    partial.stackSubs = stackSubs;\n    partial.subsText = stackText;\n    for (key in subs) {\n      if (!stackSubs[key]) stackSubs[key] = subs[key];\n    }\n    for (key in stackSubs) {\n      partial.subs[key] = stackSubs[key];\n    }\n\n    stackPartials = stackPartials || {};\n    partial.stackPartials = stackPartials;\n    for (key in partials) {\n      if (!stackPartials[key]) stackPartials[key] = partials[key];\n    }\n    for (key in stackPartials) {\n      partial.partials[key] = stackPartials[key];\n    }\n\n    return partial;\n  }\n\n  var rAmp = /&/g,\n      rLt = /</g,\n      rGt = />/g,\n      rApos = /\\'/g,\n      rQuot = /\\\"/g,\n      hChars = /[&<>\\\"\\']/;\n\n  function coerceToString(val) {\n    return String((val === null || val === undefined) ? '' : val);\n  }\n\n  function hoganEscape(str) {\n    str = coerceToString(str);\n    return hChars.test(str) ?\n      str\n        .replace(rAmp, '&amp;')\n        .replace(rLt, '&lt;')\n        .replace(rGt, '&gt;')\n        .replace(rApos, '&#39;')\n        .replace(rQuot, '&quot;') :\n      str;\n  }\n\n  var isArray = Array.isArray || function(a) {\n    return Object.prototype.toString.call(a) === '[object Array]';\n  };\n\n})(typeof exports !== 'undefined' ? exports : Hogan);\n","/*\n *  Copyright 2011 Twitter, Inc.\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n// This file is for use with Node.js. See dist/ for browser files.\n\nvar Hogan = require('./compiler');\nHogan.Template = require('./template').Template;\nHogan.template = Hogan.Template;\nmodule.exports = Hogan;\n","var n=function(t,s,r,e){var u;s[0]=0;for(var h=1;h<s.length;h++){var p=s[h++],a=s[h]?(s[0]|=p?1:2,r[s[h++]]):s[++h];3===p?e[0]=a:4===p?e[1]=Object.assign(e[1]||{},a):5===p?(e[1]=e[1]||{})[s[++h]]=a:6===p?e[1][s[++h]]+=a+\"\":p?(u=t.apply(a,n(t,a,r,[\"\",null])),e.push(u),a[0]?s[0]|=2:(s[h-2]=0,s[h]=u)):e.push(a)}return e},t=new Map;export default function(s){var r=t.get(this);return r||(r=new Map,t.set(this,r)),(r=n(this,r.get(s)||(r.set(s,r=function(n){for(var t,s,r=1,e=\"\",u=\"\",h=[0],p=function(n){1===r&&(n||(e=e.replace(/^\\s*\\n\\s*|\\s*\\n\\s*$/g,\"\")))?h.push(0,n,e):3===r&&(n||e)?(h.push(3,n,e),r=2):2===r&&\"...\"===e&&n?h.push(4,n,0):2===r&&e&&!n?h.push(5,0,!0,e):r>=5&&((e||!n&&5===r)&&(h.push(r,0,e,s),r=6),n&&(h.push(r,n,0,s),r=6)),e=\"\"},a=0;a<n.length;a++){a&&(1===r&&p(),p(a));for(var l=0;l<n[a].length;l++)t=n[a][l],1===r?\"<\"===t?(p(),h=[h],r=3):e+=t:4===r?\"--\"===e&&\">\"===t?(r=1,e=\"\"):e=t+e[0]:u?t===u?u=\"\":e+=t:'\"'===t||\"'\"===t?u=t:\">\"===t?(p(),r=1):r&&(\"=\"===t?(r=5,s=e,e=\"\"):\"/\"===t&&(r<5||\">\"===n[a][l+1])?(p(),3===r&&(h=h[0]),r=h,(h=h[0]).push(2,0,r),r=0):\" \"===t||\"\\t\"===t||\"\\n\"===t||\"\\r\"===t?(p(),r=2):e+=t),3===r&&\"!--\"===e&&(r=4,h=h[0])}return p(),h}(s)),r),arguments,[])).length>1?r:r[0]}\n","import{h as r,Component as o,render as t}from\"preact\";export{h,render,Component}from\"preact\";import e from\"htm\";var m=e.bind(r);export{m as html};\n","function _extends() {\n  module.exports = _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _extends.apply(this, arguments);\n}\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nmodule.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose.js\");\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nmodule.exports = _objectWithoutProperties, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"parts\", \"highlightedTagName\", \"nonHighlightedTagName\", \"separator\", \"className\", \"classNames\"];\nimport { cx } from '@algolia/ui-components-shared'; // Basic types to allow this file to compile without a JSX implementation.\n// This is a minimal subset of the actual types from the `JSX` namespace.\n\nfunction createHighlightPartComponent(_ref) {\n  var createElement = _ref.createElement;\n  return function HighlightPart(_ref2) {\n    var classNames = _ref2.classNames,\n        children = _ref2.children,\n        highlightedTagName = _ref2.highlightedTagName,\n        isHighlighted = _ref2.isHighlighted,\n        nonHighlightedTagName = _ref2.nonHighlightedTagName;\n    var TagName = isHighlighted ? highlightedTagName : nonHighlightedTagName;\n    return createElement(TagName, {\n      className: isHighlighted ? classNames.highlighted : classNames.nonHighlighted\n    }, children);\n  };\n}\n\nexport function createHighlightComponent(_ref3) {\n  var createElement = _ref3.createElement,\n      Fragment = _ref3.Fragment;\n  var HighlightPart = createHighlightPartComponent({\n    createElement: createElement,\n    Fragment: Fragment\n  });\n  return function Highlight(_ref4) {\n    var parts = _ref4.parts,\n        _ref4$highlightedTagN = _ref4.highlightedTagName,\n        highlightedTagName = _ref4$highlightedTagN === void 0 ? 'mark' : _ref4$highlightedTagN,\n        _ref4$nonHighlightedT = _ref4.nonHighlightedTagName,\n        nonHighlightedTagName = _ref4$nonHighlightedT === void 0 ? 'span' : _ref4$nonHighlightedT,\n        _ref4$separator = _ref4.separator,\n        separator = _ref4$separator === void 0 ? ', ' : _ref4$separator,\n        className = _ref4.className,\n        _ref4$classNames = _ref4.classNames,\n        classNames = _ref4$classNames === void 0 ? {} : _ref4$classNames,\n        props = _objectWithoutProperties(_ref4, _excluded);\n\n    return createElement(\"span\", _extends({}, props, {\n      className: cx(classNames.root, className)\n    }), parts.map(function (part, partIndex) {\n      var isLastPart = partIndex === parts.length - 1;\n      return createElement(Fragment, {\n        key: partIndex\n      }, part.map(function (subPart, subPartIndex) {\n        return createElement(HighlightPart, {\n          key: subPartIndex,\n          classNames: classNames,\n          highlightedTagName: highlightedTagName,\n          nonHighlightedTagName: nonHighlightedTagName,\n          isHighlighted: subPart.isHighlighted\n        }, subPart.value);\n      }), !isLastPart && createElement(\"span\", {\n        className: classNames.separator\n      }, separator));\n    }));\n  };\n}","import { createHighlightComponent } from '@algolia/ui-components-highlight-vdom';\nimport { createElement, Fragment } from 'preact';\n\nexport const InternalHighlight = createHighlightComponent({\n  createElement,\n  Fragment,\n});\n","/** @jsx h */\nimport { cx } from '@algolia/ui-components-shared';\nimport { h } from 'preact';\n\nimport { InternalHighlight } from '../InternalHighlight/InternalHighlight';\n\nimport type {\n  HighlightProps as InternalHighlightProps,\n  HighlightClassNames as InternalHighlightClassNames,\n} from '@algolia/ui-components-highlight-vdom';\n\nexport type HighlightClassNames = InternalHighlightClassNames;\nexport type HighlightProps = Omit<InternalHighlightProps, 'classNames'> & {\n  classNames?: Partial<HighlightClassNames>;\n};\n\nexport function Highlight({ classNames = {}, ...props }: HighlightProps) {\n  return (\n    <InternalHighlight\n      classNames={{\n        root: cx('ais-Highlight', classNames.root),\n        highlighted: cx('ais-Highlight-highlighted', classNames.highlighted),\n        nonHighlighted: cx(\n          'ais-Highlight-nonHighlighted',\n          classNames.nonHighlighted\n        ),\n        separator: cx('ais-Highlight-separator', classNames.separator),\n      }}\n      {...props}\n    />\n  );\n}\n","/** @jsx h */\nimport { h } from 'preact';\n\nimport { Highlight as HighlightUiComponent } from '../../components/Highlight/Highlight';\nimport {\n  getPropertyByPath,\n  unescape,\n  toArray,\n  warning,\n  getHighlightedParts,\n} from '../../lib/utils';\n\nimport type {\n  BaseHit,\n  Hit,\n  HitAttributeHighlightResult,\n  PartialKeys,\n} from '../../types';\nimport type { HighlightProps as HighlightUiComponentProps } from '../../components/Highlight/Highlight';\n\nexport type HighlightProps<THit extends Hit<BaseHit>> = {\n  hit: THit;\n  attribute: keyof THit | string[];\n  cssClasses?: HighlightUiComponentProps['classNames'];\n} & PartialKeys<\n  Omit<HighlightUiComponentProps, 'parts' | 'classNames'>,\n  'highlightedTagName' | 'nonHighlightedTagName' | 'separator'\n>;\n\nexport function Highlight<THit extends Hit<BaseHit>>({\n  hit,\n  attribute,\n  cssClasses,\n  ...props\n}: HighlightProps<THit>) {\n  const property: HitAttributeHighlightResult | HitAttributeHighlightResult[] =\n    getPropertyByPath(hit._highlightResult, attribute as string) || [];\n  const properties = toArray(property);\n\n  warning(\n    Boolean(properties.length),\n    `Could not enable highlight for \"${attribute.toString()}\", will display an empty string.\nPlease check whether this attribute exists and is either searchable or specified in \\`attributesToHighlight\\`.\n\nSee: https://alg.li/highlighting\n`\n  );\n\n  const parts = properties.map(({ value }) =>\n    getHighlightedParts(unescape(value || ''))\n  );\n\n  return (\n    <HighlightUiComponent {...props} parts={parts} classNames={cssClasses} />\n  );\n}\n","/** @jsx h */\nimport { cx } from '@algolia/ui-components-shared';\nimport { h } from 'preact';\n\nimport { InternalHighlight } from '../InternalHighlight/InternalHighlight';\n\nimport type {\n  HighlightProps as InternalHighlightProps,\n  HighlightClassNames as InternalHighlightClassNames,\n} from '@algolia/ui-components-highlight-vdom';\n\nexport type ReverseHighlightClassNames = InternalHighlightClassNames;\nexport type ReverseHighlightProps = Omit<\n  InternalHighlightProps,\n  'classNames'\n> & {\n  classNames?: Partial<ReverseHighlightClassNames>;\n};\n\nexport function ReverseHighlight({\n  classNames = {},\n  ...props\n}: ReverseHighlightProps) {\n  return (\n    <InternalHighlight\n      classNames={{\n        root: cx('ais-ReverseHighlight', classNames.root),\n        highlighted: cx(\n          'ais-ReverseHighlight-highlighted',\n          classNames.highlighted\n        ),\n        nonHighlighted: cx(\n          'ais-ReverseHighlight-nonHighlighted',\n          classNames.nonHighlighted\n        ),\n        separator: cx('ais-ReverseHighlight-separator', classNames.separator),\n      }}\n      {...props}\n    />\n  );\n}\n","/** @jsx h */\nimport { h } from 'preact';\n\nimport { ReverseHighlight as ReverseHighlightUiComponent } from '../../components/ReverseHighlight/ReverseHighlight';\nimport {\n  getPropertyByPath,\n  unescape,\n  toArray,\n  warning,\n  getHighlightedParts,\n} from '../../lib/utils';\n\nimport type {\n  BaseHit,\n  Hit,\n  HitAttributeHighlightResult,\n  PartialKeys,\n} from '../../types';\nimport type { ReverseHighlightProps as ReverseHighlightUiComponentProps } from '../../components/ReverseHighlight/ReverseHighlight';\n\nexport type ReverseHighlightProps<THit extends Hit<BaseHit>> = {\n  hit: THit;\n  attribute: keyof THit | string[];\n  cssClasses?: ReverseHighlightUiComponentProps['classNames'];\n} & PartialKeys<\n  Omit<ReverseHighlightUiComponentProps, 'parts' | 'classNames'>,\n  'highlightedTagName' | 'nonHighlightedTagName' | 'separator'\n>;\n\nexport function ReverseHighlight<THit extends Hit<BaseHit>>({\n  hit,\n  attribute,\n  cssClasses,\n  ...props\n}: ReverseHighlightProps<THit>) {\n  const property: HitAttributeHighlightResult | HitAttributeHighlightResult[] =\n    getPropertyByPath(hit._highlightResult, attribute as string) || [];\n  const properties = toArray(property);\n\n  warning(\n    Boolean(properties.length),\n    `Could not enable highlight for \"${attribute.toString()}\", will display an empty string.\nPlease check whether this attribute exists and is either searchable or specified in \\`attributesToHighlight\\`.\n\nSee: https://alg.li/highlighting\n`\n  );\n\n  const parts = properties.map(({ value }) =>\n    getHighlightedParts(unescape(value || '')).map(\n      ({ isHighlighted, ...rest }) => ({\n        ...rest,\n        isHighlighted: !isHighlighted,\n      })\n    )\n  );\n\n  return (\n    <ReverseHighlightUiComponent\n      {...props}\n      parts={parts}\n      classNames={cssClasses}\n    />\n  );\n}\n","/** @jsx h */\nimport { cx } from '@algolia/ui-components-shared';\nimport { h } from 'preact';\n\nimport { InternalHighlight } from '../InternalHighlight/InternalHighlight';\n\nimport type {\n  HighlightProps as InternalHighlightProps,\n  HighlightClassNames as InternalHighlightClassNames,\n} from '@algolia/ui-components-highlight-vdom';\n\nexport type ReverseSnippetClassNames = InternalHighlightClassNames;\nexport type ReverseSnippetProps = Omit<InternalHighlightProps, 'classNames'> & {\n  classNames?: Partial<ReverseSnippetClassNames>;\n};\n\nexport function ReverseSnippet({\n  classNames = {},\n  ...props\n}: ReverseSnippetProps) {\n  return (\n    <InternalHighlight\n      classNames={{\n        root: cx('ais-ReverseSnippet', classNames.root),\n        highlighted: cx(\n          'ais-ReverseSnippet-highlighted',\n          classNames.highlighted\n        ),\n        nonHighlighted: cx(\n          'ais-ReverseSnippet-nonHighlighted',\n          classNames.nonHighlighted\n        ),\n        separator: cx('ais-ReverseSnippet-separator', classNames.separator),\n      }}\n      {...props}\n    />\n  );\n}\n","/** @jsx h */\nimport { h } from 'preact';\n\nimport { ReverseSnippet as ReverseSnippetUiComponent } from '../../components/ReverseSnippet/ReverseSnippet';\nimport {\n  getPropertyByPath,\n  unescape,\n  toArray,\n  warning,\n  getHighlightedParts,\n} from '../../lib/utils';\n\nimport type {\n  BaseHit,\n  Hit,\n  HitAttributeSnippetResult,\n  PartialKeys,\n} from '../../types';\nimport type { ReverseSnippetProps as ReverseSnippetUiComponentProps } from '../../components/ReverseSnippet/ReverseSnippet';\n\nexport type ReverseSnippetProps<THit extends Hit<BaseHit>> = {\n  hit: THit;\n  attribute: keyof THit | string[];\n  cssClasses?: ReverseSnippetUiComponentProps['classNames'];\n} & PartialKeys<\n  Omit<ReverseSnippetUiComponentProps, 'parts' | 'classNames'>,\n  'highlightedTagName' | 'nonHighlightedTagName' | 'separator'\n>;\n\nexport function ReverseSnippet<THit extends Hit<BaseHit>>({\n  hit,\n  attribute,\n  cssClasses,\n  ...props\n}: ReverseSnippetProps<THit>) {\n  const property: HitAttributeSnippetResult | HitAttributeSnippetResult[] =\n    getPropertyByPath(hit._snippetResult, attribute as string) || [];\n  const properties = toArray(property);\n\n  warning(\n    Boolean(properties.length),\n    `Could not enable snippet for \"${attribute.toString()}\", will display an empty string.\nPlease check whether this attribute exists and is specified in \\`attributesToSnippet\\`.\n\nSee: https://alg.li/highlighting\n`\n  );\n\n  const parts = properties.map(({ value }) =>\n    getHighlightedParts(unescape(value || '')).map(\n      ({ isHighlighted, ...rest }) => ({\n        ...rest,\n        isHighlighted: !isHighlighted,\n      })\n    )\n  );\n\n  return (\n    <ReverseSnippetUiComponent\n      {...props}\n      parts={parts}\n      classNames={cssClasses}\n    />\n  );\n}\n","/** @jsx h */\nimport { cx } from '@algolia/ui-components-shared';\nimport { h } from 'preact';\n\nimport { InternalHighlight } from '../InternalHighlight/InternalHighlight';\n\nimport type {\n  HighlightProps as InternalHighlightProps,\n  HighlightClassNames as InternalHighlightClassNames,\n} from '@algolia/ui-components-highlight-vdom';\n\nexport type SnippetClassNames = InternalHighlightClassNames;\nexport type SnippetProps = Omit<InternalHighlightProps, 'classNames'> & {\n  classNames?: Partial<SnippetClassNames>;\n};\n\nexport function Snippet({ classNames = {}, ...props }: SnippetProps) {\n  return (\n    <InternalHighlight\n      classNames={{\n        root: cx('ais-Snippet', classNames.root),\n        highlighted: cx('ais-Snippet-highlighted', classNames.highlighted),\n        nonHighlighted: cx(\n          'ais-Snippet-nonHighlighted',\n          classNames.nonHighlighted\n        ),\n        separator: cx('ais-Snippet-separator', classNames.separator),\n      }}\n      {...props}\n    />\n  );\n}\n","/** @jsx h */\nimport { h } from 'preact';\n\nimport { Snippet as SnippetUiComponent } from '../../components/Snippet/Snippet';\nimport {\n  getPropertyByPath,\n  unescape,\n  toArray,\n  warning,\n  getHighlightedParts,\n} from '../../lib/utils';\n\nimport type {\n  BaseHit,\n  Hit,\n  HitAttributeSnippetResult,\n  PartialKeys,\n} from '../../types';\nimport type { SnippetProps as SnippetUiComponentProps } from '../../components/Snippet/Snippet';\n\nexport type SnippetProps<THit extends Hit<BaseHit>> = {\n  hit: THit;\n  attribute: keyof THit | string[];\n  cssClasses?: SnippetUiComponentProps['classNames'];\n} & PartialKeys<\n  Omit<SnippetUiComponentProps, 'parts' | 'classNames'>,\n  'highlightedTagName' | 'nonHighlightedTagName' | 'separator'\n>;\n\nexport function Snippet<THit extends Hit<BaseHit>>({\n  hit,\n  attribute,\n  cssClasses,\n  ...props\n}: SnippetProps<THit>) {\n  const property: HitAttributeSnippetResult | HitAttributeSnippetResult[] =\n    getPropertyByPath(hit._snippetResult, attribute as string) || [];\n  const properties = toArray(property);\n\n  warning(\n    Boolean(properties.length),\n    `Could not enable snippet for \"${attribute.toString()}\", will display an empty string.\nPlease check whether this attribute exists and is specified in \\`attributesToSnippet\\`.\n\nSee: https://alg.li/highlighting\n`\n  );\n\n  const parts = properties.map(({ value }) =>\n    getHighlightedParts(unescape(value || ''))\n  );\n\n  return (\n    <SnippetUiComponent {...props} parts={parts} classNames={cssClasses} />\n  );\n}\n","import type { HoganOptions, Template } from 'hogan.js';\nimport hogan from 'hogan.js';\nimport { html } from 'htm/preact';\nimport {\n  Highlight,\n  ReverseHighlight,\n  ReverseSnippet,\n  Snippet,\n} from '../../helpers/components';\nimport type { Templates, HoganHelpers, TemplateParams } from '../../types';\nimport type {\n  BindEventForHits,\n  SendEventForHits,\n} from '../utils/createSendEventForHits';\n\ntype TransformedHoganHelpers = {\n  [helper: string]: () => (text: string) => string;\n};\n\n// We add all our template helper methods to the template as lambdas. Note\n// that lambdas in Mustache are supposed to accept a second argument of\n// `render` to get the rendered value, not the literal `{{value}}`. But\n// this is currently broken (see https://github.com/twitter/hogan.js/issues/222).\nfunction transformHelpersToHogan(\n  helpers: HoganHelpers = {},\n  compileOptions?: HoganOptions,\n  data?: Record<string, any>\n) {\n  return Object.keys(helpers).reduce<TransformedHoganHelpers>(\n    (acc, helperKey) => ({\n      ...acc,\n      [helperKey]() {\n        return (text) => {\n          const render = (value: string) =>\n            (hogan.compile(value, compileOptions) as Template).render(this);\n\n          return helpers[helperKey].call(data, text, render);\n        };\n      },\n    }),\n    {}\n  );\n}\n\nexport function renderTemplate({\n  templates,\n  templateKey,\n  compileOptions,\n  helpers,\n  data,\n  bindEvent,\n  sendEvent,\n}: {\n  templates: Templates;\n  templateKey: string;\n  compileOptions?: HoganOptions;\n  helpers?: HoganHelpers;\n  data?: Record<string, any>;\n  bindEvent?: BindEventForHits;\n  sendEvent?: SendEventForHits;\n}) {\n  const template = templates[templateKey];\n\n  if (typeof template !== 'string' && typeof template !== 'function') {\n    throw new Error(\n      `Template must be 'string' or 'function', was '${typeof template}' (key: ${templateKey})`\n    );\n  }\n\n  if (typeof template === 'function') {\n    // @MAJOR no longer pass bindEvent when string templates are removed\n    const params = (bindEvent || {}) as TemplateParams;\n\n    params.html = html;\n    params.sendEvent = sendEvent;\n    params.components = {\n      Highlight,\n      ReverseHighlight,\n      Snippet,\n      ReverseSnippet,\n    };\n\n    return template(data, params);\n  }\n\n  const transformedHelpers = transformHelpersToHogan(\n    helpers,\n    compileOptions,\n    data\n  );\n\n  return (hogan.compile(template, compileOptions) as Template)\n    .render({\n      ...data,\n      helpers: transformedHelpers,\n    })\n    .replace(/[ \\n\\r\\t\\f\\xA0]+/g, (spaces) =>\n      spaces.replace(/(^|\\xA0+)[^\\xA0]+/g, '$1 ')\n    )\n    .trim();\n}\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport CurrentRefinements from '../../components/CurrentRefinements/CurrentRefinements';\nimport type {\n  CurrentRefinementsConnectorParams,\n  CurrentRefinementsRenderState,\n  CurrentRefinementsWidgetDescription,\n} from '../../connectors/current-refinements/connectCurrentRefinements';\nimport connectCurrentRefinements from '../../connectors/current-refinements/connectCurrentRefinements';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport type { ComponentCSSClasses, Renderer, WidgetFactory } from '../../types';\n\nexport type CurrentRefinementsCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n\n  /**\n   * CSS class to add to the root element when no refinements.\n   */\n  noRefinementRoot: string | string[];\n\n  /**\n   * CSS class to add to the list element.\n   */\n  list: string | string[];\n\n  /**\n   * CSS class to add to the each item element.\n   */\n  item: string | string[];\n\n  /**\n   * CSS class to add to the label element.\n   */\n  label: string | string[];\n\n  /**\n   * CSS class to add to the category element.\n   */\n  category: string | string[];\n\n  /**\n   * CSS class to add to the categoryLabel element.\n   */\n  categoryLabel: string | string[];\n\n  /**\n   * CSS class to add to the delete element.\n   */\n  delete: string | string[];\n}>;\n\nexport type CurrentRefinementsWidgetParams = {\n  /**\n   * The CSS Selector or `HTMLElement` to insert the widget into.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * The CSS classes to override.\n   */\n  cssClasses?: CurrentRefinementsCSSClasses;\n};\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'current-refinements',\n});\nconst suit = component('CurrentRefinements');\n\nconst renderer: Renderer<\n  CurrentRefinementsRenderState,\n  Partial<CurrentRefinementsWidgetParams>\n> = ({ items, widgetParams, canRefine }, isFirstRender) => {\n  if (isFirstRender) {\n    return;\n  }\n\n  const { container, cssClasses } = widgetParams as {\n    container: HTMLElement;\n    cssClasses: ComponentCSSClasses<CurrentRefinementsCSSClasses>;\n  };\n\n  render(\n    <CurrentRefinements\n      cssClasses={cssClasses}\n      items={items}\n      canRefine={canRefine}\n    />,\n    container\n  );\n};\n\nexport type CurrentRefinementsWidget = WidgetFactory<\n  CurrentRefinementsWidgetDescription & {\n    $$widgetType: 'ais.currentRefinements';\n  },\n  CurrentRefinementsConnectorParams,\n  CurrentRefinementsWidgetParams\n>;\n\nconst currentRefinements: CurrentRefinementsWidget =\n  function currentRefinements(widgetParams) {\n    const {\n      container,\n      includedAttributes,\n      excludedAttributes,\n      cssClasses: userCssClasses = {},\n      transformItems,\n    } = widgetParams || {};\n\n    if (!container) {\n      throw new Error(withUsage('The `container` option is required.'));\n    }\n\n    const containerNode = getContainerNode(container);\n    const cssClasses: CurrentRefinementsCSSClasses = {\n      root: cx(suit(), userCssClasses.root),\n      noRefinementRoot: cx(\n        suit({ modifierName: 'noRefinement' }),\n        userCssClasses.noRefinementRoot\n      ),\n      list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n      item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n      label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n      category: cx(\n        suit({ descendantName: 'category' }),\n        userCssClasses.category\n      ),\n      categoryLabel: cx(\n        suit({ descendantName: 'categoryLabel' }),\n        userCssClasses.categoryLabel\n      ),\n      delete: cx(suit({ descendantName: 'delete' }), userCssClasses.delete),\n    };\n\n    const makeWidget =\n      connectCurrentRefinements<CurrentRefinementsWidgetParams>(renderer, () =>\n        render(null, containerNode)\n      );\n\n    return {\n      ...makeWidget({\n        container: containerNode,\n        cssClasses,\n        includedAttributes,\n        excludedAttributes,\n        transformItems,\n      }),\n      $$widgetType: 'ais.currentRefinements',\n    };\n  };\n\nexport default currentRefinements;\n","/** @jsx h */\n\nimport type { JSX } from 'preact';\nimport { h, Component } from 'preact';\nimport { warning, isEqual } from '../../lib/utils';\nimport { renderTemplate } from '../../lib/templating';\n\nimport type { BindEventForHits, SendEventForHits } from '../../lib/utils';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { Templates } from '../../types';\n\nconst defaultProps = {\n  data: {},\n  rootTagName: 'div',\n  useCustomCompileOptions: {},\n  templates: {},\n  templatesConfig: {},\n};\n\nexport type TemplateProps = {\n  data?: Record<string, any>;\n  rootProps?: Record<string, any>;\n  rootTagName?: keyof JSX.IntrinsicElements;\n  templateKey: string;\n  bindEvent?: BindEventForHits;\n  sendEvent?: SendEventForHits;\n} & PreparedTemplateProps<Templates> &\n  Readonly<typeof defaultProps>;\n\n// @TODO: Template should be a generic and receive TData to pass to Templates (to avoid TTemplateData to be set as `any`)\nclass Template extends Component<TemplateProps> {\n  public static readonly defaultProps = defaultProps;\n\n  public shouldComponentUpdate(nextProps: TemplateProps) {\n    return (\n      !isEqual(this.props.data, nextProps.data) ||\n      this.props.templateKey !== nextProps.templateKey ||\n      !isEqual(this.props.rootProps, nextProps.rootProps)\n    );\n  }\n\n  public render() {\n    warning(\n      Object.keys(this.props.templates).every(\n        (key) => typeof this.props.templates[key] === 'function'\n      ),\n      `Hogan.js and string-based templates are deprecated and will not be supported in InstantSearch.js 5.x.\n\nYou can replace them with function-form templates and use either the provided \\`html\\` function or JSX templates.\n\nSee: https://www.algolia.com/doc/guides/building-search-ui/upgrade-guides/js/#upgrade-templates`\n    );\n\n    const RootTagName = this.props.rootTagName;\n\n    const useCustomCompileOptions =\n      this.props.useCustomCompileOptions[this.props.templateKey];\n    const compileOptions = useCustomCompileOptions\n      ? this.props.templatesConfig.compileOptions\n      : {};\n\n    const content = renderTemplate({\n      templates: this.props.templates,\n      templateKey: this.props.templateKey,\n      compileOptions,\n      helpers: this.props.templatesConfig.helpers,\n      data: this.props.data,\n      bindEvent: this.props.bindEvent,\n      sendEvent: this.props.sendEvent,\n    });\n\n    if (content === null) {\n      // Adds a noscript to the DOM but virtual DOM is null\n      // See http://facebook.github.io/react/docs/component-specs.html#render\n      return null;\n    }\n\n    if (typeof content === 'object') {\n      return <RootTagName {...this.props.rootProps}>{content}</RootTagName>;\n    }\n\n    return (\n      <RootTagName\n        {...this.props.rootProps}\n        dangerouslySetInnerHTML={{ __html: content }}\n      />\n    );\n  }\n}\n\nexport default Template;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport Template from '../Template/Template';\nimport type {\n  BreadcrumbCSSClasses,\n  BreadcrumbTemplates,\n} from '../../widgets/breadcrumb/breadcrumb';\nimport type { ComponentCSSClasses } from '../../types';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { BreadcrumbConnectorParamsItem } from '../../connectors/breadcrumb/connectBreadcrumb';\n\nexport type BreadcrumbComponentCSSClasses =\n  ComponentCSSClasses<BreadcrumbCSSClasses>;\n\nexport type BreadcrumbComponentTemplates = Required<BreadcrumbTemplates>;\n\nexport type BreadcrumbProps = {\n  items: BreadcrumbConnectorParamsItem[];\n  cssClasses: BreadcrumbComponentCSSClasses;\n  templateProps: PreparedTemplateProps<BreadcrumbComponentTemplates>;\n  createURL(value?: string | null): string;\n  refine(value?: string | null): void;\n  canRefine?: boolean;\n};\n\nconst Breadcrumb = ({\n  items,\n  cssClasses,\n  templateProps,\n  createURL,\n  refine,\n}: BreadcrumbProps) => (\n  <div\n    className={cx(\n      cssClasses.root,\n      items.length === 0 && cssClasses.noRefinementRoot\n    )}\n  >\n    <ul className={cssClasses.list}>\n      <li\n        className={cx(\n          cssClasses.item,\n          items.length === 0 && cssClasses.selectedItem\n        )}\n      >\n        <Template\n          {...templateProps}\n          templateKey=\"home\"\n          rootTagName=\"a\"\n          rootProps={{\n            className: cssClasses.link,\n            href: createURL(undefined),\n            onClick: (event: MouseEvent) => {\n              event.preventDefault();\n              refine(undefined);\n            },\n          }}\n        />\n      </li>\n\n      {items.map((item, idx) => {\n        const isLast = idx === items.length - 1;\n\n        return (\n          <li\n            key={item.label + idx}\n            className={cx(cssClasses.item, isLast && cssClasses.selectedItem)}\n          >\n            <Template\n              {...templateProps}\n              templateKey=\"separator\"\n              rootTagName=\"span\"\n              rootProps={{\n                className: cssClasses.separator,\n                'aria-hidden': true,\n              }}\n            />\n            {isLast ? (\n              item.label\n            ) : (\n              <a\n                className={cssClasses.link}\n                href={createURL(item.value)}\n                onClick={(event) => {\n                  event.preventDefault();\n                  refine(item.value);\n                }}\n              >\n                {item.label}\n              </a>\n            )}\n          </li>\n        );\n      })}\n    </ul>\n  </div>\n);\n\nexport default Breadcrumb;\n","import type { BreadcrumbComponentTemplates } from '../../components/Breadcrumb/Breadcrumb';\n\nconst defaultTemplates: BreadcrumbComponentTemplates = {\n  home() {\n    return 'Home';\n  },\n  separator() {\n    return '>';\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport type {\n  BreadcrumbComponentCSSClasses,\n  BreadcrumbComponentTemplates,\n} from '../../components/Breadcrumb/Breadcrumb';\nimport Breadcrumb from '../../components/Breadcrumb/Breadcrumb';\nimport type {\n  BreadcrumbWidgetDescription,\n  BreadcrumbConnectorParams,\n  BreadcrumbRenderState,\n} from '../../connectors/breadcrumb/connectBreadcrumb';\nimport connectBreadcrumb from '../../connectors/breadcrumb/connectBreadcrumb';\nimport defaultTemplates from './defaultTemplates';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport { component } from '../../lib/suit';\nimport type { WidgetFactory, Template, Renderer } from '../../types';\nimport type { PreparedTemplateProps } from '../../lib/templating';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'breadcrumb' });\nconst suit = component('Breadcrumb');\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    renderState,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: BreadcrumbComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<BreadcrumbComponentTemplates>;\n    };\n    templates: BreadcrumbTemplates;\n  }): Renderer<BreadcrumbRenderState, Partial<BreadcrumbWidgetParams>> =>\n  (\n    { canRefine, createURL, instantSearchInstance, items, refine },\n    isFirstRendering\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n\n      return;\n    }\n\n    render(\n      <Breadcrumb\n        canRefine={canRefine}\n        cssClasses={cssClasses}\n        createURL={createURL}\n        items={items}\n        refine={refine}\n        templateProps={renderState.templateProps!}\n      />,\n      containerNode\n    );\n  };\n\nexport type BreadcrumbCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element of the widget.\n   */\n  root: string | string[];\n\n  /**\n   * CSS class to add to the root element of the widget if there are no refinements.\n   */\n  noRefinementRoot: string | string[];\n\n  /**\n   * CSS class to add to the list element.\n   */\n  list: string | string[];\n\n  /**\n   * CSS class to add to the items of the list. The items contains the link and the separator.\n   */\n  item: string | string[];\n\n  /**\n   * CSS class to add to the selected item in the list: the last one or the home if there are no refinements.\n   */\n  selectedItem: string | string[];\n\n  /**\n   * CSS class to add to the separator.\n   */\n  separator: string | string[];\n\n  /**\n   * CSS class to add to the links in the items.\n   */\n  link: string | string[];\n}>;\n\nexport type BreadcrumbTemplates = Partial<{\n  /**\n   * Label of the breadcrumb's first element.\n   */\n  home: Template;\n\n  /**\n   * Symbol used to separate the elements of the breadcrumb.\n   */\n  separator: Template;\n}>;\n\nexport type BreadcrumbWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: BreadcrumbTemplates;\n\n  /**\n   * CSS classes to add to the wrapping elements.\n   */\n  cssClasses?: BreadcrumbCSSClasses;\n};\n\nexport type BreadcrumbWidget = WidgetFactory<\n  BreadcrumbWidgetDescription & { $$widgetType: 'ais.breadcrumb' },\n  BreadcrumbConnectorParams,\n  BreadcrumbWidgetParams\n>;\n\nconst breadcrumb: BreadcrumbWidget = function breadcrumb(widgetParams) {\n  const {\n    container,\n    attributes,\n    separator,\n    rootPath,\n    transformItems,\n    templates = {},\n    cssClasses: userCssClasses = {},\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n    selectedItem: cx(\n      suit({ descendantName: 'item', modifierName: 'selected' }),\n      userCssClasses.selectedItem\n    ),\n    separator: cx(\n      suit({ descendantName: 'separator' }),\n      userCssClasses.separator\n    ),\n    link: cx(suit({ descendantName: 'link' }), userCssClasses.link),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectBreadcrumb(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ attributes, separator, rootPath, transformItems }),\n    $$widgetType: 'ais.breadcrumb',\n  };\n};\n\nexport default breadcrumb;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport Template from '../Template/Template';\nimport type { ClearRefinementsRenderState } from '../../connectors/clear-refinements/connectClearRefinements';\nimport type {\n  ClearRefinementsCSSClasses,\n  ClearRefinementsTemplates,\n} from '../../widgets/clear-refinements/clear-refinements';\nimport type { ComponentCSSClasses } from '../../types';\nimport type { PreparedTemplateProps } from '../../lib/templating';\n\nexport type ClearRefinementsComponentCSSClasses =\n  ComponentCSSClasses<ClearRefinementsCSSClasses>;\n\nexport type ClearRefinementsComponentTemplates =\n  Required<ClearRefinementsTemplates>;\n\nexport type ClearRefinementsProps = {\n  refine: ClearRefinementsRenderState['refine'];\n  cssClasses: ClearRefinementsComponentCSSClasses;\n  hasRefinements: ClearRefinementsRenderState['hasRefinements'];\n  templateProps: PreparedTemplateProps<ClearRefinementsComponentTemplates>;\n};\n\nconst ClearRefinements = ({\n  hasRefinements,\n  refine,\n  cssClasses,\n  templateProps,\n}: ClearRefinementsProps) => (\n  <div className={cssClasses.root}>\n    <Template\n      {...templateProps}\n      templateKey=\"resetLabel\"\n      rootTagName=\"button\"\n      rootProps={{\n        className: cx(\n          cssClasses.button,\n          !hasRefinements && cssClasses.disabledButton\n        ),\n        onClick: refine,\n        disabled: !hasRefinements,\n      }}\n      data={{ hasRefinements }}\n    />\n  </div>\n);\n\nexport default ClearRefinements;\n","import type { ClearRefinementsComponentTemplates } from '../../components/ClearRefinements/ClearRefinements';\n\nconst defaultTemplates: ClearRefinementsComponentTemplates = {\n  resetLabel() {\n    return 'Clear refinements';\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport type {\n  ClearRefinementsComponentCSSClasses,\n  ClearRefinementsComponentTemplates,\n} from '../../components/ClearRefinements/ClearRefinements';\nimport ClearRefinements from '../../components/ClearRefinements/ClearRefinements';\nimport { cx } from '@algolia/ui-components-shared';\nimport type {\n  ClearRefinementsConnectorParams,\n  ClearRefinementsRenderState,\n  ClearRefinementsWidgetDescription,\n} from '../../connectors/clear-refinements/connectClearRefinements';\nimport connectClearRefinements from '../../connectors/clear-refinements/connectClearRefinements';\nimport defaultTemplates from './defaultTemplates';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport { component } from '../../lib/suit';\nimport type { WidgetFactory, Template, Renderer } from '../../types';\nimport type { PreparedTemplateProps } from '../../lib/templating';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'clear-refinements',\n});\nconst suit = component('ClearRefinements');\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    renderState,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: ClearRefinementsComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<ClearRefinementsComponentTemplates>;\n    };\n    templates: ClearRefinementsTemplates;\n  }): Renderer<\n    ClearRefinementsRenderState,\n    Partial<ClearRefinementsWidgetParams>\n  > =>\n  ({ refine, canRefine, instantSearchInstance }, isFirstRendering) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n      return;\n    }\n\n    render(\n      <ClearRefinements\n        refine={refine}\n        cssClasses={cssClasses}\n        hasRefinements={canRefine}\n        templateProps={renderState.templateProps!}\n      />,\n      containerNode\n    );\n  };\n\nexport type ClearRefinementsCSSClasses = Partial<{\n  /**\n   * CSS class to add to the wrapper element.\n   */\n  root: string | string[];\n\n  /**\n   * CSS class to add to the button of the widget.\n   */\n  button: string | string[];\n\n  /**\n   * CSS class to add to the button when there are no refinements.\n   */\n  disabledButton: string | string[];\n}>;\n\nexport type ClearRefinementsTemplates = Partial<{\n  /**\n   * Template for the content of the button\n   */\n  resetLabel: Template<{ hasRefinements: boolean }>;\n}>;\n\nexport type ClearRefinementsWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: ClearRefinementsTemplates;\n\n  /**\n   * CSS classes to be added.\n   */\n  cssClasses?: ClearRefinementsCSSClasses;\n};\n\nexport type ClearRefinementsWidget = WidgetFactory<\n  ClearRefinementsWidgetDescription & { $$widgetType: 'ais.clearRefinements' },\n  ClearRefinementsConnectorParams,\n  ClearRefinementsWidgetParams\n>;\n\nconst clearRefinements: ClearRefinementsWidget = (widgetParams) => {\n  const {\n    container,\n    templates = {},\n    includedAttributes,\n    excludedAttributes,\n    transformItems,\n    cssClasses: userCssClasses = {},\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    button: cx(suit({ descendantName: 'button' }), userCssClasses.button),\n    disabledButton: cx(\n      suit({ descendantName: 'button', modifierName: 'disabled' }),\n      userCssClasses.disabledButton\n    ),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectClearRefinements(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      includedAttributes,\n      excludedAttributes,\n      transformItems,\n    }),\n    $$widgetType: 'ais.clearRefinements',\n  };\n};\n\nexport default clearRefinements;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport { isSpecialClick, capitalize } from '../../lib/utils';\nimport type {\n  CurrentRefinementsConnectorParamsItem,\n  CurrentRefinementsConnectorParamsRefinement,\n} from '../../connectors/current-refinements/connectCurrentRefinements';\nimport type { CurrentRefinementsCSSClasses } from '../../widgets/current-refinements/current-refinements';\nimport type { ComponentCSSClasses } from '../../types';\n\nexport type CurrentRefinementsComponentCSSClasses =\n  ComponentCSSClasses<CurrentRefinementsCSSClasses>;\n\nexport type CurrentRefinementsProps = {\n  items: CurrentRefinementsConnectorParamsItem[];\n  cssClasses: CurrentRefinementsComponentCSSClasses;\n  canRefine: boolean;\n};\n\nconst createItemKey = ({\n  attribute,\n  value,\n  type,\n  operator,\n}: CurrentRefinementsConnectorParamsRefinement): string =>\n  [attribute, type, value, operator]\n    .map((key) => key)\n    .filter(Boolean)\n    .join(':');\n\nconst handleClick = (callback: () => void) => (event: any) => {\n  if (isSpecialClick(event)) {\n    return;\n  }\n\n  event.preventDefault();\n  callback();\n};\n\nconst CurrentRefinements = ({\n  items,\n  cssClasses,\n  canRefine,\n}: CurrentRefinementsProps) => (\n  <div\n    className={cx(cssClasses.root, !canRefine && cssClasses.noRefinementRoot)}\n  >\n    <ul className={cssClasses.list}>\n      {items.map((item, index) => (\n        <li\n          key={`${item.indexName}-${item.attribute}-${index}`}\n          className={cssClasses.item}\n        >\n          <span className={cssClasses.label}>{capitalize(item.label)}:</span>\n\n          {item.refinements.map((refinement) => (\n            <span\n              key={createItemKey(refinement)}\n              className={cssClasses.category}\n            >\n              <span className={cssClasses.categoryLabel}>\n                {refinement.attribute === 'query' ? (\n                  <q>{refinement.label}</q>\n                ) : (\n                  refinement.label\n                )}\n              </span>\n\n              <button\n                className={cssClasses.delete}\n                onClick={handleClick(item.refine.bind(null, refinement))}\n              >\n                ✕\n              </button>\n            </span>\n          ))}\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nexport default CurrentRefinements;\n","export function capitalize(text: string): string {\n  return text.toString().charAt(0).toUpperCase() + text.toString().slice(1);\n}\n","import type { AnswersComponentTemplates } from '../../components/Answers/Answers';\n\nconst defaultTemplates: AnswersComponentTemplates = {\n  header() {\n    return '';\n  },\n  loader() {\n    return '';\n  },\n  item(item) {\n    return JSON.stringify(item);\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport Template from '../Template/Template';\nimport type {\n  AnswersCSSClasses,\n  AnswersTemplates,\n} from '../../widgets/answers/answers';\nimport type { ComponentCSSClasses, Hit } from '../../types';\n\nexport type AnswersComponentCSSClasses = ComponentCSSClasses<AnswersCSSClasses>;\n\nexport type AnswersComponentTemplates = Required<AnswersTemplates>;\n\nexport type AnswersProps = {\n  hits: Hit[];\n  isLoading: boolean;\n  cssClasses: AnswersComponentCSSClasses;\n  templateProps: {\n    [key: string]: any;\n    templates: AnswersComponentTemplates;\n  };\n};\n\nconst Answers = ({\n  hits,\n  isLoading,\n  cssClasses,\n  templateProps,\n}: AnswersProps) => (\n  <div\n    className={cx(cssClasses.root, hits.length === 0 && cssClasses.emptyRoot)}\n  >\n    <Template\n      {...templateProps}\n      templateKey=\"header\"\n      rootProps={{ className: cssClasses.header }}\n      data={{\n        hits,\n        isLoading,\n      }}\n    />\n    {isLoading ? (\n      <Template\n        {...templateProps}\n        templateKey=\"loader\"\n        rootProps={{ className: cssClasses.loader }}\n      />\n    ) : (\n      <ul className={cssClasses.list}>\n        {hits.map((hit, position) => (\n          <Template\n            {...templateProps}\n            templateKey=\"item\"\n            rootTagName=\"li\"\n            rootProps={{ className: cssClasses.item }}\n            key={hit.objectID}\n            data={{\n              ...hit,\n              __hitIndex: position,\n            }}\n          />\n        ))}\n      </ul>\n    )}\n  </div>\n);\n\nexport default Answers;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport type { WidgetFactory, Template, Hit, Renderer } from '../../types';\nimport defaultTemplates from './defaultTemplates';\nimport {\n  createDocumentationMessageGenerator,\n  getContainerNode,\n} from '../../lib/utils';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport { component } from '../../lib/suit';\nimport type {\n  AnswersComponentCSSClasses,\n  AnswersComponentTemplates,\n} from '../../components/Answers/Answers';\nimport Answers from '../../components/Answers/Answers';\nimport type {\n  AnswersRenderState,\n  AnswersConnectorParams,\n  AnswersWidgetDescription,\n} from '../../connectors/answers/connectAnswers';\nimport connectAnswers from '../../connectors/answers/connectAnswers';\nimport type { PreparedTemplateProps } from '../../lib/templating';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'answers' });\nconst suit = component('Answers');\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    renderState,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: AnswersComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<AnswersComponentTemplates>;\n    };\n    templates: AnswersTemplates;\n  }): Renderer<AnswersRenderState, Partial<AnswersWidgetParams>> =>\n  ({ hits, isLoading, instantSearchInstance }, isFirstRendering) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n      return;\n    }\n\n    render(\n      <Answers\n        cssClasses={cssClasses}\n        hits={hits}\n        isLoading={isLoading}\n        templateProps={renderState.templateProps!}\n      />,\n      containerNode\n    );\n  };\n\nexport type AnswersTemplates = Partial<{\n  /**\n   * Template to use for the header. This template will receive an object containing `hits` and `isLoading`.\n   */\n  header: Template<{\n    hits: Hit[];\n    isLoading: boolean;\n  }>;\n\n  /**\n   * Template to use for the loader.\n   */\n  loader: Template;\n\n  /**\n   * Template to use for each result. This template will receive an object containing a single record.\n   */\n  item: Template<Hit>;\n}>;\n\nexport type AnswersCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element of the widget.\n   */\n  root: string | string[];\n\n  /**\n   * CSS class to add to the wrapping element when no results.\n   */\n  emptyRoot: string | string[];\n\n  /**\n   * CSS classes to add to the header.\n   */\n  header: string | string[];\n\n  /**\n   * CSS classes to add to the loader.\n   */\n  loader: string | string[];\n\n  /**\n   * CSS class to add to the list of results.\n   */\n  list: string | string[];\n\n  /**\n   * CSS class to add to each result.\n   */\n  item: string | string[];\n}>;\n\nexport type AnswersWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * The templates to use for the widget.\n   */\n  templates?: AnswersTemplates;\n\n  /**\n   * The CSS classes to override.\n   */\n  cssClasses?: AnswersCSSClasses;\n};\n\nexport type AnswersWidget = WidgetFactory<\n  AnswersWidgetDescription & { $$widgetType: 'ais.answers' },\n  AnswersConnectorParams,\n  AnswersWidgetParams\n>;\n\nconst answersWidget: AnswersWidget = (widgetParams) => {\n  const {\n    container,\n    attributesForPrediction,\n    queryLanguages,\n    nbHits,\n    searchDebounceTime,\n    renderDebounceTime,\n    escapeHTML,\n    extraParameters,\n    templates = {},\n    cssClasses: userCssClasses = {},\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    emptyRoot: cx(suit({ modifierName: 'empty' }), userCssClasses.emptyRoot),\n    header: cx(suit({ descendantName: 'header' }), userCssClasses.header),\n    loader: cx(suit({ descendantName: 'loader' }), userCssClasses.loader),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    templates,\n    renderState: {},\n  });\n\n  const makeWidget = connectAnswers(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      attributesForPrediction,\n      queryLanguages,\n      nbHits,\n      searchDebounceTime,\n      renderDebounceTime,\n      escapeHTML,\n      extraParameters,\n    }),\n    $$widgetType: 'ais.answers',\n  };\n};\n\nexport default answersWidget;\n","import type {\n  DynamicWidgetsConnectorParams,\n  DynamicWidgetsWidgetDescription,\n} from '../../connectors/dynamic-widgets/connectDynamicWidgets';\nimport connectDynamicWidgets from '../../connectors/dynamic-widgets/connectDynamicWidgets';\nimport { component } from '../../lib/suit';\nimport {\n  createDocumentationMessageGenerator,\n  getContainerNode,\n  getWidgetAttribute,\n} from '../../lib/utils';\nimport type { Widget, WidgetFactory } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'dynamic-widgets',\n});\nconst suit = component('DynamicWidgets');\n\nexport type DynamicWidgetsWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * An array of widget creator functions, displayed in the order defined by\n   * `facetOrdering`.\n   */\n  widgets: Array<(container: HTMLElement) => Widget>;\n\n  /**\n   * Function to return a fallback widget when an attribute isn't found in\n   * `widgets`.\n   */\n  fallbackWidget?(args: {\n    /** The attribute name to create a widget for. */\n    attribute: string;\n    /** CSS Selector or HTMLElement to insert the widget */\n    container: HTMLElement;\n  }): Widget;\n};\n\nexport type DynamicWidgetsWidget = WidgetFactory<\n  DynamicWidgetsWidgetDescription & { $$widgetType: 'ais.dynamicWidgets' },\n  Omit<DynamicWidgetsConnectorParams, 'widgets' | 'fallbackWidget'>,\n  DynamicWidgetsWidgetParams\n>;\n\nfunction createContainer(rootContainer: HTMLElement) {\n  const container = document.createElement('div');\n  container.className = suit({ descendantName: 'widget' });\n\n  rootContainer.appendChild(container);\n\n  return container;\n}\n\nconst dynamicWidgets: DynamicWidgetsWidget = function dynamicWidgets(\n  widgetParams\n) {\n  const {\n    container: containerSelector,\n    widgets,\n    fallbackWidget,\n    ...otherWidgetParams\n  } = widgetParams || {};\n\n  if (!containerSelector) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  if (\n    !(\n      widgets &&\n      Array.isArray(widgets) &&\n      widgets.every((widget) => typeof widget === 'function')\n    )\n  ) {\n    throw new Error(\n      withUsage('The `widgets` option expects an array of callbacks.')\n    );\n  }\n\n  const userContainer = getContainerNode(containerSelector);\n  const rootContainer = document.createElement('div');\n  rootContainer.className = suit();\n\n  const containers = new Map<string, HTMLElement>();\n  const connectorWidgets: Widget[] = [];\n\n  const makeWidget = connectDynamicWidgets(\n    ({ attributesToRender }, isFirstRender) => {\n      if (isFirstRender) {\n        userContainer.appendChild(rootContainer);\n      }\n\n      attributesToRender.forEach((attribute) => {\n        if (!containers.has(attribute)) {\n          return;\n        }\n        const container = containers.get(attribute)!;\n        rootContainer.appendChild(container);\n      });\n    },\n    () => {\n      userContainer.removeChild(rootContainer);\n    }\n  );\n\n  const widget = makeWidget({\n    ...otherWidgetParams,\n    widgets: connectorWidgets,\n    fallbackWidget:\n      typeof fallbackWidget === 'function'\n        ? ({ attribute }) => {\n            const container = createContainer(rootContainer);\n            containers.set(attribute, container);\n            return fallbackWidget({ attribute, container });\n          }\n        : undefined,\n  });\n\n  return {\n    ...widget,\n    init(initOptions) {\n      widgets.forEach((cb) => {\n        const container = createContainer(rootContainer);\n\n        const childWidget = cb(container);\n        const attribute = getWidgetAttribute(childWidget, initOptions);\n\n        containers.set(attribute, container);\n        connectorWidgets.push(childWidget);\n      });\n\n      widget.init!(initOptions);\n    },\n    $$widgetType: 'ais.dynamicWidgets',\n  };\n};\nexport default dynamicWidgets;\n","/** @jsx h */\n\nimport type { ComponentChildren } from 'preact';\nimport { h } from 'preact';\n\ntype Props = {\n  className: string;\n  onClick(event: MouseEvent): void;\n  children: ComponentChildren;\n  disabled?: boolean;\n};\n\nconst GeoSearchButton = ({\n  className,\n  disabled = false,\n  onClick,\n  children,\n}: Props) => (\n  <button className={className} onClick={onClick} disabled={disabled}>\n    {children}\n  </button>\n);\n\nexport default GeoSearchButton;\n","/** @jsx h */\n\nimport type { ComponentChildren } from 'preact';\nimport { h } from 'preact';\n\ntype Props = {\n  classNameLabel: string;\n  classNameInput: string;\n  checked: boolean;\n  onToggle(event: Event): void;\n  children: ComponentChildren;\n};\n\nconst GeoSearchToggle = ({\n  classNameLabel,\n  classNameInput,\n  checked,\n  onToggle,\n  children,\n}: Props) => (\n  <label className={classNameLabel}>\n    <input\n      className={classNameInput}\n      type=\"checkbox\"\n      checked={checked}\n      onChange={onToggle}\n    />\n    {children}\n  </label>\n);\n\nexport default GeoSearchToggle;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport GeoSearchControls from '../../components/GeoSearchControls/GeoSearchControls';\n\nconst refineWithMap = ({ refine, mapInstance }) =>\n  refine({\n    northEast: mapInstance.getBounds().getNorthEast().toJSON(),\n    southWest: mapInstance.getBounds().getSouthWest().toJSON(),\n  });\n\nconst collectMarkersForNextRender = (markers, nextIds) =>\n  markers.reduce(\n    ([update, exit], marker) => {\n      const persist = nextIds.includes(marker.__id);\n\n      return persist\n        ? [update.concat(marker), exit]\n        : [update, exit.concat(marker)];\n    },\n    [[], []]\n  );\n\nconst createBoundingBoxFromMarkers = (google, markers) => {\n  const latLngBounds = markers.reduce(\n    (acc, marker) => acc.extend(marker.getPosition()),\n    new google.maps.LatLngBounds()\n  );\n\n  return {\n    northEast: latLngBounds.getNorthEast().toJSON(),\n    southWest: latLngBounds.getSouthWest().toJSON(),\n  };\n};\n\nconst lockUserInteraction = (renderState, functionThatAltersTheMapPosition) => {\n  renderState.isUserInteraction = false;\n  functionThatAltersTheMapPosition();\n  renderState.isUserInteraction = true;\n};\n\nconst renderer = (\n  {\n    items,\n    position,\n    currentRefinement,\n    refine,\n    clearMapRefinement,\n    toggleRefineOnMapMove,\n    isRefineOnMapMove,\n    setMapMoveSinceLastRefine,\n    hasMapMoveSinceLastRefine,\n    isRefinedWithMap,\n    widgetParams,\n    instantSearchInstance,\n  },\n  isFirstRendering\n) => {\n  const {\n    container,\n    googleReference,\n    cssClasses,\n    templates,\n    initialZoom,\n    initialPosition,\n    enableRefine,\n    enableClearMapRefinement,\n    enableRefineControl,\n    mapOptions,\n    createMarker,\n    markerOptions,\n    renderState,\n  } = widgetParams;\n\n  if (isFirstRendering) {\n    renderState.isUserInteraction = true;\n    renderState.isPendingRefine = false;\n    renderState.markers = [];\n\n    const rootElement = document.createElement('div');\n    rootElement.className = cssClasses.root;\n    container.appendChild(rootElement);\n\n    const mapElement = document.createElement('div');\n    mapElement.className = cssClasses.map;\n    rootElement.appendChild(mapElement);\n\n    const treeElement = document.createElement('div');\n    treeElement.className = cssClasses.tree;\n    rootElement.appendChild(treeElement);\n\n    renderState.mapInstance = new googleReference.maps.Map(mapElement, {\n      mapTypeControl: false,\n      fullscreenControl: false,\n      streetViewControl: false,\n      clickableIcons: false,\n      zoomControlOptions: {\n        position: googleReference.maps.ControlPosition.LEFT_TOP,\n      },\n      ...mapOptions,\n    });\n\n    const setupListenersWhenMapIsReady = () => {\n      const onChange = () => {\n        if (renderState.isUserInteraction && enableRefine) {\n          setMapMoveSinceLastRefine();\n\n          if (isRefineOnMapMove()) {\n            renderState.isPendingRefine = true;\n          }\n        }\n      };\n\n      renderState.mapInstance.addListener('center_changed', onChange);\n      renderState.mapInstance.addListener('zoom_changed', onChange);\n      renderState.mapInstance.addListener('dragstart', onChange);\n\n      renderState.mapInstance.addListener('idle', () => {\n        if (renderState.isUserInteraction && renderState.isPendingRefine) {\n          renderState.isPendingRefine = false;\n\n          refineWithMap({\n            mapInstance: renderState.mapInstance,\n            refine,\n          });\n        }\n      });\n    };\n\n    googleReference.maps.event.addListenerOnce(\n      renderState.mapInstance,\n      'idle',\n      setupListenersWhenMapIsReady\n    );\n\n    renderState.templateProps = prepareTemplateProps({\n      templatesConfig: instantSearchInstance.templatesConfig,\n      templates,\n    });\n\n    return;\n  }\n\n  // Collect markers that need to be updated or removed\n  const nextItemsIds = items.map((_) => _.objectID);\n  const [updateMarkers, exitMarkers] = collectMarkersForNextRender(\n    renderState.markers,\n    nextItemsIds\n  );\n\n  // Collect items that will be added\n  const updateMarkerIds = updateMarkers.map((_) => _.__id);\n  const nextPendingItems = items.filter(\n    (item) => !updateMarkerIds.includes(item.objectID)\n  );\n\n  // Remove all markers that need to be removed\n  exitMarkers.forEach((marker) => marker.setMap(null));\n\n  // Create the markers from the items\n  renderState.markers = updateMarkers.concat(\n    nextPendingItems.map((item) => {\n      const marker = createMarker({\n        map: renderState.mapInstance,\n        item,\n      });\n\n      Object.keys(markerOptions.events).forEach((eventName) => {\n        marker.addListener(eventName, (event) => {\n          markerOptions.events[eventName]({\n            map: renderState.mapInstance,\n            event,\n            item,\n            marker,\n          });\n        });\n      });\n\n      return marker;\n    })\n  );\n\n  const shouldUpdate = !hasMapMoveSinceLastRefine();\n\n  // We use this value for differentiate the padding to apply during\n  // fitBounds. When we don't have a currenRefinement (boundingBox)\n  // we let Google Maps compute the automatic padding. But when we\n  // provide the currentRefinement we explicitly set the padding\n  // to `0` otherwise the map will decrease the zoom on each refine.\n  const boundingBoxPadding = currentRefinement ? 0 : null;\n  const boundingBox =\n    !currentRefinement && Boolean(renderState.markers.length)\n      ? createBoundingBoxFromMarkers(googleReference, renderState.markers)\n      : currentRefinement;\n\n  if (boundingBox && shouldUpdate) {\n    lockUserInteraction(renderState, () => {\n      renderState.mapInstance.fitBounds(\n        new googleReference.maps.LatLngBounds(\n          boundingBox.southWest,\n          boundingBox.northEast\n        ),\n        boundingBoxPadding\n      );\n    });\n  } else if (shouldUpdate) {\n    lockUserInteraction(renderState, () => {\n      renderState.mapInstance.setCenter(position || initialPosition);\n      renderState.mapInstance.setZoom(initialZoom);\n    });\n  }\n\n  render(\n    <GeoSearchControls\n      cssClasses={cssClasses}\n      enableRefine={enableRefine}\n      enableRefineControl={enableRefineControl}\n      enableClearMapRefinement={enableClearMapRefinement}\n      isRefineOnMapMove={isRefineOnMapMove()}\n      isRefinedWithMap={isRefinedWithMap()}\n      hasMapMoveSinceLastRefine={hasMapMoveSinceLastRefine()}\n      onRefineToggle={toggleRefineOnMapMove}\n      onRefineClick={() =>\n        refineWithMap({\n          mapInstance: renderState.mapInstance,\n          refine,\n        })\n      }\n      onClearClick={clearMapRefinement}\n      templateProps={renderState.templateProps}\n    />,\n    container.querySelector(`.${cssClasses.tree}`)\n  );\n};\n\nexport default renderer;\n","/** @jsx h */\n\nimport { h, Fragment } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport Template from '../Template/Template';\nimport GeoSearchButton from './GeoSearchButton';\nimport GeoSearchToggle from './GeoSearchToggle';\nimport type {\n  GeoSearchCSSClasses,\n  GeoSearchTemplates,\n} from '../../widgets/geo-search/geo-search';\nimport type { ComponentCSSClasses } from '../../types';\nimport type { PreparedTemplateProps } from '../../lib/templating';\n\ntype Props = {\n  cssClasses: ComponentCSSClasses<GeoSearchCSSClasses>;\n  enableRefine: boolean;\n  enableRefineControl: boolean;\n  enableClearMapRefinement: boolean;\n  isRefineOnMapMove: boolean;\n  isRefinedWithMap: boolean;\n  hasMapMoveSinceLastRefine: boolean;\n  onRefineToggle(event: Event): void;\n  onRefineClick(event: MouseEvent): void;\n  onClearClick(event: MouseEvent): void;\n  templateProps: PreparedTemplateProps<GeoSearchTemplates>;\n};\n\nconst GeoSearchControls = ({\n  cssClasses,\n  enableRefine,\n  enableRefineControl,\n  enableClearMapRefinement,\n  isRefineOnMapMove,\n  isRefinedWithMap,\n  hasMapMoveSinceLastRefine,\n  onRefineToggle,\n  onRefineClick,\n  onClearClick,\n  templateProps,\n}: Props) => (\n  <Fragment>\n    {enableRefine && (\n      <div>\n        {enableRefineControl && (\n          <div className={cssClasses.control}>\n            {isRefineOnMapMove || !hasMapMoveSinceLastRefine ? (\n              <GeoSearchToggle\n                classNameLabel={cx(\n                  cssClasses.label,\n                  isRefineOnMapMove && cssClasses.selectedLabel\n                )}\n                classNameInput={cssClasses.input}\n                checked={isRefineOnMapMove}\n                onToggle={onRefineToggle}\n              >\n                <Template\n                  {...templateProps}\n                  templateKey=\"toggle\"\n                  rootTagName=\"span\"\n                />\n              </GeoSearchToggle>\n            ) : (\n              <GeoSearchButton\n                className={cssClasses.redo}\n                disabled={!hasMapMoveSinceLastRefine}\n                onClick={onRefineClick}\n              >\n                <Template\n                  {...templateProps}\n                  templateKey=\"redo\"\n                  rootTagName=\"span\"\n                />\n              </GeoSearchButton>\n            )}\n          </div>\n        )}\n\n        {!enableRefineControl && !isRefineOnMapMove && (\n          <div className={cssClasses.control}>\n            <GeoSearchButton\n              className={cx(\n                cssClasses.redo,\n                !hasMapMoveSinceLastRefine && cssClasses.disabledRedo\n              )}\n              disabled={!hasMapMoveSinceLastRefine}\n              onClick={onRefineClick}\n            >\n              <Template\n                {...templateProps}\n                templateKey=\"redo\"\n                rootTagName=\"span\"\n              />\n            </GeoSearchButton>\n          </div>\n        )}\n\n        {enableClearMapRefinement && isRefinedWithMap && (\n          <GeoSearchButton className={cssClasses.reset} onClick={onClearClick}>\n            <Template\n              {...templateProps}\n              templateKey=\"reset\"\n              rootTagName=\"span\"\n            />\n          </GeoSearchButton>\n        )}\n      </div>\n    )}\n  </Fragment>\n);\n\nexport default GeoSearchControls;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport type { GeoSearchComponentTemplates } from './geo-search';\n\nconst defaultTemplates: GeoSearchComponentTemplates = {\n  HTMLMarker() {\n    return <p>Your custom HTML Marker</p>;\n  },\n  reset() {\n    return 'Clear the map refinement';\n  },\n  toggle() {\n    return 'Search as I move the map';\n  },\n  redo() {\n    return 'Redo search here';\n  },\n};\n\nexport default defaultTemplates;\n","// global for TypeScript alone\n/* global google */\nimport { cx } from '@algolia/ui-components-shared';\nimport { render } from 'preact';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { renderTemplate } from '../../lib/templating';\nimport { component } from '../../lib/suit';\nimport type {\n  GeoSearchConnectorParams,\n  GeoSearchWidgetDescription,\n  GeoHit,\n} from '../../connectors/geo-search/connectGeoSearch';\nimport connectGeoSearch from '../../connectors/geo-search/connectGeoSearch';\nimport renderer from './GeoSearchRenderer';\nimport defaultTemplates from './defaultTemplates';\nimport type { HTMLMarkerArguments } from './createHTMLMarker';\nimport createHTMLMarker from './createHTMLMarker';\nimport type { GeoLoc, Template, WidgetFactory } from '../../types';\n\nexport type CreateMarker = (args: {\n  item: GeoHit;\n  map: google.maps.Map;\n}) => google.maps.OverlayView | google.maps.Marker;\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'geo-search' });\nconst suit = component('GeoSearch');\n\nexport type GeoSearchTemplates = Partial<{\n  /** Template to use for the marker. */\n  HTMLMarker: Template<GeoHit>;\n  /** Template for the reset button. */\n  reset: Template;\n  /** Template for the toggle label. */\n  toggle: Template;\n  /** Template for the redo button. */\n  redo: Template;\n}>;\n\nexport type GeoSearchComponentTemplates = Required<GeoSearchTemplates>;\n\nexport type GeoSearchCSSClasses = Partial<{\n  /** The root div of the widget. */\n  root: string | string[];\n  /** The map container of the widget. */\n  map: string | string[];\n  /** The control element of the widget. */\n  control: string | string[];\n  /** The label of the control element. */\n  label: string | string[];\n  /** The selected label of the control element. */\n  selectedLabel: string | string[];\n  /** The input of the control element. */\n  input: string | string[];\n  /** The redo search button. */\n  redo: string | string[];\n  /** The disabled redo search button. */\n  disabledRedo: string | string[];\n  /** The reset refinement button. */\n  reset: string | string[];\n}>;\n\nexport type GeoSearchMarker<TOptions> = {\n  /**\n   * Function used to create the options passed to the Google Maps marker.\n   * See the documentation for more information:\n   * https://developers.google.com/maps/documentation/javascript/reference/3/#MarkerOptions\n   */\n  createOptions?(item: GeoHit): TOptions;\n  /**\n   * Object that takes an event type (ex: `click`, `mouseover`) as key and a\n   * listener as value. The listener is provided with an object that contains:\n   * `event`, `item`, `marker`, `map`.\n   */\n  events: {\n    [key: string]: (event: {\n      item: any;\n      marker: any;\n      map: any;\n      event: any;\n    }) => void;\n  };\n};\n\nexport type GeoSearchWidgetParams = {\n  /**\n   * By default the map will set the zoom accordingly to the markers displayed on it.\n   * When we refine it may happen that the results are empty. For those situations we\n   * need to provide a zoom to render the map.\n   * @default 1\n   */\n  initialZoom?: number;\n  /**\n   * By default the map will set the position accordingly to the markers displayed on it.\n   * When we refine it may happen that the results are empty. For those situations we need\n   * to provide a position to render the map. This option is ignored when the `position`\n   * is provided.\n   * @default { lat: 0, lng: 0 }\n   */\n  initialPosition?: GeoLoc;\n  /** Templates to use for the widget. */\n  templates?: GeoSearchTemplates;\n  /** CSS classes to add to the wrapping elements. */\n  cssClasses?: GeoSearchCSSClasses;\n  /**\n   * Options for customize the built-in Google Maps marker. This option is\n   * ignored when the `customHTMLMarker` is provided.\n   */\n  builtInMarker?: Partial<GeoSearchMarker<google.maps.MarkerOptions>>;\n  /**\n   * Options to customize the HTML marker. We provide an alternative to the\n   * built-in Google Maps marker in order to have a full control of the marker\n   * rendering. You can use plain HTML to build your marker.\n   */\n  customHTMLMarker?:\n    | Partial<GeoSearchMarker<Partial<HTMLMarkerArguments>>>\n    | boolean;\n  /**\n   * If true, the map is used to search - otherwise it's for display purposes only.\n   * @default true\n   */\n  enableRefine?: boolean;\n  /**\n   * If true, a button is displayed on the map when the refinement is coming from\n   * the map in order to remove it.\n   * @default true\n   */\n  enableClearMapRefinement?: boolean;\n  /**\n   * If true, the user can toggle the option `enableRefineOnMapMove` directly from the map.\n   * @default true\n   */\n  enableRefineControl?: boolean;\n  /**\n   * Option forwarded to the Google Maps constructor.\n   * See the documentation for more information:\n   * https://developers.google.com/maps/documentation/javascript/reference/3/#MapOptions\n   */\n  mapOptions?: google.maps.MapOptions;\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n  /**\n   * Reference to the global `window.google` object.\n   * See [the documentation](https://developers.google.com/maps/documentation/javascript/tutorial) for more information.\n   */\n  googleReference: typeof window['google'];\n};\n\nexport type GeoSearchWidget = WidgetFactory<\n  GeoSearchWidgetDescription & { $$widgetType: 'ais.geoSearch' },\n  GeoSearchConnectorParams,\n  GeoSearchWidgetParams\n>;\n\n/**\n * The **GeoSearch** widget displays the list of results from the search on a Google Maps. It also provides a way to search for results based on their position. The widget also provide some of the common GeoSearch patterns like search on map interaction.\n *\n * @requirements\n *\n * Note that the GeoSearch widget uses the [geosearch](https://www.algolia.com/doc/guides/searching/geo-search) capabilities of Algolia. Your hits **must** have a `_geoloc` attribute in order to be displayed on the map.\n *\n * Currently, the feature is not compatible with multiple values in the _geoloc attribute.\n *\n * You are also responsible for loading the Google Maps library, it's not shipped with InstantSearch. You need to load the Google Maps library and pass a reference to the widget. You can find more information about how to install the library in [the Google Maps documentation](https://developers.google.com/maps/documentation/javascript/tutorial).\n *\n * Don't forget to explicitly set the `height` of the map container (default class `.ais-geo-search--map`), otherwise it won't be shown (it's a requirement of Google Maps).\n */\nconst geoSearch: GeoSearchWidget = (widgetParams) => {\n  const {\n    initialZoom = 1,\n    initialPosition = { lat: 0, lng: 0 },\n    templates: userTemplates = {},\n    cssClasses: userCssClasses = {},\n    builtInMarker: userBuiltInMarker = {},\n    customHTMLMarker: userCustomHTMLMarker,\n    enableRefine = true,\n    enableClearMapRefinement = true,\n    enableRefineControl = true,\n    container,\n    googleReference,\n    ...otherWidgetParams\n  } = widgetParams || {};\n\n  const defaultBuiltInMarker: GeoSearchMarker<google.maps.MarkerOptions> = {\n    createOptions: () => ({}),\n    events: {},\n  };\n\n  const defaultCustomHTMLMarker: GeoSearchMarker<Partial<HTMLMarkerArguments>> =\n    {\n      createOptions: () => ({}),\n      events: {},\n    };\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  if (!googleReference) {\n    throw new Error(withUsage('The `googleReference` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    // Required only to mount / unmount the Preact tree\n    tree: suit({ descendantName: 'tree' }),\n    map: cx(suit({ descendantName: 'map' }), userCssClasses.map),\n    control: cx(suit({ descendantName: 'control' }), userCssClasses.control),\n    label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n    selectedLabel: cx(\n      suit({ descendantName: 'label', modifierName: 'selected' }),\n      userCssClasses.selectedLabel\n    ),\n    input: cx(suit({ descendantName: 'input' }), userCssClasses.input),\n    redo: cx(suit({ descendantName: 'redo' }), userCssClasses.redo),\n    disabledRedo: cx(\n      suit({ descendantName: 'redo', modifierName: 'disabled' }),\n      userCssClasses.disabledRedo\n    ),\n    reset: cx(suit({ descendantName: 'reset' }), userCssClasses.reset),\n  };\n\n  const templates = {\n    ...defaultTemplates,\n    ...userTemplates,\n  };\n\n  const builtInMarker = {\n    ...defaultBuiltInMarker,\n    ...userBuiltInMarker,\n  };\n\n  const isCustomHTMLMarker =\n    Boolean(userCustomHTMLMarker) || Boolean(userTemplates.HTMLMarker);\n\n  const customHTMLMarker = isCustomHTMLMarker && {\n    ...defaultCustomHTMLMarker,\n    ...(userCustomHTMLMarker as Partial<\n      GeoSearchMarker<Partial<HTMLMarkerArguments>>\n    >),\n  };\n\n  const createBuiltInMarker: CreateMarker = ({ item, ...rest }) =>\n    new googleReference.maps.Marker({\n      ...builtInMarker.createOptions!(item),\n      ...rest,\n      // @ts-expect-error @types/googlemaps doesn't document this\n      __id: item.objectID,\n      position: item._geoloc,\n    });\n\n  const HTMLMarker = createHTMLMarker(googleReference);\n  const createCustomHTMLMarker: CreateMarker = ({ item, ...rest }) =>\n    new HTMLMarker({\n      // this is only called when customHTMLMarker is defined\n      ...(customHTMLMarker as GeoSearchMarker<Partial<HTMLMarkerArguments>>)\n        .createOptions!(item),\n      ...rest,\n      __id: item.objectID,\n      position: item._geoloc,\n      className: cx(suit({ descendantName: 'marker' })),\n      template: renderTemplate({\n        templateKey: 'HTMLMarker',\n        templates,\n        data: item,\n      }),\n    });\n\n  const createMarker = !customHTMLMarker\n    ? createBuiltInMarker\n    : createCustomHTMLMarker;\n\n  const markerOptions = !customHTMLMarker ? builtInMarker : customHTMLMarker;\n\n  const makeWidget = connectGeoSearch(renderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      ...otherWidgetParams,\n      renderState: {},\n      container: containerNode,\n      googleReference,\n      initialZoom,\n      initialPosition,\n      templates,\n      cssClasses,\n      createMarker,\n      markerOptions,\n      enableRefine,\n      enableClearMapRefinement,\n      enableRefineControl,\n    }),\n    $$widgetType: 'ais.geoSearch',\n  };\n};\n\nexport default geoSearch;\n","/** @jsx h */\n\nimport type { JSX } from 'preact';\nimport { h } from 'preact';\nimport Template from '../Template/Template';\n\nexport type RefinementListItemProps = {\n  facetValueToRefine: string;\n  handleClick: (args: {\n    facetValueToRefine: string;\n    isRefined: boolean;\n    originalEvent: MouseEvent;\n  }) => void;\n  isRefined: boolean;\n  subItems?: JSX.Element;\n  templateData: Record<string, any>;\n  templateKey: string;\n  templateProps?: Record<string, any>;\n  className: string;\n};\n\nfunction RefinementListItem({\n  className,\n  handleClick,\n  facetValueToRefine,\n  isRefined,\n  templateProps,\n  templateKey,\n  templateData,\n  subItems,\n}: RefinementListItemProps) {\n  return (\n    <li\n      className={className}\n      onClick={(originalEvent) => {\n        handleClick({\n          facetValueToRefine,\n          isRefined,\n          originalEvent,\n        });\n      }}\n    >\n      {/* @MAJOR ensure conformity with InstantSearch.css specs */}\n      <Template\n        {...templateProps}\n        templateKey={templateKey}\n        data={templateData}\n      />\n      {subItems}\n    </li>\n  );\n}\n\nexport default RefinementListItem;\n","/** @jsx h */\n\nimport { h, createRef, Component } from 'preact';\nimport { noop } from '../../lib/utils';\nimport Template from '../Template/Template';\nimport type {\n  SearchBoxCSSClasses,\n  SearchBoxTemplates,\n} from '../../widgets/search-box/search-box';\nimport type { ComponentCSSClasses } from '../../types';\n\nexport type SearchBoxComponentCSSClasses =\n  ComponentCSSClasses<SearchBoxCSSClasses>;\n\nexport type SearchBoxComponentTemplates = Required<SearchBoxTemplates>;\n\ntype SearchBoxProps = {\n  placeholder?: string;\n  cssClasses: SearchBoxComponentCSSClasses;\n  templates: SearchBoxComponentTemplates;\n  query?: string;\n  showSubmit?: boolean;\n  showReset?: boolean;\n  showLoadingIndicator?: boolean;\n  refine?: (value: string) => void;\n  autofocus?: boolean;\n  searchAsYouType?: boolean;\n  isSearchStalled?: boolean;\n  disabled?: boolean;\n  onChange?: (event: Event) => void;\n  onSubmit?: (event: Event) => void;\n  onReset?: (event: Event) => void;\n};\n\nconst defaultProps = {\n  query: '',\n  showSubmit: true,\n  showReset: true,\n  showLoadingIndicator: true,\n  autofocus: false,\n  searchAsYouType: true,\n  isSearchStalled: false,\n  disabled: false,\n  onChange: noop,\n  onSubmit: noop,\n  onReset: noop,\n  refine: noop,\n};\n\ntype SearchBoxPropsWithDefaultProps = SearchBoxProps &\n  Readonly<typeof defaultProps>;\n\ntype SearchBoxState = {\n  query: string;\n  focused: boolean;\n};\n\nclass SearchBox extends Component<\n  SearchBoxPropsWithDefaultProps,\n  SearchBoxState\n> {\n  public static defaultProps = defaultProps;\n\n  public state = {\n    query: this.props.query,\n    focused: false,\n  };\n\n  private input = createRef<HTMLInputElement>();\n\n  /**\n   * This public method is used in the RefinementList SFFV search box\n   * to reset the input state when an item is selected.\n   *\n   * @see RefinementList#componentWillReceiveProps\n   * @return {undefined}\n   */\n  public resetInput() {\n    this.setState({ query: '' });\n  }\n\n  private onInput = (event: Event) => {\n    const { searchAsYouType, refine, onChange } = this.props;\n    const query = (event.target as HTMLInputElement).value;\n\n    if (searchAsYouType) {\n      refine(query);\n    }\n    this.setState({ query });\n\n    onChange(event);\n  };\n\n  public componentWillReceiveProps(nextProps: SearchBoxPropsWithDefaultProps) {\n    /**\n     * when the user is typing, we don't want to replace the query typed\n     * by the user (state.query) with the query exposed by the connector (props.query)\n     * see: https://github.com/algolia/instantsearch.js/issues/4141\n     */\n    if (!this.state.focused && nextProps.query !== this.state.query) {\n      this.setState({ query: nextProps.query });\n    }\n  }\n\n  private onSubmit = (event: Event) => {\n    const { searchAsYouType, refine, onSubmit } = this.props;\n\n    event.preventDefault();\n    event.stopPropagation();\n    if (this.input.current) {\n      this.input.current.blur();\n    }\n\n    if (!searchAsYouType) {\n      refine(this.state.query);\n    }\n\n    onSubmit(event);\n\n    return false;\n  };\n\n  private onReset = (event: Event) => {\n    const { refine, onReset } = this.props;\n    const query = '';\n\n    if (this.input.current) {\n      this.input.current.focus();\n    }\n\n    refine(query);\n    this.setState({ query });\n\n    onReset(event);\n  };\n\n  private onBlur = () => {\n    this.setState({ focused: false });\n  };\n\n  private onFocus = () => {\n    this.setState({ focused: true });\n  };\n\n  public render() {\n    const {\n      cssClasses,\n      placeholder,\n      autofocus,\n      showSubmit,\n      showReset,\n      showLoadingIndicator,\n      templates,\n      isSearchStalled,\n    } = this.props;\n\n    return (\n      <div className={cssClasses.root}>\n        <form\n          action=\"\"\n          role=\"search\"\n          className={cssClasses.form}\n          noValidate\n          onSubmit={this.onSubmit}\n          onReset={this.onReset}\n        >\n          <input\n            ref={this.input}\n            value={this.state.query}\n            disabled={this.props.disabled}\n            className={cssClasses.input}\n            type=\"search\"\n            placeholder={placeholder}\n            autoFocus={autofocus}\n            autoComplete=\"off\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"off\"\n            // @ts-expect-error `spellCheck` attribute is missing in preact JSX types\n            spellCheck=\"false\"\n            maxLength={512}\n            onInput={this.onInput}\n            onBlur={this.onBlur}\n            onFocus={this.onFocus}\n          />\n\n          <Template\n            templateKey=\"submit\"\n            rootTagName=\"button\"\n            rootProps={{\n              className: cssClasses.submit,\n              type: 'submit',\n              title: 'Submit the search query.',\n              hidden: !showSubmit,\n            }}\n            templates={templates}\n            data={{ cssClasses }}\n          />\n\n          <Template\n            templateKey=\"reset\"\n            rootTagName=\"button\"\n            rootProps={{\n              className: cssClasses.reset,\n              type: 'reset',\n              title: 'Clear the search query.',\n              hidden: !(\n                showReset &&\n                this.state.query.trim() &&\n                !isSearchStalled\n              ),\n            }}\n            templates={templates}\n            data={{ cssClasses }}\n          />\n\n          {showLoadingIndicator && (\n            <Template\n              templateKey=\"loadingIndicator\"\n              rootTagName=\"span\"\n              rootProps={{\n                className: cssClasses.loadingIndicator,\n                hidden: !isSearchStalled,\n              }}\n              templates={templates}\n              data={{ cssClasses }}\n            />\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SearchBox;\n","/** @jsx h */\n\nimport type { JSX } from 'preact';\nimport { h, createRef, Component } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport { isSpecialClick, isEqual } from '../../lib/utils';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport Template from '../Template/Template';\nimport RefinementListItem from './RefinementListItem';\nimport type {\n  SearchBoxComponentCSSClasses,\n  SearchBoxComponentTemplates,\n} from '../SearchBox/SearchBox';\nimport SearchBox from '../SearchBox/SearchBox';\nimport type { HierarchicalMenuItem } from '../../connectors/hierarchical-menu/connectHierarchicalMenu';\nimport type { ComponentCSSClasses, CreateURL, Templates } from '../../types';\nimport type { RefinementListOwnCSSClasses } from '../../widgets/refinement-list/refinement-list';\nimport type { RatingMenuComponentCSSClasses } from '../../widgets/rating-menu/rating-menu';\nimport type { HierarchicalMenuComponentCSSClasses } from '../../widgets/hierarchical-menu/hierarchical-menu';\n\n// CSS types\ntype RefinementListOptionalClasses =\n  | 'noResults'\n  | 'checkbox'\n  | 'labelText'\n  | 'showMore'\n  | 'disabledShowMore'\n  | 'searchBox'\n  | 'count';\n\ntype RefinementListWidgetCSSClasses =\n  ComponentCSSClasses<RefinementListOwnCSSClasses>;\n\ntype RefinementListRequiredCSSClasses = Omit<\n  RefinementListWidgetCSSClasses,\n  RefinementListOptionalClasses\n> &\n  Partial<Pick<RefinementListWidgetCSSClasses, RefinementListOptionalClasses>>;\n\nexport type RefinementListComponentCSSClasses =\n  RefinementListRequiredCSSClasses & {\n    searchable?: SearchBoxComponentCSSClasses;\n  } & Partial<Pick<RatingMenuComponentCSSClasses, 'disabledItem'>> &\n    Partial<\n      Pick<HierarchicalMenuComponentCSSClasses, 'childList' | 'parentItem'>\n    >;\n\ntype FacetValue = {\n  value: string;\n  label: string;\n  highlighted?: string;\n  count?: number;\n  isRefined: boolean;\n  data?: HierarchicalMenuItem[] | null;\n};\n\nexport type RefinementListProps<TTemplates extends Templates> = {\n  createURL: CreateURL<string>;\n  cssClasses: RefinementListComponentCSSClasses;\n  depth?: number;\n  facetValues?: FacetValue[];\n  attribute?: string;\n  templateProps: PreparedTemplateProps<TTemplates>;\n  toggleRefinement: (value: string) => void;\n  showMore?: boolean;\n  toggleShowMore?: () => void;\n  isShowingMore?: boolean;\n  hasExhaustiveItems?: boolean;\n  canToggleShowMore?: boolean;\n  className?: string;\n  children?: JSX.Element;\n\n  // searchable props are optional, but will definitely be present in a searchable context\n  isFromSearch?: boolean;\n  searchIsAlwaysActive?: boolean;\n  searchFacetValues?: (query: string) => void;\n  searchPlaceholder?: string;\n  searchBoxTemplateProps?: PreparedTemplateProps<SearchBoxComponentTemplates>;\n};\n\nconst defaultProps = {\n  cssClasses: {},\n  depth: 0,\n};\n\ntype RefinementListPropsWithDefaultProps<TTemplates extends Templates> =\n  RefinementListProps<TTemplates> & Readonly<typeof defaultProps>;\n\ntype RefinementListItemTemplateData<TTemplates extends Templates> =\n  FacetValue & {\n    url: string;\n  } & Pick<\n      RefinementListProps<TTemplates>,\n      'attribute' | 'cssClasses' | 'isFromSearch'\n    >;\n\nfunction isHierarchicalMenuItem(\n  facetValue: FacetValue\n): facetValue is HierarchicalMenuItem {\n  return (facetValue as HierarchicalMenuItem).data !== undefined;\n}\n\nclass RefinementList<TTemplates extends Templates> extends Component<\n  RefinementListPropsWithDefaultProps<TTemplates>\n> {\n  public static defaultProps = defaultProps;\n\n  private searchBox = createRef<SearchBox>();\n\n  public constructor(props: RefinementListPropsWithDefaultProps<TTemplates>) {\n    super(props);\n    this.handleItemClick = this.handleItemClick.bind(this);\n  }\n\n  public shouldComponentUpdate(\n    nextProps: RefinementListPropsWithDefaultProps<TTemplates>\n  ) {\n    const areFacetValuesDifferent = !isEqual(\n      this.props.facetValues,\n      nextProps.facetValues\n    );\n\n    return areFacetValuesDifferent;\n  }\n\n  private refine(facetValueToRefine: string) {\n    this.props.toggleRefinement(facetValueToRefine);\n  }\n\n  private _generateFacetItem(facetValue: FacetValue) {\n    let subItems;\n    if (\n      isHierarchicalMenuItem(facetValue) &&\n      Array.isArray(facetValue.data) &&\n      facetValue.data.length > 0\n    ) {\n      const { root, ...cssClasses } = this.props.cssClasses;\n\n      subItems = (\n        <RefinementList\n          {...this.props}\n          // We want to keep `root` required for external usage but not for the\n          // sub items.\n          cssClasses={cssClasses as RefinementListComponentCSSClasses}\n          depth={this.props.depth + 1}\n          facetValues={facetValue.data}\n          showMore={false}\n          className={this.props.cssClasses.childList}\n        />\n      );\n    }\n\n    const url = this.props.createURL(facetValue.value);\n    const templateData: RefinementListItemTemplateData<TTemplates> = {\n      ...facetValue,\n      url,\n      attribute: this.props.attribute,\n      cssClasses: this.props.cssClasses,\n      isFromSearch: this.props.isFromSearch,\n    };\n\n    let { value: key } = facetValue;\n    if (facetValue.isRefined !== undefined) {\n      key += `/${facetValue.isRefined}`;\n    }\n\n    if (facetValue.count !== undefined) {\n      key += `/${facetValue.count}`;\n    }\n\n    const refinementListItemClassName = cx(\n      this.props.cssClasses.item,\n      facetValue.isRefined && this.props.cssClasses.selectedItem,\n      !facetValue.count && this.props.cssClasses.disabledItem,\n      Boolean(\n        isHierarchicalMenuItem(facetValue) &&\n          Array.isArray(facetValue.data) &&\n          facetValue.data.length > 0\n      ) && this.props.cssClasses.parentItem!\n    );\n\n    return (\n      <RefinementListItem\n        templateKey=\"item\"\n        key={key}\n        facetValueToRefine={facetValue.value}\n        handleClick={this.handleItemClick}\n        isRefined={facetValue.isRefined}\n        className={refinementListItemClassName}\n        subItems={subItems}\n        templateData={templateData}\n        templateProps={this.props.templateProps}\n      />\n    );\n  }\n\n  // Click events on DOM tree like LABEL > INPUT will result in two click events\n  // instead of one.\n  // No matter the framework, see https://www.google.com/search?q=click+label+twice\n  //\n  // Thus making it hard to distinguish activation from deactivation because both click events\n  // are very close. Debounce is a solution but hacky.\n  //\n  // So the code here checks if the click was done on or in a LABEL. If this LABEL\n  // has a checkbox inside, we ignore the first click event because we will get another one.\n  //\n  // We also check if the click was done inside a link and then e.preventDefault() because we already\n  // handle the url\n  //\n  // Finally, we always stop propagation of the event to avoid multiple levels RefinementLists to fail: click\n  // on child would click on parent also\n  private handleItemClick({\n    facetValueToRefine,\n    isRefined,\n    originalEvent,\n  }: {\n    facetValueToRefine: string;\n    isRefined: boolean;\n    originalEvent: MouseEvent;\n  }) {\n    if (isSpecialClick(originalEvent)) {\n      // do not alter the default browser behavior\n      // if one special key is down\n      return;\n    }\n\n    if (\n      !(originalEvent.target instanceof HTMLElement) ||\n      !(originalEvent.target.parentNode instanceof HTMLElement)\n    ) {\n      return;\n    }\n\n    if (\n      isRefined &&\n      originalEvent.target.parentNode.querySelector(\n        'input[type=\"radio\"]:checked'\n      )\n    ) {\n      // Prevent refinement for being reset if the user clicks on an already checked radio button\n      return;\n    }\n\n    if (originalEvent.target.tagName === 'INPUT') {\n      this.refine(facetValueToRefine);\n      return;\n    }\n\n    let parent = originalEvent.target;\n\n    while (parent !== originalEvent.currentTarget) {\n      if (\n        parent.tagName === 'LABEL' &&\n        (parent.querySelector('input[type=\"checkbox\"]') ||\n          parent.querySelector('input[type=\"radio\"]'))\n      ) {\n        return;\n      }\n\n      if (parent.tagName === 'A' && (parent as HTMLAnchorElement).href) {\n        originalEvent.preventDefault();\n      }\n\n      parent = parent.parentNode as HTMLElement;\n    }\n\n    originalEvent.stopPropagation();\n\n    this.refine(facetValueToRefine);\n  }\n\n  public componentWillReceiveProps(\n    nextProps: RefinementListPropsWithDefaultProps<TTemplates>\n  ) {\n    if (this.searchBox.current && !nextProps.isFromSearch) {\n      this.searchBox.current.resetInput();\n    }\n  }\n\n  private refineFirstValue() {\n    const firstValue = this.props.facetValues && this.props.facetValues[0];\n    if (firstValue) {\n      const actualValue = firstValue.value;\n      this.props.toggleRefinement(actualValue);\n    }\n  }\n\n  public render() {\n    const showMoreButtonClassName = cx(\n      this.props.cssClasses.showMore,\n      !(this.props.showMore === true && this.props.canToggleShowMore) &&\n        this.props.cssClasses.disabledShowMore\n    );\n\n    const showMoreButton = this.props.showMore === true && (\n      <Template\n        {...this.props.templateProps}\n        templateKey=\"showMoreText\"\n        rootTagName=\"button\"\n        rootProps={{\n          className: showMoreButtonClassName,\n          disabled: !this.props.canToggleShowMore,\n          onClick: this.props.toggleShowMore,\n        }}\n        data={{\n          isShowingMore: this.props.isShowingMore,\n        }}\n      />\n    );\n\n    const shouldDisableSearchBox =\n      this.props.searchIsAlwaysActive !== true &&\n      !(this.props.isFromSearch || !this.props.hasExhaustiveItems);\n\n    const searchBox = this.props.searchFacetValues && (\n      <div className={this.props.cssClasses.searchBox}>\n        <SearchBox\n          ref={this.searchBox}\n          placeholder={this.props.searchPlaceholder}\n          disabled={shouldDisableSearchBox}\n          cssClasses={this.props.cssClasses.searchable!}\n          templates={this.props.searchBoxTemplateProps!.templates}\n          onChange={(event: Event) =>\n            this.props.searchFacetValues!(\n              (event.target as HTMLInputElement).value\n            )\n          }\n          onReset={() => this.props.searchFacetValues!('')}\n          onSubmit={() => this.refineFirstValue()}\n          // This sets the search box to a controlled state because\n          // we don't rely on the `refine` prop but on `onChange`.\n          searchAsYouType={false}\n        />\n      </div>\n    );\n\n    const facetValues = this.props.facetValues &&\n      this.props.facetValues.length > 0 && (\n        <ul className={this.props.cssClasses.list}>\n          {this.props.facetValues.map(this._generateFacetItem, this)}\n        </ul>\n      );\n\n    const noResults = this.props.searchFacetValues &&\n      this.props.isFromSearch &&\n      (!this.props.facetValues || this.props.facetValues.length === 0) && (\n        <Template\n          {...this.props.templateProps}\n          templateKey=\"searchableNoResults\"\n          rootProps={{ className: this.props.cssClasses.noResults }}\n        />\n      );\n\n    const rootClassName = cx(\n      this.props.cssClasses.root,\n      (!this.props.facetValues || this.props.facetValues.length === 0) &&\n        this.props.cssClasses.noRefinementRoot,\n      this.props.className\n    );\n\n    return (\n      <div className={rootClassName}>\n        {this.props.children}\n        {searchBox}\n        {facetValues}\n        {noResults}\n        {showMoreButton}\n      </div>\n    );\n  }\n}\n\nexport default RefinementList;\n","/** @jsx h */\nimport { h } from 'preact';\n\nimport { formatNumber } from '../../lib/formatNumber';\nimport { cx } from '@algolia/ui-components-shared';\nimport type { HierarchicalMenuComponentTemplates } from './hierarchical-menu';\n\nconst defaultTemplates: HierarchicalMenuComponentTemplates = {\n  item({ url, label, count, cssClasses, isRefined }) {\n    return (\n      <a\n        className={cx(\n          cx(cssClasses.link),\n          cx(isRefined ? cssClasses.selectedItemLink : undefined)\n        )}\n        href={url}\n      >\n        <span className={cx(cssClasses.label)}>{label}</span>\n        <span className={cx(cssClasses.count)}>{formatNumber(count)}</span>\n      </a>\n    );\n  },\n  showMoreText({ isShowingMore }) {\n    return isShowingMore ? 'Show less' : 'Show more';\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport RefinementList from '../../components/RefinementList/RefinementList';\nimport type {\n  HierarchicalMenuItem,\n  HierarchicalMenuConnectorParams,\n  HierarchicalMenuRenderState,\n  HierarchicalMenuWidgetDescription,\n} from '../../connectors/hierarchical-menu/connectHierarchicalMenu';\nimport connectHierarchicalMenu from '../../connectors/hierarchical-menu/connectHierarchicalMenu';\nimport defaultTemplates from './defaultTemplates';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport type {\n  TransformItems,\n  Template,\n  WidgetFactory,\n  RendererOptions,\n  SortBy,\n  ComponentCSSClasses,\n} from '../../types';\nimport { component } from '../../lib/suit';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'hierarchical-menu',\n});\nconst suit = component('HierarchicalMenu');\n\ntype HierarchicalMenuTemplates = Partial<{\n  /**\n   * Item template, provided with `name`, `count`, `isRefined`, `url` data properties.\n   */\n  item: Template<{\n    name: string;\n    count: number;\n    isRefined: boolean;\n    url: string;\n    label: string;\n    cssClasses: HierarchicalMenuCSSClasses;\n  }>;\n  /**\n   * Template used for the show more text, provided with `isShowingMore` data property.\n   */\n  showMoreText: Template<{ isShowingMore: boolean }>;\n}>;\n\nexport type HierarchicalMenuCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n  /**\n   * CSS class to add to the root element when no refinements.\n   */\n  noRefinementRoot: string | string[];\n  /**\n   * CSS class to add to the list element.\n   */\n  list: string | string[];\n  /**\n   * CSS class to add to the child list element.\n   */\n  childList: string | string[];\n  /**\n   * CSS class to add to each item element.\n   */\n  item: string | string[];\n  /**\n   * CSS class to add to each selected item element.\n   */\n  selectedItem: string | string[];\n  /**\n   * CSS class to add to each parent item element.\n   */\n  parentItem: string | string[];\n  /**\n   * CSS class to add to each link (when using the default template).\n   */\n  link: string | string[];\n  /**\n   * CSS class to add to the link of each selected item element (when using the default template).\n   */\n  selectedItemLink: string | string[];\n  /**\n   * CSS class to add to each label (when using the default template).\n   */\n  label: string | string[];\n  /**\n   * CSS class to add to each count element (when using the default template).\n   */\n  count: string | string[];\n  /**\n   * CSS class to add to the show more element.\n   */\n  showMore: string | string[];\n  /**\n   * CSS class to add to the disabled show more element.\n   */\n  disabledShowMore: string | string[];\n}>;\n\nexport type HierarchicalMenuComponentCSSClasses =\n  ComponentCSSClasses<HierarchicalMenuCSSClasses>;\n\nexport type HierarchicalMenuComponentTemplates =\n  Required<HierarchicalMenuTemplates>;\n\nexport type HierarchicalMenuWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n  /**\n   * Array of attributes to use to generate the hierarchy of the menu.\n   */\n  attributes: string[];\n  /**\n   * Separator used in the attributes to separate level values.\n   */\n  separator?: string;\n  /**\n   * Prefix path to use if the first level is not the root level.\n   */\n  rootPath?: string;\n  /**\n   * Show the siblings of the selected parent level of the current refined value.\n   *\n   * With `showParentLevel` set to `true` (default):\n   * - Parent lvl0\n   *   - **lvl1**\n   *     - **lvl2**\n   *     - lvl2\n   *     - lvl2\n   *   - lvl 1\n   *   - lvl 1\n   * - Parent lvl0\n   * - Parent lvl0\n   *\n   * With `showParentLevel` set to `false`:\n   * - Parent lvl0\n   *   - **lvl1**\n   *     - **lvl2**\n   * - Parent lvl0\n   * - Parent lvl0\n   */\n  showParentLevel?: boolean;\n  /**\n   * Max number of values to display.\n   */\n  limit?: number;\n  /**\n   * Whether to display the \"show more\" button.\n   */\n  showMore?: boolean;\n  /**\n   * Max number of values to display when showing more.\n   * does not impact the root level.\n   */\n  showMoreLimit?: number;\n  /**\n   * How to sort refinements. Possible values: `count|isRefined|name:asc|name:desc`.\n   * You can also use a sort function that behaves like the standard Javascript [compareFunction](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#Syntax).\n   */\n  sortBy?: SortBy<HierarchicalMenuItem>;\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<HierarchicalMenuItem>;\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: HierarchicalMenuTemplates;\n  /**\n   * CSS classes to add to the wrapping elements.\n   */\n  cssClasses?: HierarchicalMenuCSSClasses;\n};\n\nconst renderer =\n  ({\n    cssClasses,\n    containerNode,\n    showMore,\n    templates,\n    renderState,\n  }: {\n    cssClasses: HierarchicalMenuComponentCSSClasses;\n    containerNode: HTMLElement;\n    showMore: boolean;\n    templates: HierarchicalMenuTemplates;\n    renderState: {\n      templateProps?: PreparedTemplateProps<HierarchicalMenuComponentTemplates>;\n    };\n  }) =>\n  (\n    {\n      createURL,\n      items,\n      refine,\n      instantSearchInstance,\n      isShowingMore,\n      toggleShowMore,\n      canToggleShowMore,\n    }: HierarchicalMenuRenderState &\n      RendererOptions<HierarchicalMenuConnectorParams>,\n    isFirstRendering: boolean\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n      return;\n    }\n\n    render(\n      <RefinementList\n        createURL={createURL}\n        cssClasses={cssClasses}\n        facetValues={items}\n        templateProps={renderState.templateProps!}\n        toggleRefinement={refine}\n        showMore={showMore}\n        toggleShowMore={toggleShowMore}\n        isShowingMore={isShowingMore}\n        canToggleShowMore={canToggleShowMore}\n      />,\n      containerNode\n    );\n  };\n\n/**\n * The hierarchical menu widget is used to create a navigation based on a hierarchy of facet attributes.\n *\n * It is commonly used for categories with subcategories.\n *\n * All attributes (lvl0, lvl1 here) must be declared as [attributes for faceting](https://www.algolia.com/doc/guides/searching/faceting/#declaring-attributes-for-faceting) in your\n * Algolia settings.\n *\n * By default, the separator we expect is ` > ` (with spaces) but you can use\n * a different one by using the `separator` option.\n * @requirements\n * Your objects must be formatted in a specific way to be\n * able to display hierarchical menus. Here's an example:\n *\n * ```javascript\n * {\n *   \"objectID\": \"123\",\n *   \"name\": \"orange\",\n *   \"categories\": {\n *     \"lvl0\": \"fruits\",\n *     \"lvl1\": \"fruits > citrus\"\n *   }\n * }\n * ```\n *\n * Every level must be specified entirely.\n * It's also possible to have multiple values per level, for example:\n *\n * ```javascript\n * {\n *   \"objectID\": \"123\",\n *   \"name\": \"orange\",\n *   \"categories\": {\n *     \"lvl0\": [\"fruits\", \"vitamins\"],\n *     \"lvl1\": [\"fruits > citrus\", \"vitamins > C\"]\n *   }\n * }\n * ```\n * @type {WidgetFactory}\n * @devNovel HierarchicalMenu\n * @category filter\n * @param {HierarchicalMenuWidgetParams} widgetParams The HierarchicalMenu widget options.\n * @return {Widget} A new HierarchicalMenu widget instance.\n * @example\n * search.addWidgets([\n *   instantsearch.widgets.hierarchicalMenu({\n *     container: '#hierarchical-categories',\n *     attributes: ['hierarchicalCategories.lvl0', 'hierarchicalCategories.lvl1', 'hierarchicalCategories.lvl2'],\n *   })\n * ]);\n */\nexport type HierarchicalMenuWidget = WidgetFactory<\n  HierarchicalMenuWidgetDescription & { $$widgetType: 'ais.hierarchicalMenu' },\n  HierarchicalMenuConnectorParams,\n  HierarchicalMenuWidgetParams\n>;\n\nconst hierarchicalMenu: HierarchicalMenuWidget = function hierarchicalMenu(\n  widgetParams\n) {\n  const {\n    container,\n    attributes,\n    separator,\n    rootPath,\n    showParentLevel,\n    limit,\n    showMore = false,\n    showMoreLimit,\n    sortBy,\n    transformItems,\n    templates = {},\n    cssClasses: userCssClasses = {},\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    childList: cx(\n      suit({ descendantName: 'list', modifierName: 'child' }),\n      userCssClasses.childList\n    ),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n    selectedItem: cx(\n      suit({ descendantName: 'item', modifierName: 'selected' }),\n      userCssClasses.selectedItem\n    ),\n    parentItem: cx(\n      suit({ descendantName: 'item', modifierName: 'parent' }),\n      userCssClasses.parentItem\n    ),\n    link: cx(suit({ descendantName: 'link' }), userCssClasses.link),\n    selectedItemLink: cx(\n      suit({ descendantName: 'link', modifierName: 'selected' }),\n      userCssClasses.selectedItemLink\n    ),\n    label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n    count: cx(suit({ descendantName: 'count' }), userCssClasses.count),\n    showMore: cx(suit({ descendantName: 'showMore' }), userCssClasses.showMore),\n    disabledShowMore: cx(\n      suit({ descendantName: 'showMore', modifierName: 'disabled' }),\n      userCssClasses.disabledShowMore\n    ),\n  };\n\n  const specializedRenderer = renderer({\n    cssClasses,\n    containerNode,\n    templates,\n    showMore,\n    renderState: {},\n  });\n\n  const makeWidget = connectHierarchicalMenu(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      attributes,\n      separator,\n      rootPath,\n      showParentLevel,\n      limit,\n      showMore,\n      showMoreLimit,\n      sortBy,\n      transformItems,\n    }),\n    $$widgetType: 'ais.hierarchicalMenu',\n  };\n};\n\nexport default hierarchicalMenu;\n","import type { HitsComponentTemplates } from '../../components/Hits/Hits';\n\nconst defaultTemplates: HitsComponentTemplates = {\n  empty() {\n    return 'No results';\n  },\n  item(data) {\n    return JSON.stringify(data, null, 2);\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport type {\n  HitsConnectorParams,\n  HitsRenderState,\n  HitsWidgetDescription,\n} from '../../connectors/hits/connectHits';\nimport connectHits from '../../connectors/hits/connectHits';\nimport type {\n  HitsComponentCSSClasses,\n  HitsComponentTemplates,\n} from '../../components/Hits/Hits';\nimport Hits from '../../components/Hits/Hits';\nimport defaultTemplates from './defaultTemplates';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport { component } from '../../lib/suit';\nimport { withInsights, withInsightsListener } from '../../lib/insights';\nimport type {\n  Template,\n  TemplateWithBindEvent,\n  Hit,\n  WidgetFactory,\n  Renderer,\n  InsightsClient,\n} from '../../types';\nimport type { InsightsEvent } from '../../middlewares/createInsightsMiddleware';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { SearchResults } from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'hits' });\nconst suit = component('Hits');\nconst HitsWithInsightsListener = withInsightsListener(Hits);\n\nconst renderer =\n  ({\n    renderState,\n    cssClasses,\n    containerNode,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: HitsComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<HitsComponentTemplates>;\n    };\n    templates: HitsTemplates;\n  }): Renderer<HitsRenderState, Partial<HitsWidgetParams>> =>\n  (\n    { hits: receivedHits, results, instantSearchInstance, insights, bindEvent },\n    isFirstRendering\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n      return;\n    }\n\n    render(\n      <HitsWithInsightsListener\n        cssClasses={cssClasses}\n        hits={receivedHits}\n        results={results}\n        templateProps={renderState.templateProps}\n        insights={insights as InsightsClient}\n        sendEvent={(event: InsightsEvent) => {\n          instantSearchInstance.sendEventToInsights(event);\n        }}\n        bindEvent={bindEvent}\n      />,\n      containerNode\n    );\n  };\n\nexport type HitsCSSClasses = Partial<{\n  /**\n   * CSS class to add to the wrapping element.\n   */\n  root: string | string[];\n\n  /**\n   * CSS class to add to the wrapping element when no results.\n   */\n  emptyRoot: string | string[];\n\n  /**\n   * CSS class to add to the list of results.\n   */\n  list: string | string[];\n\n  /**\n   * CSS class to add to each result.\n   */\n  item: string | string[];\n}>;\n\nexport type HitsTemplates = Partial<{\n  /**\n   * Template to use when there are no results.\n   *\n   * @default 'No Results'\n   */\n  empty: Template<SearchResults>;\n\n  /**\n   * Template to use for each result. This template will receive an object containing a single record.\n   *\n   * @default ''\n   */\n  item: TemplateWithBindEvent<\n    Hit & {\n      // @deprecated the index in the hits array, use __position instead, which is the absolute position\n      __hitIndex: number;\n    }\n  >;\n}>;\n\nexport type HitsWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: HitsTemplates;\n\n  /**\n   * CSS classes to add.\n   */\n  cssClasses?: HitsCSSClasses;\n};\n\nexport type HitsWidget = WidgetFactory<\n  HitsWidgetDescription & { $$widgetType: 'ais.hits' },\n  HitsConnectorParams,\n  HitsWidgetParams\n>;\n\nconst hits: HitsWidget = function hits(widgetParams) {\n  const {\n    container,\n    escapeHTML,\n    transformItems,\n    templates = {},\n    cssClasses: userCssClasses = {},\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    emptyRoot: cx(suit({ modifierName: 'empty' }), userCssClasses.emptyRoot),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = withInsights(connectHits)(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ escapeHTML, transformItems }),\n    $$widgetType: 'ais.hits',\n  };\n};\n\nexport default hits;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport Template from '../Template/Template';\nimport type { SearchResults } from 'algoliasearch-helper';\nimport type { BindEventForHits, SendEventForHits } from '../../lib/utils';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { ComponentCSSClasses, Hit } from '../../types';\nimport type { HitsCSSClasses, HitsTemplates } from '../../widgets/hits/hits';\n\nexport type HitsComponentCSSClasses = ComponentCSSClasses<HitsCSSClasses>;\nexport type HitsComponentTemplates = Required<HitsTemplates>;\n\nexport type HitsProps = {\n  results: SearchResults;\n  hits: Hit[];\n  sendEvent?: SendEventForHits;\n  bindEvent?: BindEventForHits;\n  cssClasses: HitsComponentCSSClasses;\n  templateProps: PreparedTemplateProps<HitsComponentTemplates>;\n};\n\nconst Hits = ({\n  results,\n  hits,\n  bindEvent,\n  sendEvent,\n  cssClasses,\n  templateProps,\n}: HitsProps) => {\n  if (results.hits.length === 0) {\n    return (\n      <Template\n        {...templateProps}\n        templateKey=\"empty\"\n        rootProps={{\n          className: cx(cssClasses.root, cssClasses.emptyRoot),\n        }}\n        data={results}\n      />\n    );\n  }\n\n  return (\n    <div className={cssClasses.root}>\n      <ol className={cssClasses.list}>\n        {hits.map((hit, index) => (\n          <Template\n            {...templateProps}\n            templateKey=\"item\"\n            rootTagName=\"li\"\n            rootProps={{ className: cssClasses.item }}\n            key={hit.objectID}\n            data={{\n              ...hit,\n              __hitIndex: index,\n            }}\n            bindEvent={bindEvent}\n            sendEvent={sendEvent}\n          />\n        ))}\n      </ol>\n    </div>\n  );\n};\n\nexport default Hits;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\n\nexport type SelectorOption = {\n  value?: string | number;\n  label: string;\n};\n\nexport type SelectorComponentCSSClasses = {\n  root: string;\n  select: string;\n  option: string;\n};\n\nexport type SelectorProps = {\n  cssClasses: SelectorComponentCSSClasses;\n  currentValue?: string | number;\n  options: SelectorOption[];\n  setValue(value: SelectorOption['value']): void;\n};\n\nfunction Selector({\n  currentValue,\n  options,\n  cssClasses,\n  setValue,\n}: SelectorProps) {\n  return (\n    <select\n      className={cx(cssClasses.select)}\n      onChange={(event) => setValue((event.target as HTMLSelectElement).value)}\n      value={`${currentValue}`}\n    >\n      {options.map((option) => (\n        <option\n          className={cx(cssClasses.option)}\n          key={option.label + option.value}\n          value={`${option.value}`}\n        >\n          {option.label}\n        </option>\n      ))}\n    </select>\n  );\n}\n\nexport default Selector;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport Selector from '../../components/Selector/Selector';\nimport type {\n  HitsPerPageConnectorParams,\n  HitsPerPageRenderState,\n  HitsPerPageWidgetDescription,\n} from '../../connectors/hits-per-page/connectHitsPerPage';\nimport connectHitsPerPage from '../../connectors/hits-per-page/connectHitsPerPage';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n  find,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport type { ComponentCSSClasses, WidgetFactory } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'hits-per-page',\n});\nconst suit = component('HitsPerPage');\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: ComponentCSSClasses<HitsPerPageCSSClasses>;\n  }) =>\n  ({ items, refine }: HitsPerPageRenderState, isFirstRendering: boolean) => {\n    if (isFirstRendering) return;\n\n    const { value: currentValue } =\n      find(items, ({ isRefined }) => isRefined) || {};\n\n    render(\n      <div className={cssClasses.root}>\n        <Selector\n          cssClasses={cssClasses}\n          currentValue={currentValue}\n          options={items}\n          setValue={refine}\n        />\n      </div>,\n      containerNode\n    );\n  };\n\nexport type HitsPerPageCSSClasses = Partial<{\n  /**\n   * CSS classes added to the outer `<div>`.\n   */\n  root: string | string[];\n\n  /**\n   * CSS classes added to the parent `<select>`.\n   */\n  select: string | string[];\n\n  /**\n   * CSS classes added to each `<option>`.\n   */\n  option: string | string[];\n}>;\n\nexport type HitsPerPageWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * CSS classes to be added.\n   */\n  cssClasses?: HitsPerPageCSSClasses;\n};\n\nexport type HitsPerPageWidget = WidgetFactory<\n  HitsPerPageWidgetDescription & { $$widgetType: 'ais.hitsPerPage' },\n  HitsPerPageConnectorParams,\n  HitsPerPageWidgetParams\n>;\n\nconst hitsPerPage: HitsPerPageWidget = function hitsPerPage(widgetParams) {\n  const {\n    container,\n    items,\n    cssClasses: userCssClasses = {},\n    transformItems,\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    select: cx(suit({ descendantName: 'select' }), userCssClasses.select),\n    option: cx(suit({ descendantName: 'option' }), userCssClasses.option),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n  });\n\n  const makeWidget = connectHitsPerPage(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ items, transformItems }),\n    $$widgetType: 'ais.hitsPerPage',\n  };\n};\n\nexport default hitsPerPage;\n","import type { InfiniteHitsComponentTemplates } from '../../components/InfiniteHits/InfiniteHits';\n\nconst defaultTemplates: InfiniteHitsComponentTemplates = {\n  empty() {\n    return 'No results';\n  },\n  showPreviousText() {\n    return 'Show previous results';\n  },\n  showMoreText() {\n    return 'Show more results';\n  },\n  item(data) {\n    return JSON.stringify(data, null, 2);\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport type { SearchResults } from 'algoliasearch-helper';\nimport type {\n  InfiniteHitsComponentCSSClasses,\n  InfiniteHitsComponentTemplates,\n} from '../../components/InfiniteHits/InfiniteHits';\nimport InfiniteHits from '../../components/InfiniteHits/InfiniteHits';\nimport type {\n  InfiniteHitsConnectorParams,\n  InfiniteHitsRenderState,\n  InfiniteHitsCache,\n  InfiniteHitsWidgetDescription,\n} from '../../connectors/infinite-hits/connectInfiniteHits';\nimport connectInfiniteHits from '../../connectors/infinite-hits/connectInfiniteHits';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport { component } from '../../lib/suit';\nimport { withInsights, withInsightsListener } from '../../lib/insights';\nimport type {\n  WidgetFactory,\n  Template,\n  TemplateWithBindEvent,\n  Hit,\n  InsightsClient,\n  Renderer,\n} from '../../types';\nimport defaultTemplates from './defaultTemplates';\nimport type { InsightsEvent } from '../../middlewares/createInsightsMiddleware';\nimport type { PreparedTemplateProps } from '../../lib/templating';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'infinite-hits',\n});\nconst suit = component('InfiniteHits');\nconst InfiniteHitsWithInsightsListener = withInsightsListener(InfiniteHits);\n\nexport type InfiniteHitsCSSClasses = Partial<{\n  /**\n   * The root element of the widget.\n   */\n  root: string | string[];\n\n  /**\n   * The root container without results.\n   */\n  emptyRoot: string | string[];\n\n  /**\n   * The list of results.\n   */\n  list: string | string[];\n\n  /**\n   * The list item.\n   */\n  item: string | string[];\n\n  /**\n   * The “Show previous” button.\n   */\n  loadPrevious: string | string[];\n\n  /**\n   * The disabled “Show previous” button.\n   */\n  disabledLoadPrevious: string | string[];\n\n  /**\n   * The “Show more” button.\n   */\n  loadMore: string | string[];\n\n  /**\n   * The disabled “Show more” button.\n   */\n  disabledLoadMore: string | string[];\n}>;\n\nexport type InfiniteHitsTemplates = Partial<{\n  /**\n   * The template to use when there are no results.\n   */\n  empty: Template<SearchResults>;\n\n  /**\n   * The template to use for the “Show previous” label.\n   */\n  showPreviousText: Template;\n\n  /**\n   * The template to use for the “Show more” label.\n   */\n  showMoreText: Template;\n\n  /**\n   * The template to use for each result.\n   */\n  item: TemplateWithBindEvent<\n    Hit & {\n      // @deprecated the index in the hits array, use __position instead, which is the absolute position\n      __hitIndex: number;\n    }\n  >;\n}>;\n\nexport type InfiniteHitsWidgetParams = {\n  /**\n   * The CSS Selector or `HTMLElement` to insert the widget into.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * The CSS classes to override.\n   */\n  cssClasses?: InfiniteHitsCSSClasses;\n\n  /**\n   * The templates to use for the widget.\n   */\n  templates?: InfiniteHitsTemplates;\n\n  /**\n   * Reads and writes hits from/to cache.\n   * When user comes back to the search page after leaving for product page,\n   * this helps restore InfiniteHits and its scroll position.\n   */\n  cache?: InfiniteHitsCache;\n};\n\nexport type InfiniteHitsWidget = WidgetFactory<\n  InfiniteHitsWidgetDescription & { $$widgetType: 'ais.infiniteHits' },\n  InfiniteHitsConnectorParams,\n  InfiniteHitsWidgetParams\n>;\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    renderState,\n    templates,\n    showPrevious: hasShowPrevious,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: InfiniteHitsComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<InfiniteHitsComponentTemplates>;\n    };\n    templates: InfiniteHitsTemplates;\n    showPrevious?: boolean;\n  }): Renderer<InfiniteHitsRenderState, Partial<InfiniteHitsWidgetParams>> =>\n  (\n    {\n      hits,\n      results,\n      showMore,\n      showPrevious,\n      isFirstPage,\n      isLastPage,\n      instantSearchInstance,\n      insights,\n      bindEvent,\n    },\n    isFirstRendering\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n      return;\n    }\n\n    render(\n      <InfiniteHitsWithInsightsListener\n        cssClasses={cssClasses}\n        hits={hits}\n        results={results}\n        hasShowPrevious={hasShowPrevious}\n        showPrevious={showPrevious}\n        showMore={showMore}\n        templateProps={renderState.templateProps!}\n        isFirstPage={isFirstPage}\n        isLastPage={isLastPage}\n        insights={insights as InsightsClient}\n        sendEvent={(event: InsightsEvent) => {\n          instantSearchInstance.sendEventToInsights(event);\n        }}\n        bindEvent={bindEvent}\n      />,\n      containerNode\n    );\n  };\n\nconst infiniteHits: InfiniteHitsWidget = (widgetParams) => {\n  const {\n    container,\n    escapeHTML,\n    transformItems,\n    templates = {},\n    cssClasses: userCssClasses = {},\n    showPrevious,\n    cache,\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    emptyRoot: cx(suit({ modifierName: 'empty' }), userCssClasses.emptyRoot),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    loadPrevious: cx(\n      suit({ descendantName: 'loadPrevious' }),\n      userCssClasses.loadPrevious\n    ),\n    disabledLoadPrevious: cx(\n      suit({ descendantName: 'loadPrevious', modifierName: 'disabled' }),\n      userCssClasses.disabledLoadPrevious\n    ),\n    loadMore: cx(suit({ descendantName: 'loadMore' }), userCssClasses.loadMore),\n    disabledLoadMore: cx(\n      suit({ descendantName: 'loadMore', modifierName: 'disabled' }),\n      userCssClasses.disabledLoadMore\n    ),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    templates,\n    showPrevious,\n    renderState: {},\n  });\n\n  const makeWidget = withInsights(connectInfiniteHits)(\n    specializedRenderer,\n    () => render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      escapeHTML,\n      transformItems,\n      showPrevious,\n      cache,\n    }),\n    $$widgetType: 'ais.infiniteHits',\n  };\n};\n\nexport default infiniteHits;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport Template from '../Template/Template';\nimport type { SearchResults } from 'algoliasearch-helper';\nimport type { ComponentCSSClasses, Hit } from '../../types';\nimport type {\n  InfiniteHitsCSSClasses,\n  InfiniteHitsTemplates,\n} from '../../widgets/infinite-hits/infinite-hits';\nimport type { SendEventForHits, BindEventForHits } from '../../lib/utils';\n\nexport type InfiniteHitsComponentCSSClasses =\n  ComponentCSSClasses<InfiniteHitsCSSClasses>;\nexport type InfiniteHitsComponentTemplates = Required<InfiniteHitsTemplates>;\n\nexport type InfiniteHitsProps = {\n  cssClasses: InfiniteHitsComponentCSSClasses;\n  hits: Hit[];\n  results: SearchResults;\n  hasShowPrevious: boolean;\n  showPrevious: () => void;\n  showMore: () => void;\n  templateProps: {\n    [key: string]: any;\n    templates: InfiniteHitsComponentTemplates;\n  };\n  isFirstPage: boolean;\n  isLastPage: boolean;\n  sendEvent: SendEventForHits;\n  bindEvent: BindEventForHits;\n};\n\nconst InfiniteHits = ({\n  results,\n  hits,\n  bindEvent,\n  sendEvent,\n  hasShowPrevious,\n  showPrevious,\n  showMore,\n  isFirstPage,\n  isLastPage,\n  cssClasses,\n  templateProps,\n}: InfiniteHitsProps) => {\n  if (results.hits.length === 0) {\n    return (\n      <Template\n        {...templateProps}\n        templateKey=\"empty\"\n        rootProps={{\n          className: cx(cssClasses.root, cssClasses.emptyRoot),\n        }}\n        data={results}\n      />\n    );\n  }\n\n  return (\n    <div className={cssClasses.root}>\n      {hasShowPrevious && (\n        <Template\n          {...templateProps}\n          templateKey=\"showPreviousText\"\n          rootTagName=\"button\"\n          rootProps={{\n            className: cx(\n              cssClasses.loadPrevious,\n              isFirstPage && cssClasses.disabledLoadPrevious\n            ),\n            disabled: isFirstPage,\n            onClick: showPrevious,\n          }}\n        />\n      )}\n\n      <ol className={cssClasses.list}>\n        {hits.map((hit, position) => (\n          <Template\n            {...templateProps}\n            templateKey=\"item\"\n            rootTagName=\"li\"\n            rootProps={{ className: cssClasses.item }}\n            key={hit.objectID}\n            data={{\n              ...hit,\n              __hitIndex: position,\n            }}\n            bindEvent={bindEvent}\n            sendEvent={sendEvent}\n          />\n        ))}\n      </ol>\n\n      <Template\n        {...templateProps}\n        templateKey=\"showMoreText\"\n        rootTagName=\"button\"\n        rootProps={{\n          className: cx(\n            cssClasses.loadMore,\n            isLastPage && cssClasses.disabledLoadMore\n          ),\n          disabled: isLastPage,\n          onClick: showMore,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default InfiniteHits;\n","/** @jsx h */\nimport { h } from 'preact';\n\nimport { formatNumber } from '../../lib/formatNumber';\nimport { cx } from '@algolia/ui-components-shared';\n\nimport type { MenuComponentTemplates } from './menu';\n\nconst defaultTemplates: MenuComponentTemplates = {\n  item({ cssClasses, url, label, count }) {\n    return (\n      <a className={cx(cssClasses.link)} href={url}>\n        <span className={cx(cssClasses.label)}>{label}</span>\n        <span className={cx(cssClasses.count)}>{formatNumber(count)}</span>\n      </a>\n    );\n  },\n  showMoreText({ isShowingMore }) {\n    return isShowingMore ? 'Show less' : 'Show more';\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport RefinementList from '../../components/RefinementList/RefinementList';\nimport type {\n  MenuConnectorParams,\n  MenuRenderState,\n  MenuWidgetDescription,\n} from '../../connectors/menu/connectMenu';\nimport connectMenu from '../../connectors/menu/connectMenu';\nimport defaultTemplates from './defaultTemplates';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport { component } from '../../lib/suit';\nimport type {\n  ComponentCSSClasses,\n  RendererOptions,\n  Template,\n  WidgetFactory,\n} from '../../types';\nimport type { PreparedTemplateProps } from '../../lib/templating';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'menu' });\nconst suit = component('Menu');\n\nexport type MenuCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n  /**\n   * CSS class to add to the root element when no refinements.\n   */\n  noRefinementRoot: string | string[];\n  /**\n   * CSS class to add to the list element.\n   */\n  list: string | string[];\n  /**\n   * CSS class to add to each item element.\n   */\n  item: string | string[];\n  /**\n   * CSS class to add to each selected item element.\n   */\n  selectedItem: string | string[];\n  /**\n   * CSS class to add to each link (when using the default template).\n   */\n  link: string | string[];\n  /**\n   * CSS class to add to each label (when using the default template).\n   */\n  label: string | string[];\n  /**\n   * CSS class to add to each count element (when using the default template).\n   */\n  count: string | string[];\n  /**\n   * CSS class to add to the show more button.\n   */\n  showMore: string | string[];\n  /**\n   * CSS class to add to the disabled show more button.\n   */\n  disabledShowMore: string | string[];\n}>;\n\nexport type MenuTemplates = Partial<{\n  /**\n   * Item template. The string template gets the same values as the function.\n   */\n  item: Template<{\n    count: number;\n    cssClasses: MenuCSSClasses;\n    isRefined: boolean;\n    label: string;\n    url: string;\n    value: string;\n  }>;\n  /**\n   * Template used for the show more text, provided with `isShowingMore` data property.\n   */\n  showMoreText: Template<{\n    isShowingMore: boolean;\n  }>;\n}>;\n\nexport type MenuComponentCSSClasses = ComponentCSSClasses<MenuCSSClasses>;\n\nexport type MenuComponentTemplates = Required<MenuTemplates>;\n\nexport type MenuWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n  /**\n   * Customize the output through templating.\n   */\n  templates?: MenuTemplates;\n  /**\n   * CSS classes to add to the wrapping elements.\n   */\n  cssClasses?: MenuCSSClasses;\n};\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    renderState,\n    templates,\n    showMore,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: MenuComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<MenuComponentTemplates>;\n    };\n    templates: MenuTemplates;\n    showMore?: boolean;\n  }) =>\n  (\n    {\n      refine,\n      items,\n      createURL,\n      instantSearchInstance,\n      isShowingMore,\n      toggleShowMore,\n      canToggleShowMore,\n    }: MenuRenderState & RendererOptions<MenuConnectorParams>,\n    isFirstRendering: boolean\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n      return;\n    }\n\n    const facetValues = items.map((facetValue) => ({\n      ...facetValue,\n      url: createURL(facetValue.value),\n    }));\n\n    render(\n      <RefinementList\n        createURL={createURL}\n        cssClasses={cssClasses}\n        facetValues={facetValues}\n        showMore={showMore}\n        templateProps={renderState.templateProps!}\n        toggleRefinement={refine}\n        toggleShowMore={toggleShowMore}\n        isShowingMore={isShowingMore}\n        canToggleShowMore={canToggleShowMore}\n      />,\n      containerNode\n    );\n  };\n\nexport type MenuWidget = WidgetFactory<\n  MenuWidgetDescription & { $$widgetType: 'ais.menu' },\n  MenuConnectorParams,\n  MenuWidgetParams\n>;\n\nconst menu: MenuWidget = function menu(widgetParams) {\n  const {\n    container,\n    attribute,\n    sortBy,\n    limit,\n    showMore,\n    showMoreLimit,\n    cssClasses: userCssClasses = {},\n    templates = {},\n    transformItems,\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n    selectedItem: cx(\n      suit({ descendantName: 'item', modifierName: 'selected' }),\n      userCssClasses.selectedItem\n    ),\n    link: cx(suit({ descendantName: 'link' }), userCssClasses.link),\n    label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n    count: cx(suit({ descendantName: 'count' }), userCssClasses.count),\n    showMore: cx(suit({ descendantName: 'showMore' }), userCssClasses.showMore),\n    disabledShowMore: cx(\n      suit({ descendantName: 'showMore', modifierName: 'disabled' }),\n      userCssClasses.disabledShowMore\n    ),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n    showMore,\n  });\n\n  const makeWidget = connectMenu(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      attribute,\n      limit,\n      showMore,\n      showMoreLimit,\n      sortBy,\n      transformItems,\n    }),\n    $$widgetType: 'ais.menu',\n  };\n};\n\nexport default menu;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport { find } from '../../lib/utils';\nimport Template from '../Template/Template';\nimport type {\n  MenuSelectCSSClasses,\n  MenuSelectTemplates,\n} from '../../widgets/menu-select/menu-select';\nimport type { MenuRenderState } from '../../connectors/menu/connectMenu';\nimport type { ComponentCSSClasses } from '../../types';\n\nexport type MenuSelectComponentCSSClasses =\n  ComponentCSSClasses<MenuSelectCSSClasses>;\n\nexport type MenuSelectComponentTemplates = Required<MenuSelectTemplates>;\n\ntype MenuItem = {\n  /**\n   * The value of the menu item.\n   **/\n  value: string;\n  /**\n   * Human-readable value of the menu item.\n   **/\n  label: string;\n  /**\n   * Number of results matched after refinement is applied.\n   **/\n  count: number;\n  /**\n   * Indicates if the refinement is applied.\n   **/\n  isRefined: boolean;\n};\n\ntype Props = {\n  cssClasses: MenuSelectComponentCSSClasses;\n  items: MenuItem[];\n  refine: MenuRenderState['refine'];\n  templateProps: {\n    templates: MenuSelectComponentTemplates;\n  };\n};\n\nfunction MenuSelect({ cssClasses, templateProps, items, refine }: Props) {\n  const { value: selectedValue } = find(items, (item) => item.isRefined) || {\n    value: '',\n  };\n\n  return (\n    <div\n      className={cx(\n        cssClasses.root,\n        items.length === 0 && cssClasses.noRefinementRoot\n      )}\n    >\n      <select\n        className={cssClasses.select}\n        value={selectedValue}\n        onChange={(event) => {\n          refine((event.target as HTMLSelectElement).value);\n        }}\n      >\n        <Template\n          {...templateProps}\n          templateKey=\"defaultOption\"\n          rootTagName=\"option\"\n          rootProps={{\n            value: '',\n            className: cssClasses.option,\n          }}\n        />\n\n        {items.map((item) => (\n          <Template\n            {...templateProps}\n            templateKey=\"item\"\n            rootTagName=\"option\"\n            rootProps={{\n              value: item.value,\n              className: cssClasses.option,\n            }}\n            key={item.value}\n            data={item}\n          />\n        ))}\n      </select>\n    </div>\n  );\n}\n\nexport default MenuSelect;\n","import type { MenuSelectComponentTemplates } from '../../components/MenuSelect/MenuSelect';\nimport { formatNumber } from '../../lib/formatNumber';\n\nconst defaultTemplates: MenuSelectComponentTemplates = {\n  item({ label, count }) {\n    return `${label} (${formatNumber(count)})`;\n  },\n  defaultOption() {\n    return 'See all';\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport type {\n  MenuConnectorParams,\n  MenuRenderState,\n  MenuWidgetDescription,\n} from '../../connectors/menu/connectMenu';\nimport connectMenu from '../../connectors/menu/connectMenu';\nimport type {\n  MenuSelectComponentCSSClasses,\n  MenuSelectComponentTemplates,\n} from '../../components/MenuSelect/MenuSelect';\nimport MenuSelect from '../../components/MenuSelect/MenuSelect';\nimport defaultTemplates from './defaultTemplates';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport { component } from '../../lib/suit';\nimport type { RendererOptions, Template, WidgetFactory } from '../../types';\nimport type { PreparedTemplateProps } from '../../lib/templating';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'menu-select' });\nconst suit = component('MenuSelect');\n\nexport type MenuSelectCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n  /**\n   * CSS class to add to the root when there are no items to display\n   */\n  noRefinementRoot: string | string[];\n  /**\n   * CSS class to add to the select element.\n   */\n  select: string | string[];\n  /**\n   * CSS class to add to the option element.\n   */\n  option: string | string[];\n}>;\n\nexport type MenuSelectTemplates = Partial<{\n  /**\n   * Item template, provided with `label`, `count`, `isRefined` and `value` data properties.\n   */\n  item: Template<{\n    label: string;\n    value: string;\n    count: number;\n    isRefined: boolean;\n  }>;\n  /**\n   * Label of the \"see all\" option in the select.\n   */\n  defaultOption: Template;\n}>;\n\nexport type MenuSelectWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n  /**\n   * Customize the output through templating.\n   */\n  templates?: MenuSelectTemplates;\n  /**\n   * CSS classes to add to the wrapping elements.\n   */\n  cssClasses?: MenuSelectCSSClasses;\n};\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    renderState,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: MenuSelectComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<MenuSelectComponentTemplates>;\n    };\n    templates: MenuSelectTemplates;\n  }) =>\n  (\n    {\n      refine,\n      items,\n      instantSearchInstance,\n    }: MenuRenderState & RendererOptions<MenuConnectorParams>,\n    isFirstRendering: boolean\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n      return;\n    }\n\n    render(\n      <MenuSelect\n        cssClasses={cssClasses}\n        items={items}\n        refine={refine}\n        templateProps={renderState.templateProps!}\n      />,\n      containerNode\n    );\n  };\n\nexport type MenuSelectWidget = WidgetFactory<\n  MenuWidgetDescription & { $$widgetType: 'ais.menuSelect' },\n  MenuConnectorParams,\n  MenuSelectWidgetParams\n>;\n\nconst menuSelect: MenuSelectWidget = function menuSelect(widgetParams) {\n  const {\n    container,\n    attribute,\n    sortBy = ['name:asc'],\n    limit = 10,\n    cssClasses: userCssClasses = {},\n    templates = {},\n    transformItems,\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    select: cx(suit({ descendantName: 'select' }), userCssClasses.select),\n    option: cx(suit({ descendantName: 'option' }), userCssClasses.option),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectMenu(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ attribute, limit, sortBy, transformItems }),\n    $$widgetType: 'ais.menuSelect',\n  };\n};\n\nexport default menuSelect;\n","/** @jsx h */\nimport { h } from 'preact';\n\nimport type { NumericMenuComponentTemplates } from './numeric-menu';\n\nconst defaultTemplates: NumericMenuComponentTemplates = {\n  item({ cssClasses, attribute, label, isRefined }) {\n    return (\n      <label className={cssClasses.label}>\n        <input\n          type=\"radio\"\n          className={cssClasses.radio}\n          name={attribute}\n          defaultChecked={isRefined}\n        />\n        <span className={cssClasses.labelText}>{label}</span>\n      </label>\n    );\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport RefinementList from '../../components/RefinementList/RefinementList';\nimport type {\n  NumericMenuConnectorParams,\n  NumericMenuRenderState,\n  NumericMenuWidgetDescription,\n} from '../../connectors/numeric-menu/connectNumericMenu';\nimport connectNumericMenu from '../../connectors/numeric-menu/connectNumericMenu';\nimport defaultTemplates from './defaultTemplates';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport type {\n  ComponentCSSClasses,\n  Renderer,\n  Template,\n  WidgetFactory,\n} from '../../types';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport type { PreparedTemplateProps } from '../../lib/templating';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'numeric-menu' });\nconst suit = component('NumericMenu');\n\nconst renderer =\n  ({\n    containerNode,\n    attribute,\n    cssClasses,\n    renderState,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    attribute: string;\n    cssClasses: NumericMenuComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<NumericMenuTemplates>;\n    };\n    templates: NumericMenuTemplates;\n  }): Renderer<NumericMenuRenderState, Partial<NumericMenuWidgetParams>> =>\n  (\n    { createURL, instantSearchInstance, refine, items },\n    isFirstRendering: boolean\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n      return;\n    }\n\n    render(\n      <RefinementList\n        createURL={createURL}\n        cssClasses={cssClasses}\n        facetValues={items}\n        templateProps={renderState.templateProps!}\n        toggleRefinement={refine}\n        attribute={attribute}\n      />,\n      containerNode\n    );\n  };\n\nexport type NumericMenuCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n\n  /**\n   * CSS class to add to the root element when no refinements.\n   */\n  noRefinementRoot: string | string[];\n\n  /**\n   * CSS class to add to the list element.\n   */\n  list: string | string[];\n\n  /**\n   * CSS class to add to each item element.\n   */\n  item: string | string[];\n\n  /**\n   * CSS class to add to each selected item element.\n   */\n  selectedItem: string | string[];\n\n  /**\n   * CSS class to add to each label element.\n   */\n  label: string | string[];\n\n  /**\n   * CSS class to add to each label text element.\n   */\n  labelText: string | string[];\n\n  /**\n   * CSS class to add to each radio element (when using the default template).\n   */\n  radio: string | string[];\n}>;\n\nexport type NumericMenuComponentCSSClasses =\n  ComponentCSSClasses<NumericMenuCSSClasses>;\n\nexport type NumericMenuTemplates = Partial<{\n  /**\n   * Item template, provided with `label` (the name in the configuration), `isRefined`, `url`, `value` (the setting for the filter) data properties.\n   */\n  item: Template<{\n    /**\n     * The name of the attribute.\n     */\n    attribute: string;\n\n    /**\n     * The label for the option.\n     */\n    label: string;\n\n    /**\n     * The encoded URL of the bounds object with a {start, end} form. This\n     * value can be used verbatim in the webpage and can be read by refine\n     * directly. If you want to inspect the value, you can do JSON.parse(window.decodeURI(value))\n     * to get the object.\n     */\n    value: string;\n\n    /**\n     *  Whether or not the refinement is selected.\n     */\n    isRefined: boolean;\n\n    /**\n     * The URL with the applied refinement.\n     */\n    url: string;\n\n    /**\n     * The CSS classes provided to the widget.\n     */\n    cssClasses: NumericMenuComponentCSSClasses;\n  }>;\n}>;\n\nexport type NumericMenuComponentTemplates = Required<NumericMenuTemplates>;\n\nexport type NumericMenuWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: NumericMenuTemplates;\n\n  /**\n   * CSS classes to add to the wrapping elements.\n   */\n  cssClasses?: NumericMenuCSSClasses;\n};\n\nexport type NumericMenuWidget = WidgetFactory<\n  NumericMenuWidgetDescription & { $$widgetType: 'ais.numericMenu' },\n  NumericMenuConnectorParams,\n  NumericMenuWidgetParams\n>;\n\nconst numericMenu: NumericMenuWidget = function numericMenu(widgetParams) {\n  const {\n    container,\n    attribute,\n    items,\n    cssClasses: userCssClasses = {},\n    templates = {},\n    transformItems,\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n    selectedItem: cx(\n      suit({ descendantName: 'item', modifierName: 'selected' }),\n      userCssClasses.selectedItem\n    ),\n    label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n    radio: cx(suit({ descendantName: 'radio' }), userCssClasses.radio),\n    labelText: cx(\n      suit({ descendantName: 'labelText' }),\n      userCssClasses.labelText\n    ),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    attribute,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectNumericMenu(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      attribute,\n      items,\n      transformItems,\n    }),\n    $$widgetType: 'ais.numericMenu',\n  };\n};\n\nexport default numericMenu;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\n\nimport { isSpecialClick } from '../../lib/utils';\nimport type {\n  PaginationCSSClasses,\n  PaginationTemplates,\n} from '../../widgets/pagination/pagination';\nimport type { ComponentCSSClasses } from '../../types';\n\nexport type PaginationComponentCSSClasses =\n  ComponentCSSClasses<PaginationCSSClasses>;\n\nexport type PaginationComponentTemplates = Required<PaginationTemplates>;\n\nexport type PaginationProps = {\n  createURL(value: number): string;\n  cssClasses: PaginationComponentCSSClasses;\n  templates: PaginationComponentTemplates;\n  currentPage: number;\n  nbPages: number;\n  pages: number[];\n  isFirstPage: boolean;\n  isLastPage: boolean;\n  setCurrentPage(value: number): void;\n  showFirst?: boolean;\n  showLast?: boolean;\n  showPrevious?: boolean;\n  showNext?: boolean;\n};\n\nfunction Pagination(props: PaginationProps) {\n  function createClickHandler(pageNumber: number) {\n    return (event: MouseEvent) => {\n      if (isSpecialClick(event)) {\n        // do not alter the default browser behavior\n        // if one special key is down\n        return;\n      }\n      event.preventDefault();\n      props.setCurrentPage(pageNumber);\n    };\n  }\n\n  return (\n    <div\n      className={cx(\n        props.cssClasses.root,\n        props.nbPages <= 1 && props.cssClasses.noRefinementRoot\n      )}\n    >\n      <ul className={props.cssClasses.list}>\n        {props.showFirst && (\n          <PaginationLink\n            ariaLabel=\"First\"\n            className={props.cssClasses.firstPageItem}\n            isDisabled={props.isFirstPage}\n            label={props.templates.first}\n            pageNumber={0}\n            createURL={props.createURL}\n            cssClasses={props.cssClasses}\n            createClickHandler={createClickHandler}\n          />\n        )}\n\n        {props.showPrevious && (\n          <PaginationLink\n            ariaLabel=\"Previous\"\n            className={props.cssClasses.previousPageItem}\n            isDisabled={props.isFirstPage}\n            label={props.templates.previous}\n            pageNumber={props.currentPage - 1}\n            createURL={props.createURL}\n            cssClasses={props.cssClasses}\n            createClickHandler={createClickHandler}\n          />\n        )}\n\n        {props.pages.map((pageNumber) => (\n          <PaginationLink\n            key={pageNumber}\n            ariaLabel={`${pageNumber + 1}`}\n            className={props.cssClasses.pageItem}\n            isSelected={pageNumber === props.currentPage}\n            label={`${pageNumber + 1}`}\n            pageNumber={pageNumber}\n            createURL={props.createURL}\n            cssClasses={props.cssClasses}\n            createClickHandler={createClickHandler}\n          />\n        ))}\n\n        {props.showNext && (\n          <PaginationLink\n            ariaLabel=\"Next\"\n            className={props.cssClasses.nextPageItem}\n            isDisabled={props.isLastPage}\n            label={props.templates.next}\n            pageNumber={props.currentPage + 1}\n            createURL={props.createURL}\n            cssClasses={props.cssClasses}\n            createClickHandler={createClickHandler}\n          />\n        )}\n\n        {props.showLast && (\n          <PaginationLink\n            ariaLabel=\"Last\"\n            className={props.cssClasses.lastPageItem}\n            isDisabled={props.isLastPage}\n            label={props.templates.last}\n            pageNumber={props.nbPages - 1}\n            createURL={props.createURL}\n            cssClasses={props.cssClasses}\n            createClickHandler={createClickHandler}\n          />\n        )}\n      </ul>\n    </div>\n  );\n}\n\ntype PaginationLinkProps = {\n  label: string;\n  ariaLabel: string;\n  pageNumber: number;\n  isDisabled?: boolean;\n  isSelected?: boolean;\n  className?: string;\n  cssClasses: PaginationComponentCSSClasses;\n  createURL(value: number): string;\n  createClickHandler: (pageNumber: number) => (event: MouseEvent) => void;\n};\n\nfunction PaginationLink({\n  label,\n  ariaLabel,\n  pageNumber,\n  className,\n  isDisabled = false,\n  isSelected = false,\n  cssClasses,\n  createURL,\n  createClickHandler,\n}: PaginationLinkProps) {\n  return (\n    <li\n      className={cx(\n        cssClasses.item,\n        className,\n        isDisabled && cssClasses.disabledItem,\n        isSelected && cssClasses.selectedItem\n      )}\n    >\n      {isDisabled ? (\n        <span\n          className={cssClasses.link}\n          dangerouslySetInnerHTML={{ __html: label }}\n        />\n      ) : (\n        <a\n          className={cssClasses.link}\n          aria-label={ariaLabel}\n          href={createURL(pageNumber)}\n          onClick={createClickHandler(pageNumber)}\n          dangerouslySetInnerHTML={{ __html: label }}\n        />\n      )}\n    </li>\n  );\n}\n\nexport default Pagination;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport type {\n  PaginationComponentCSSClasses,\n  PaginationComponentTemplates,\n} from '../../components/Pagination/Pagination';\nimport Pagination from '../../components/Pagination/Pagination';\nimport type {\n  PaginationConnectorParams,\n  PaginationRenderState,\n  PaginationWidgetDescription,\n} from '../../connectors/pagination/connectPagination';\nimport connectPagination from '../../connectors/pagination/connectPagination';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport type { Renderer, WidgetFactory } from '../../types';\n\nconst suit = component('Pagination');\nconst withUsage = createDocumentationMessageGenerator({ name: 'pagination' });\n\nconst defaultTemplates: PaginationComponentTemplates = {\n  previous: '‹',\n  next: '›',\n  first: '«',\n  last: '»',\n};\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    templates,\n    showFirst,\n    showLast,\n    showPrevious,\n    showNext,\n    scrollToNode,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: PaginationComponentCSSClasses;\n    templates: PaginationComponentTemplates;\n    showFirst: boolean;\n    showLast: boolean;\n    showPrevious: boolean;\n    showNext: boolean;\n    scrollToNode: HTMLElement | false;\n  }): Renderer<PaginationRenderState, Partial<PaginationWidgetParams>> =>\n  (\n    {\n      createURL,\n      currentRefinement,\n      nbPages,\n      pages,\n      isFirstPage,\n      isLastPage,\n      refine,\n    },\n    isFirstRendering\n  ) => {\n    if (isFirstRendering) return;\n\n    const setCurrentPage = (pageNumber: number) => {\n      refine(pageNumber);\n\n      if (scrollToNode !== false) {\n        scrollToNode.scrollIntoView();\n      }\n    };\n\n    render(\n      <Pagination\n        createURL={createURL}\n        cssClasses={cssClasses}\n        currentPage={currentRefinement}\n        templates={templates}\n        nbPages={nbPages}\n        pages={pages}\n        isFirstPage={isFirstPage}\n        isLastPage={isLastPage}\n        setCurrentPage={setCurrentPage}\n        showFirst={showFirst}\n        showLast={showLast}\n        showPrevious={showPrevious}\n        showNext={showNext}\n      />,\n      containerNode\n    );\n  };\n\nexport type PaginationCSSClasses = Partial<{\n  /**\n   * CSS classes added to the root element of the widget.\n   */\n  root: string | string[];\n\n  /**\n   * CSS class to add to the root element of the widget if there are no refinements.\n   */\n  noRefinementRoot: string | string[];\n\n  /**\n   * CSS classes added to the wrapping `<ul>`.\n   */\n  list: string | string[];\n\n  /**\n   * CSS classes added to each `<li>`.\n   */\n  item: string | string[];\n\n  /**\n   * CSS classes added to the first `<li>`.\n   */\n  firstPageItem: string | string[];\n\n  /**\n   * CSS classes added to the last `<li>`.\n   */\n  lastPageItem: string | string[];\n\n  /**\n   * CSS classes added to the previous `<li>`.\n   */\n  previousPageItem: string | string[];\n\n  /**\n   * CSS classes added to the next `<li>`.\n   */\n  nextPageItem: string | string[];\n\n  /**\n   * CSS classes added to page `<li>`.\n   */\n  pageItem: string | string[];\n\n  /**\n   * CSS classes added to the selected `<li>`.\n   */\n  selectedItem: string | string[];\n\n  /**\n   * CSS classes added to the disabled `<li>`.\n   */\n  disabledItem: string | string[];\n\n  /**\n   * CSS classes added to each link.\n   */\n  link: string | string[];\n}>;\n\nexport type PaginationTemplates = Partial<{\n  /**\n   * Label for the Previous link.\n   */\n  previous: string;\n\n  /**\n   * Label for the Next link.\n   */\n  next: string;\n\n  /**\n   * Label for the First link.\n   */\n  first: string;\n\n  /**\n   * Label for the Last link.\n   */\n  last: string;\n}>;\n\nexport type PaginationWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * The max number of pages to browse.\n   */\n  totalPages?: number;\n\n  /**\n   * The number of pages to display on each side of the current page.\n   * @default 3\n   */\n  padding?: number;\n\n  /**\n   * Where to scroll after a click, set to `false` to disable.\n   * @default body\n   */\n  scrollTo?: string | HTMLElement | boolean;\n\n  /**\n   * Whether to show the \"first page\" control\n   * @default true\n   */\n  showFirst?: boolean;\n\n  /**\n   * Whether to show the \"last page\" control\n   * @default true\n   */\n  showLast?: boolean;\n\n  /**\n   * Whether to show the \"next page\" control\n   * @default true\n   */\n  showNext?: boolean;\n\n  /**\n   * Whether to show the \"previous page\" control\n   * @default true\n   */\n  showPrevious?: boolean;\n\n  /**\n   * Text to display in the links.\n   */\n  templates?: PaginationTemplates;\n\n  /**\n   * CSS classes to be added.\n   */\n  cssClasses?: PaginationCSSClasses;\n};\n\nexport type PaginationWidget = WidgetFactory<\n  PaginationWidgetDescription & { $$widgetType: 'ais.pagination' },\n  PaginationConnectorParams,\n  PaginationWidgetParams\n>;\n\nconst pagination: PaginationWidget = function pagination(widgetParams) {\n  const {\n    container,\n    templates: userTemplates = {},\n    cssClasses: userCssClasses = {},\n    totalPages,\n    padding,\n    showFirst = true,\n    showLast = true,\n    showPrevious = true,\n    showNext = true,\n    scrollTo: userScrollTo = 'body',\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const scrollTo = userScrollTo === true ? 'body' : userScrollTo;\n  const scrollToNode = scrollTo !== false ? getContainerNode(scrollTo) : false;\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n    firstPageItem: cx(\n      suit({ descendantName: 'item', modifierName: 'firstPage' }),\n      userCssClasses.firstPageItem\n    ),\n    lastPageItem: cx(\n      suit({ descendantName: 'item', modifierName: 'lastPage' }),\n      userCssClasses.lastPageItem\n    ),\n    previousPageItem: cx(\n      suit({ descendantName: 'item', modifierName: 'previousPage' }),\n      userCssClasses.previousPageItem\n    ),\n    nextPageItem: cx(\n      suit({ descendantName: 'item', modifierName: 'nextPage' }),\n      userCssClasses.nextPageItem\n    ),\n    pageItem: cx(\n      suit({ descendantName: 'item', modifierName: 'page' }),\n      userCssClasses.pageItem\n    ),\n    selectedItem: cx(\n      suit({ descendantName: 'item', modifierName: 'selected' }),\n      userCssClasses.selectedItem\n    ),\n    disabledItem: cx(\n      suit({ descendantName: 'item', modifierName: 'disabled' }),\n      userCssClasses.disabledItem\n    ),\n    link: cx(suit({ descendantName: 'link' }), userCssClasses.link),\n  };\n\n  const templates = {\n    ...defaultTemplates,\n    ...userTemplates,\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    templates,\n    showFirst,\n    showLast,\n    showPrevious,\n    showNext,\n    scrollToNode,\n  });\n\n  const makeWidget = connectPagination(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ totalPages, padding }),\n    $$widgetType: 'ais.pagination',\n  };\n};\n\nexport default pagination;\n","import{options as n,Fragment as t}from\"preact\";var r,u,i,o,f=0,c=[],e=[],a=n.__b,v=n.__r,l=n.diffed,m=n.__c,d=n.unmount;function p(t,r){n.__h&&n.__h(u,t,f||r),f=0;var i=u.__H||(u.__H={__:[],__h:[]});return t>=i.__.length&&i.__.push({__V:e}),i.__[t]}function y(n){return f=1,h(C,n)}function h(n,t,i){var o=p(r++,2);if(o.t=n,!o.__c&&(o.__=[i?i(t):C(void 0,t),function(n){var t=o.__N?o.__N[0]:o.__[0],r=o.t(t,n);t!==r&&(o.__N=[r,o.__[1]],o.__c.setState({}))}],o.__c=u,!u.u)){u.u=!0;var f=u.shouldComponentUpdate;u.shouldComponentUpdate=function(n,t,r){if(!o.__c.__H)return!0;var u=o.__c.__H.__.filter(function(n){return n.__c});if(u.every(function(n){return!n.__N}))return!f||f.call(this,n,t,r);var i=!1;return u.forEach(function(n){if(n.__N){var t=n.__[0];n.__=n.__N,n.__N=void 0,t!==n.__[0]&&(i=!0)}}),!!i&&(!f||f.call(this,n,t,r))}}return o.__N||o.__}function s(t,i){var o=p(r++,3);!n.__s&&B(o.__H,i)&&(o.__=t,o.i=i,u.__H.__h.push(o))}function _(t,i){var o=p(r++,4);!n.__s&&B(o.__H,i)&&(o.__=t,o.i=i,u.__h.push(o))}function A(n){return f=5,T(function(){return{current:n}},[])}function F(n,t,r){f=6,_(function(){return\"function\"==typeof n?(n(t()),function(){return n(null)}):n?(n.current=t(),function(){return n.current=null}):void 0},null==r?r:r.concat(n))}function T(n,t){var u=p(r++,7);return B(u.__H,t)?(u.__V=n(),u.i=t,u.__h=n,u.__V):u.__}function q(n,t){return f=8,T(function(){return n},t)}function x(n){var t=u.context[n.__c],i=p(r++,9);return i.c=n,t?(null==i.__&&(i.__=!0,t.sub(u)),t.props.value):n.__}function P(t,r){n.useDebugValue&&n.useDebugValue(r?r(t):t)}function V(n){var t=p(r++,10),i=y();return t.__=n,u.componentDidCatch||(u.componentDidCatch=function(n,r){t.__&&t.__(n,r),i[1](n)}),[i[0],function(){i[1](void 0)}]}function b(){var n=p(r++,11);return n.__||(n.__=\"P\"+function(n){for(var t=0,r=n.length;r>0;)t=(t<<5)-t+n.charCodeAt(--r)|0;return t}(u.__v.o)+r),n.__}function g(){for(var t;t=c.shift();)if(t.__P&&t.__H)try{t.__H.__h.forEach(w),t.__H.__h.forEach(z),t.__H.__h=[]}catch(r){t.__H.__h=[],n.__e(r,t.__v)}}n.__b=function(n){\"function\"!=typeof n.type||n.o||n.type===t?n.o||(n.o=n.__&&n.__.o?n.__.o:\"\"):n.o=(n.__&&n.__.o?n.__.o:\"\")+(n.__&&n.__.__k?n.__.__k.indexOf(n):0),u=null,a&&a(n)},n.__r=function(n){v&&v(n),r=0;var t=(u=n.__c).__H;t&&(i===u?(t.__h=[],u.__h=[],t.__.forEach(function(n){n.__N&&(n.__=n.__N),n.__V=e,n.__N=n.i=void 0})):(t.__h.forEach(w),t.__h.forEach(z),t.__h=[])),i=u},n.diffed=function(t){l&&l(t);var r=t.__c;r&&r.__H&&(r.__H.__h.length&&(1!==c.push(r)&&o===n.requestAnimationFrame||((o=n.requestAnimationFrame)||k)(g)),r.__H.__.forEach(function(n){n.i&&(n.__H=n.i),n.__V!==e&&(n.__=n.__V),n.i=void 0,n.__V=e})),i=u=null},n.__c=function(t,r){r.some(function(t){try{t.__h.forEach(w),t.__h=t.__h.filter(function(n){return!n.__||z(n)})}catch(u){r.some(function(n){n.__h&&(n.__h=[])}),r=[],n.__e(u,t.__v)}}),m&&m(t,r)},n.unmount=function(t){d&&d(t);var r,u=t.__c;u&&u.__H&&(u.__H.__.forEach(function(n){try{w(n)}catch(n){r=n}}),u.__H=void 0,r&&n.__e(r,u.__v))};var j=\"function\"==typeof requestAnimationFrame;function k(n){var t,r=function(){clearTimeout(u),j&&cancelAnimationFrame(t),setTimeout(n)},u=setTimeout(r,100);j&&(t=requestAnimationFrame(r))}function w(n){var t=u,r=n.__c;\"function\"==typeof r&&(n.__c=void 0,r()),u=t}function z(n){var t=u;n.__c=n.__(),u=t}function B(n,t){return!n||n.length!==t.length||t.some(function(t,r){return t!==n[r]})}function C(n,t){return\"function\"==typeof t?t(n):t}export{q as useCallback,x as useContext,P as useDebugValue,s as useEffect,V as useErrorBoundary,b as useId,F as useImperativeHandle,_ as useLayoutEffect,T as useMemo,h as useReducer,A as useRef,y as useState};\n//# sourceMappingURL=hooks.module.js.map\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport { useState, useEffect, useRef } from 'preact/hooks';\nimport { cx } from '@algolia/ui-components-shared';\nimport Template from '../Template/Template';\nimport type {\n  PanelCSSClasses,\n  PanelSharedOptions,\n  PanelTemplates,\n} from '../../widgets/panel/panel';\nimport type { ComponentCSSClasses, UnknownWidgetFactory } from '../../types';\n\nexport type PanelComponentCSSClasses = ComponentCSSClasses<\n  // `collapseIcon` is only used in the default templates of the widget\n  Omit<PanelCSSClasses, 'collapseIcon'>\n>;\n\nexport type PanelComponentTemplates<TWidget extends UnknownWidgetFactory> =\n  Required<PanelTemplates<TWidget>>;\n\nexport type PanelProps<TWidget extends UnknownWidgetFactory> = {\n  hidden: boolean;\n  collapsible: boolean;\n  isCollapsed: boolean;\n  data: PanelSharedOptions<TWidget>;\n  cssClasses: PanelComponentCSSClasses;\n  templates: PanelComponentTemplates<TWidget>;\n  bodyElement: HTMLElement;\n};\n\nfunction Panel<TWidget extends UnknownWidgetFactory>(\n  props: PanelProps<TWidget>\n) {\n  const [isCollapsed, setIsCollapsed] = useState<boolean>(props.isCollapsed);\n  const [isControlled, setIsControlled] = useState<boolean>(false);\n  const bodyRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const node = bodyRef.current;\n    if (!node) {\n      return undefined;\n    }\n\n    node.appendChild(props.bodyElement);\n\n    return () => {\n      node.removeChild(props.bodyElement);\n    };\n  }, [bodyRef, props.bodyElement]);\n\n  if (!isControlled && props.isCollapsed !== isCollapsed) {\n    setIsCollapsed(props.isCollapsed);\n  }\n\n  return (\n    <div\n      className={cx(\n        props.cssClasses.root,\n        props.hidden && props.cssClasses.noRefinementRoot,\n        props.collapsible && props.cssClasses.collapsibleRoot,\n        isCollapsed && props.cssClasses.collapsedRoot\n      )}\n      hidden={props.hidden}\n    >\n      {props.templates.header && (\n        <div className={props.cssClasses.header}>\n          <Template\n            templates={props.templates}\n            templateKey=\"header\"\n            rootTagName=\"span\"\n            data={props.data}\n          />\n\n          {props.collapsible && (\n            <button\n              className={props.cssClasses.collapseButton}\n              aria-expanded={!isCollapsed}\n              onClick={(event) => {\n                event.preventDefault();\n\n                setIsControlled(true);\n                setIsCollapsed((prevIsCollapsed) => !prevIsCollapsed);\n              }}\n            >\n              <Template\n                templates={props.templates}\n                templateKey=\"collapseButtonText\"\n                rootTagName=\"span\"\n                data={{ collapsed: isCollapsed }}\n              />\n            </button>\n          )}\n        </div>\n      )}\n\n      <div className={props.cssClasses.body} ref={bodyRef} />\n\n      {props.templates.footer && (\n        <Template\n          templates={props.templates}\n          templateKey=\"footer\"\n          rootProps={{\n            className: props.cssClasses.footer,\n          }}\n          data={props.data}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Panel;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport {\n  createDocumentationMessageGenerator,\n  getContainerNode,\n  getObjectType,\n  warning,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport type { PanelComponentCSSClasses } from '../../components/Panel/Panel';\nimport Panel from '../../components/Panel/Panel';\nimport type {\n  Template,\n  RenderOptions,\n  WidgetFactory,\n  InitOptions,\n  Widget,\n} from '../../types';\n\nexport type PanelCSSClasses = Partial<{\n  /**\n   * CSS classes to add to the root element of the widget.\n   */\n  root: string | string[];\n\n  /**\n   * CSS classes to add to the root element of the widget when there's no refinements.\n   */\n  noRefinementRoot: string | string[];\n\n  /**\n   * CSS classes to add to the root element when collapsible (`collapse` is defined).\n   */\n  collapsibleRoot: string | string[];\n\n  /**\n   * CSS classes to add to the root element when collapsed.\n   */\n  collapsedRoot: string | string[];\n\n  /**\n   * CSS classes to add to the collapse button element.\n   */\n  collapseButton: string | string[];\n\n  /**\n   * CSS classes to add to the collapse icon of the button.\n   */\n  collapseIcon: string | string[];\n\n  /**\n   * CSS classes to add to the header.\n   */\n  header: string | string[];\n\n  /**\n   * CSS classes to add to the body.\n   */\n  body: string | string[];\n\n  /**\n   * CSS classes to add to the footer.\n   */\n  footer: string | string[];\n}>;\n\ntype AnyWidgetFactory = WidgetFactory<\n  {\n    $$type: string;\n  },\n  Record<string, any>,\n  // @TODO: this really should be _at least_ { container: string | HTMLElement }\n  // but that or { container: string | HTMLElement; [key: string]: any }\n  // still doesn't allow wider types with another key required.\n  any\n>;\n\nexport type PanelTemplates<TWidget extends AnyWidgetFactory> = Partial<{\n  /**\n   * Template to use for the header.\n   */\n  header: Template<PanelRenderOptions<TWidget>>;\n\n  /**\n   * Template to use for the footer.\n   */\n  footer: Template<PanelRenderOptions<TWidget>>;\n\n  /**\n   * Template to use for collapse button.\n   */\n  collapseButtonText: Template<{ collapsed: boolean }>;\n}>;\n\ntype GetWidgetRenderState<TWidgetFactory extends AnyWidgetFactory> =\n  ReturnType<TWidgetFactory>['getWidgetRenderState'] extends (\n    renderOptions: any\n  ) => infer TRenderState\n    ? TRenderState extends Record<string, unknown>\n      ? TRenderState\n      : never\n    : Record<string, unknown>;\n\nexport type PanelRenderOptions<TWidgetFactory extends AnyWidgetFactory> =\n  RenderOptions & GetWidgetRenderState<TWidgetFactory>;\n\nexport type PanelSharedOptions<TWidgetFactory extends AnyWidgetFactory> = (\n  | InitOptions\n  | RenderOptions\n) &\n  GetWidgetRenderState<TWidgetFactory>;\n\nexport type PanelWidgetParams<TWidgetFactory extends AnyWidgetFactory> = {\n  /**\n   * A function that is called on each render to determine if the\n   * panel should be hidden based on the render options.\n   */\n  hidden?(options: PanelRenderOptions<TWidgetFactory>): boolean;\n\n  /**\n   * A function that is called on each render to determine if the\n   * panel should be collapsed based on the render options.\n   */\n  collapsed?(options: PanelRenderOptions<TWidgetFactory>): boolean;\n\n  /**\n   * The templates to use for the widget.\n   */\n  templates?: PanelTemplates<TWidgetFactory>;\n\n  /**\n   * The CSS classes to override.\n   */\n  cssClasses?: PanelCSSClasses;\n};\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'panel' });\nconst suit = component('Panel');\n\nconst renderer =\n  <TWidget extends AnyWidgetFactory>({\n    containerNode,\n    bodyContainerNode,\n    cssClasses,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    bodyContainerNode: HTMLElement;\n    cssClasses: PanelComponentCSSClasses;\n    templates: Required<PanelTemplates<TWidget>>;\n  }) =>\n  ({\n    options,\n    hidden,\n    collapsible,\n    collapsed,\n  }: {\n    options: PanelSharedOptions<TWidget>;\n    hidden: boolean;\n    collapsible: boolean;\n    collapsed: boolean;\n  }) => {\n    render(\n      <Panel<TWidget>\n        cssClasses={cssClasses}\n        hidden={hidden}\n        collapsible={collapsible}\n        isCollapsed={collapsed}\n        templates={templates}\n        data={options}\n        bodyElement={bodyContainerNode}\n      />,\n      containerNode\n    );\n  };\n\ntype AugmentedWidget<\n  TWidgetFactory extends AnyWidgetFactory,\n  TOverriddenKeys extends keyof Widget = 'init' | 'render' | 'dispose'\n> = Omit<ReturnType<TWidgetFactory>, TOverriddenKeys> &\n  Pick<Required<Widget>, TOverriddenKeys>;\n\nexport type PanelWidget = <TWidgetFactory extends AnyWidgetFactory>(\n  panelWidgetParams?: PanelWidgetParams<TWidgetFactory>\n) => (\n  widgetFactory: TWidgetFactory\n) => (\n  widgetParams: Parameters<TWidgetFactory>[0]\n) => AugmentedWidget<TWidgetFactory>;\n\n/**\n * The panel widget wraps other widgets in a consistent panel design.\n * It also reacts, indicates and sets CSS classes when widgets are no longer relevant for refining.\n */\nconst panel: PanelWidget = (panelWidgetParams) => {\n  const {\n    templates = {},\n    hidden = () => false,\n    collapsed,\n    cssClasses: userCssClasses = {},\n  } = panelWidgetParams || {};\n\n  warning(\n    typeof hidden === 'function',\n    `The \\`hidden\\` option in the \"panel\" widget expects a function returning a boolean (received type ${getObjectType(\n      hidden\n    )}).`\n  );\n\n  warning(\n    typeof collapsed === 'undefined' || typeof collapsed === 'function',\n    `The \\`collapsed\\` option in the \"panel\" widget expects a function returning a boolean (received type ${getObjectType(\n      collapsed\n    )}).`\n  );\n\n  const bodyContainerNode = document.createElement('div');\n  const collapsible = Boolean(collapsed);\n  const collapsedFn = typeof collapsed === 'function' ? collapsed : () => false;\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    collapsibleRoot: cx(\n      suit({ modifierName: 'collapsible' }),\n      userCssClasses.collapsibleRoot\n    ),\n    collapsedRoot: cx(\n      suit({ modifierName: 'collapsed' }),\n      userCssClasses.collapsedRoot\n    ),\n    collapseButton: cx(\n      suit({ descendantName: 'collapseButton' }),\n      userCssClasses.collapseButton\n    ),\n    collapseIcon: cx(\n      suit({ descendantName: 'collapseIcon' }),\n      userCssClasses.collapseIcon\n    ),\n    body: cx(suit({ descendantName: 'body' }), userCssClasses.body),\n    header: cx(suit({ descendantName: 'header' }), userCssClasses.header),\n    footer: cx(suit({ descendantName: 'footer' }), userCssClasses.footer),\n  };\n\n  return (widgetFactory) => (widgetParams) => {\n    if (!(widgetParams && widgetParams.container)) {\n      throw new Error(\n        withUsage(\n          `The \\`container\\` option is required in the widget within the panel.`\n        )\n      );\n    }\n\n    const containerNode = getContainerNode(widgetParams.container);\n\n    const defaultTemplates: Required<PanelTemplates<typeof widgetFactory>> = {\n      header: '',\n      footer: '',\n      collapseButtonText: ({ collapsed: isCollapsed }) =>\n        `<svg\n          class=\"${cssClasses.collapseIcon}\"\n          width=\"1em\"\n          height=\"1em\"\n          viewBox=\"0 0 500 500\"\n        >\n        <path d=\"${\n          isCollapsed ? 'M100 250l300-150v300z' : 'M250 400l150-300H100z'\n        }\" fill=\"currentColor\" />\n        </svg>`,\n    };\n\n    const renderPanel = renderer<typeof widgetFactory>({\n      containerNode,\n      bodyContainerNode,\n      cssClasses,\n      templates: {\n        ...defaultTemplates,\n        ...templates,\n      },\n    });\n\n    const widget = widgetFactory({\n      ...widgetParams,\n      container: bodyContainerNode,\n    });\n\n    // TypeScript somehow loses track of the ...widget type, since it's\n    // not directly returned. Eventually the \"as AugmentedWidget<typeof widgetFactory>\"\n    // will not be needed anymore.\n    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n    return {\n      ...widget,\n      init(...args) {\n        const [renderOptions] = args;\n\n        const options = {\n          ...(widget.getWidgetRenderState\n            ? widget.getWidgetRenderState(renderOptions)\n            : {}),\n          ...renderOptions,\n        };\n\n        renderPanel({\n          options,\n          hidden: true,\n          collapsible,\n          collapsed: false,\n        });\n\n        if (typeof widget.init === 'function') {\n          widget.init.call(this, ...args);\n        }\n      },\n      render(...args) {\n        const [renderOptions] = args;\n\n        const options = {\n          ...((widget.getWidgetRenderState\n            ? widget.getWidgetRenderState(renderOptions)\n            : {}) as GetWidgetRenderState<typeof widgetFactory>),\n          ...renderOptions,\n        };\n\n        renderPanel({\n          options,\n          hidden: Boolean(hidden(options)),\n          collapsible,\n          collapsed: Boolean(collapsedFn(options)),\n        });\n\n        if (typeof widget.render === 'function') {\n          widget.render.call(this, ...args);\n        }\n      },\n      dispose(...args) {\n        render(null, containerNode);\n\n        if (typeof widget.dispose === 'function') {\n          return widget.dispose.call(this, ...args);\n        }\n\n        return undefined;\n      },\n    } as AugmentedWidget<typeof widgetFactory>;\n  };\n};\n\nexport default panel;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport type { ComponentCSSClasses } from '../../types';\nimport type { PoweredByCSSClasses } from '../../widgets/powered-by/powered-by';\n\nexport type PoweredByComponentCSSClasses =\n  ComponentCSSClasses<PoweredByCSSClasses>;\n\nexport type PoweredByProps = {\n  url: string;\n  theme: string;\n  cssClasses: PoweredByComponentCSSClasses;\n};\n\nconst PoweredBy = ({ url, theme, cssClasses }: PoweredByProps) => (\n  <div className={cssClasses.root}>\n    <a\n      href={url}\n      target=\"_blank\"\n      className={cssClasses.link}\n      aria-label=\"Search by Algolia\"\n      rel=\"noopener noreferrer\"\n    >\n      <svg\n        height=\"1.2em\"\n        className={cssClasses.logo}\n        viewBox=\"0 0 572 64\"\n        // This style is necessary as long as it's not included in InstantSearch.css.\n        // For now, InstantSearch.css sets a maximum width of 70px.\n        style={{\n          width: 'auto',\n        }}\n      >\n        <path\n          fill={theme === 'dark' ? '#FFF' : '#36395A'}\n          d=\"M16 48.3c-3.4 0-6.3-.6-8.7-1.7A12.4 12.4 0 0 1 1.9 42C.6 40 0 38 0 35.4h6.5a6.7 6.7 0 0 0 3.9 6c1.4.7 3.3 1.1 5.6 1.1 2.2 0 4-.3 5.4-1a7 7 0 0 0 3-2.4 6 6 0 0 0 1-3.4c0-1.5-.6-2.8-1.9-3.7-1.3-1-3.3-1.6-5.9-1.8l-4-.4c-3.7-.3-6.6-1.4-8.8-3.4a10 10 0 0 1-3.3-7.9c0-2.4.6-4.6 1.8-6.4a12 12 0 0 1 5-4.3c2.2-1 4.7-1.6 7.5-1.6s5.5.5 7.6 1.6a12 12 0 0 1 5 4.4c1.2 1.8 1.8 4 1.8 6.7h-6.5a6.4 6.4 0 0 0-3.5-5.9c-1-.6-2.6-1-4.4-1s-3.2.3-4.4 1c-1.1.6-2 1.4-2.6 2.4-.5 1-.8 2-.8 3.1a5 5 0 0 0 1.5 3.6c1 1 2.6 1.7 4.7 1.9l4 .3c2.8.2 5.2.8 7.2 1.8 2.1 1 3.7 2.2 4.9 3.8a9.7 9.7 0 0 1 1.7 5.8c0 2.5-.7 4.7-2 6.6a13 13 0 0 1-5.6 4.4c-2.4 1-5.2 1.6-8.4 1.6Zm35.6 0c-2.6 0-4.8-.4-6.7-1.3a13 13 0 0 1-4.7-3.5 17.1 17.1 0 0 1-3.6-10.4v-1c0-2 .3-3.8 1-5.6a13 13 0 0 1 7.3-8.3 15 15 0 0 1 6.3-1.4A13.2 13.2 0 0 1 64 24.3c1 2.2 1.6 4.6 1.6 7.2V34H39.4v-4.3h21.8l-1.8 2.2c0-2-.3-3.7-.9-5.1a7.3 7.3 0 0 0-2.7-3.4c-1.2-.7-2.7-1.1-4.6-1.1s-3.4.4-4.7 1.3a8 8 0 0 0-2.9 3.6c-.6 1.5-.9 3.3-.9 5.4 0 2 .3 3.7 1 5.3a7.9 7.9 0 0 0 2.8 3.7c1.3.8 3 1.3 5 1.3s3.8-.5 5.1-1.3c1.3-1 2.1-2 2.4-3.2h6a11.8 11.8 0 0 1-7 8.7 16 16 0 0 1-6.4 1.2ZM80 48c-2.2 0-4-.3-5.7-1a8.4 8.4 0 0 1-3.7-3.3 9.7 9.7 0 0 1-1.3-5.2c0-2 .5-3.8 1.5-5.2a9 9 0 0 1 4.3-3.1c1.8-.7 4-1 6.7-1H89v4.1h-7.5c-2 0-3.4.5-4.4 1.4-1 1-1.6 2.1-1.6 3.6s.5 2.7 1.6 3.6c1 1 2.5 1.4 4.4 1.4 1.1 0 2.2-.2 3.2-.7 1-.4 1.9-1 2.6-2 .6-1 1-2.4 1-4.2l1.7 2.1c-.2 2-.7 3.8-1.5 5.2a9 9 0 0 1-3.4 3.3 12 12 0 0 1-5.3 1Zm9.5-.7v-8.8h-1v-10c0-1.8-.5-3.2-1.4-4.1-1-1-2.4-1.4-4.2-1.4a142.9 142.9 0 0 0-10.2.4v-5.6a74.8 74.8 0 0 1 8.6-.4c3 0 5.5.4 7.5 1.2s3.4 2 4.4 3.6c1 1.7 1.4 4 1.4 6.7v18.4h-5Zm12.9 0V17.8h5v12.3h-.2c0-4.2 1-7.4 2.8-9.5a11 11 0 0 1 8.3-3.1h1v5.6h-2a9 9 0 0 0-6.3 2.2c-1.5 1.5-2.2 3.6-2.2 6.4v15.6h-6.4Zm34.4 1a15 15 0 0 1-6.6-1.3c-1.9-.9-3.4-2-4.7-3.5a15.5 15.5 0 0 1-2.7-5c-.6-1.7-1-3.6-1-5.4v-1c0-2 .4-3.8 1-5.6a15 15 0 0 1 2.8-4.9c1.3-1.5 2.8-2.6 4.6-3.5a16.4 16.4 0 0 1 13.3.2c2 1 3.5 2.3 4.8 4a12 12 0 0 1 2 6H144c-.2-1.6-1-3-2.2-4.1a7.5 7.5 0 0 0-5.2-1.7 8 8 0 0 0-4.7 1.3 8 8 0 0 0-2.8 3.6 13.8 13.8 0 0 0 0 10.3c.6 1.5 1.5 2.7 2.8 3.6s2.8 1.3 4.8 1.3c1.5 0 2.7-.2 3.8-.8a7 7 0 0 0 2.6-2c.7-1 1-2 1.2-3.2h6.2a11 11 0 0 1-2 6.2 15.1 15.1 0 0 1-11.8 5.5Zm19.7-1v-40h6.4V31h-1.3c0-3 .4-5.5 1.1-7.6a9.7 9.7 0 0 1 3.5-4.8A9.9 9.9 0 0 1 172 17h.3c3.5 0 6 1.1 7.9 3.5 1.7 2.3 2.6 5.7 2.6 10v16.8h-6.4V29.6c0-2.1-.6-3.8-1.8-5a6.4 6.4 0 0 0-4.8-1.8c-2 0-3.7.7-5 2a7.8 7.8 0 0 0-1.9 5.5v17h-6.4Zm63.8 1a12.2 12.2 0 0 1-10.9-6.2 19 19 0 0 1-1.8-7.3h1.4v12.5h-5.1v-40h6.4v19.8l-2 3.5c.2-3.1.8-5.7 1.9-7.7a11 11 0 0 1 4.4-4.5c1.8-1 3.9-1.5 6.1-1.5a13.4 13.4 0 0 1 12.8 9.1c.7 1.9 1 3.8 1 6v1c0 2.2-.3 4.1-1 6a13.6 13.6 0 0 1-13.2 9.4Zm-1.2-5.5a8.4 8.4 0 0 0 7.9-5c.7-1.5 1.1-3.3 1.1-5.3s-.4-3.8-1.1-5.3a8.7 8.7 0 0 0-3.2-3.6 9.6 9.6 0 0 0-9.2-.2 8.5 8.5 0 0 0-3.3 3.2c-.8 1.4-1.3 3-1.3 5v2.3a9 9 0 0 0 1.3 4.8 9 9 0 0 0 3.4 3c1.4.7 2.8 1 4.4 1Zm27.3 3.9-10-28.9h6.5l9.5 28.9h-6Zm-7.5 12.2v-5.7h4.9c1 0 2-.1 2.9-.4a4 4 0 0 0 2-1.4c.4-.7.9-1.6 1.2-2.7l8.6-30.9h6.2l-9.3 32.4a14 14 0 0 1-2.5 5 8.9 8.9 0 0 1-4 2.8c-1.5.6-3.4.9-5.6.9h-4.4Zm9-12.2v-5.2h6.4v5.2H248Z\"\n        />\n        <path\n          fill={theme === 'dark' ? '#FFF' : '#003DFF'}\n          d=\"M534.4 9.1H528a.8.8 0 0 1-.7-.7V1.8c0-.4.2-.7.6-.8l6.5-1c.4 0 .8.2.9.6v7.8c0 .4-.4.7-.8.7zM428 35.2V.8c0-.5-.3-.8-.7-.8h-.2l-6.4 1c-.4 0-.7.4-.7.8v35c0 1.6 0 11.8 12.3 12.2.5 0 .8-.4.8-.8V43c0-.4-.3-.7-.6-.8-4.5-.5-4.5-6-4.5-7zm106.5-21.8H528c-.4 0-.7.4-.7.8v34c0 .4.3.8.7.8h6.5c.4 0 .8-.4.8-.8v-34c0-.5-.4-.8-.8-.8zm-17.7 21.8V.8c0-.5-.3-.8-.8-.8l-6.5 1c-.4 0-.7.4-.7.8v35c0 1.6 0 11.8 12.3 12.2.4 0 .8-.4.8-.8V43c0-.4-.3-.7-.7-.8-4.4-.5-4.4-6-4.4-7zm-22.2-20.6a16.5 16.5 0 0 1 8.6 9.3c.8 2.2 1.3 4.8 1.3 7.5a19.4 19.4 0 0 1-4.6 12.6 14.8 14.8 0 0 1-5.2 3.6c-2 .9-5.2 1.4-6.8 1.4a21 21 0 0 1-6.7-1.4 15.4 15.4 0 0 1-8.6-9.3 21.3 21.3 0 0 1 0-14.4 15.2 15.2 0 0 1 8.6-9.3c2-.8 4.3-1.2 6.7-1.2s4.6.4 6.7 1.2zm-6.7 27.6c2.7 0 4.7-1 6.2-3s2.2-4.3 2.2-7.8-.7-6.3-2.2-8.3-3.5-3-6.2-3-4.7 1-6.1 3c-1.5 2-2.2 4.8-2.2 8.3s.7 5.8 2.2 7.8 3.5 3 6.2 3zm-88.8-28.8c-6.2 0-11.7 3.3-14.8 8.2a18.6 18.6 0 0 0 4.8 25.2c1.8 1.2 4 1.8 6.2 1.7s.1 0 .1 0h.9c4.2-.7 8-4 9.1-8.1v7.4c0 .4.3.7.8.7h6.4a.7.7 0 0 0 .7-.7V14.2c0-.5-.3-.8-.7-.8h-13.5zm6.3 26.5a9.8 9.8 0 0 1-5.7 2h-.5a10 10 0 0 1-9.2-14c1.4-3.7 5-6.3 9-6.3h6.4v18.3zm152.3-26.5h13.5c.5 0 .8.3.8.7v33.7c0 .4-.3.7-.8.7h-6.4a.7.7 0 0 1-.8-.7v-7.4c-1.2 4-4.8 7.4-9 8h-.1a4.2 4.2 0 0 1-.5.1h-.9a10.3 10.3 0 0 1-7-2.6c-4-3.3-6.5-8.4-6.5-14.2 0-3.7 1-7.2 3-10 3-5 8.5-8.3 14.7-8.3zm.6 28.4c2.2-.1 4.2-.6 5.7-2V21.7h-6.3a9.8 9.8 0 0 0-9 6.4 10.2 10.2 0 0 0 9.1 13.9h.5zM452.8 13.4c-6.2 0-11.7 3.3-14.8 8.2a18.5 18.5 0 0 0 3.6 24.3 10.4 10.4 0 0 0 13 .6c2.2-1.5 3.8-3.7 4.5-6.1v7.8c0 2.8-.8 5-2.2 6.3-1.5 1.5-4 2.2-7.5 2.2l-6-.3c-.3 0-.7.2-.8.5l-1.6 5.5c-.1.4.1.8.5 1h.1c2.8.4 5.5.6 7 .6 6.3 0 11-1.4 14-4.1 2.7-2.5 4.2-6.3 4.5-11.4V14.2c0-.5-.4-.8-.8-.8h-13.5zm6.3 8.2v18.3a9.6 9.6 0 0 1-5.6 2h-1a10.3 10.3 0 0 1-8.8-14c1.4-3.7 5-6.3 9-6.3h6.4zM291 31.5A32 32 0 0 1 322.8 0h30.8c.6 0 1.2.5 1.2 1.2v61.5c0 1.1-1.3 1.7-2.2 1l-19.2-17a18 18 0 0 1-11 3.4 18.1 18.1 0 1 1 18.2-14.8c-.1.4-.5.7-.9.6-.1 0-.3 0-.4-.2l-3.8-3.4c-.4-.3-.6-.8-.7-1.4a12 12 0 1 0-2.4 8.3c.4-.4 1-.5 1.6-.2l14.7 13.1v-46H323a26 26 0 1 0 10 49.7c.8-.4 1.6-.2 2.3.3l3 2.7c.3.2.3.7 0 1l-.2.2a32 32 0 0 1-47.2-28.6z\"\n        />\n      </svg>\n    </a>\n  </div>\n);\n\nexport default PoweredBy;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport type { PoweredByComponentCSSClasses } from '../../components/PoweredBy/PoweredBy';\nimport PoweredBy from '../../components/PoweredBy/PoweredBy';\nimport type {\n  PoweredByConnectorParams,\n  PoweredByRenderState,\n  PoweredByWidgetDescription,\n} from '../../connectors/powered-by/connectPoweredBy';\nimport connectPoweredBy from '../../connectors/powered-by/connectPoweredBy';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport type { Renderer, WidgetFactory } from '../../types';\n\nconst suit = component('PoweredBy');\nconst withUsage = createDocumentationMessageGenerator({ name: 'powered-by' });\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: PoweredByComponentCSSClasses;\n  }): Renderer<PoweredByRenderState, Partial<PoweredByWidgetParams>> =>\n  ({ url, widgetParams }, isFirstRendering) => {\n    if (isFirstRendering) {\n      const { theme = 'light' } = widgetParams;\n\n      render(\n        <PoweredBy cssClasses={cssClasses} url={url} theme={theme} />,\n        containerNode\n      );\n\n      return;\n    }\n  };\n\nexport type PoweredByCSSClasses = Partial<{\n  /**\n   * CSS class to add to the wrapping element.\n   */\n  root: string | string[];\n\n  /**\n   * CSS class to add to the link.\n   */\n  link: string | string[];\n\n  /**\n   * CSS class to add to the SVG logo.\n   */\n  logo: string | string[];\n}>;\n\nexport type PoweredByWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * The theme of the logo.\n   * @default 'light'\n   */\n  theme?: 'light' | 'dark';\n\n  /**\n   * CSS classes to add.\n   */\n  cssClasses?: PoweredByCSSClasses;\n};\n\nexport type PoweredByWidget = WidgetFactory<\n  PoweredByWidgetDescription & { $$widgetType: 'ais.poweredBy' },\n  PoweredByConnectorParams,\n  PoweredByWidgetParams\n>;\n\nconst poweredBy: PoweredByWidget = function poweredBy(widgetParams) {\n  const {\n    container,\n    cssClasses: userCssClasses = {},\n    theme = 'light',\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(\n      suit(),\n      suit({ modifierName: theme === 'dark' ? 'dark' : 'light' }),\n      userCssClasses.root\n    ),\n    link: cx(suit({ descendantName: 'link' }), userCssClasses.link),\n    logo: cx(suit({ descendantName: 'logo' }), userCssClasses.logo),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n  });\n\n  const makeWidget = connectPoweredBy(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ theme }),\n    $$widgetType: 'ais.poweredBy',\n  };\n};\n\nexport default poweredBy;\n","import type { WidgetFactory } from '../../types';\nimport { createDocumentationMessageGenerator, noop } from '../../lib/utils';\nimport type {\n  ParamTrackedFilters,\n  ParamTransformRuleContexts,\n  QueryRulesConnectorParams,\n  QueryRulesWidgetDescription,\n} from '../../connectors/query-rules/connectQueryRules';\nimport connectQueryRules from '../../connectors/query-rules/connectQueryRules';\n\nexport type QueryRuleContextWidgetParams = {\n  trackedFilters: ParamTrackedFilters;\n  transformRuleContexts?: ParamTransformRuleContexts;\n};\n\nexport type QueryRuleContextWidget = WidgetFactory<\n  QueryRulesWidgetDescription & { $$widgetType: 'ais.queryRuleContext' },\n  QueryRulesConnectorParams,\n  QueryRuleContextWidgetParams\n>;\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'query-rule-context',\n});\n\nconst queryRuleContext: QueryRuleContextWidget = (\n  widgetParams = {} as QueryRuleContextWidgetParams\n) => {\n  if (!widgetParams.trackedFilters) {\n    throw new Error(withUsage('The `trackedFilters` option is required.'));\n  }\n\n  return {\n    ...connectQueryRules<QueryRuleContextWidgetParams>(noop)(widgetParams),\n    $$widgetType: 'ais.queryRuleContext',\n  };\n};\n\nexport default queryRuleContext;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport type { ComponentCSSClasses } from '../../types';\nimport type {\n  QueryRuleCustomDataCSSClasses,\n  QueryRuleCustomDataTemplates,\n} from '../../widgets/query-rule-custom-data/query-rule-custom-data';\nimport Template from '../Template/Template';\n\nexport type QueryRuleCustomDataComponentCSSClasses =\n  ComponentCSSClasses<QueryRuleCustomDataCSSClasses>;\n\nexport type QueryRuleCustomDataComponentTemplates =\n  Required<QueryRuleCustomDataTemplates>;\n\nexport type QueryRuleCustomDataProps = {\n  cssClasses: QueryRuleCustomDataComponentCSSClasses;\n  templates: QueryRuleCustomDataComponentTemplates;\n  items: any[];\n};\n\nconst QueryRuleCustomData = ({\n  cssClasses,\n  templates,\n  items,\n}: QueryRuleCustomDataProps) => (\n  <Template\n    templateKey=\"default\"\n    templates={templates}\n    rootProps={{ className: cssClasses.root }}\n    data={{ items }}\n  />\n);\n\nexport default QueryRuleCustomData;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport type { WidgetFactory, Template } from '../../types';\nimport type {\n  QueryRulesConnectorParams,\n  QueryRulesRenderState,\n  QueryRulesWidgetDescription,\n} from '../../connectors/query-rules/connectQueryRules';\nimport connectQueryRules from '../../connectors/query-rules/connectQueryRules';\nimport type {\n  QueryRuleCustomDataComponentCSSClasses,\n  QueryRuleCustomDataComponentTemplates,\n} from '../../components/QueryRuleCustomData/QueryRuleCustomData';\nimport CustomData from '../../components/QueryRuleCustomData/QueryRuleCustomData';\nimport type { PreparedTemplateProps } from '../../lib/templating';\n\nexport type QueryRuleCustomDataCSSClasses = Partial<{\n  root: string | string[];\n}>;\n\nexport type QueryRuleCustomDataTemplates = Partial<{\n  default: Template<{ items: any[] }>;\n}>;\n\nexport type QueryRuleCustomDataWidgetParams = {\n  container: string | HTMLElement;\n  cssClasses?: QueryRuleCustomDataCSSClasses;\n  templates?: QueryRuleCustomDataTemplates;\n};\n\nexport type QueryRuleCustomDataWidget = WidgetFactory<\n  QueryRulesWidgetDescription & { $$widgetType: 'ais.queryRuleCustomData' },\n  QueryRulesConnectorParams,\n  QueryRuleCustomDataWidgetParams\n>;\n\nexport const defaultTemplates: QueryRuleCustomDataComponentTemplates = {\n  default: ({ items }) => JSON.stringify(items, null, 2),\n};\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'query-rule-custom-data',\n});\n\nconst suit = component('QueryRuleCustomData');\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: QueryRuleCustomDataComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<QueryRuleCustomDataComponentTemplates>;\n    };\n    templates: QueryRuleCustomDataComponentTemplates;\n  }) =>\n  ({ items }: QueryRulesRenderState) => {\n    render(\n      <CustomData\n        cssClasses={cssClasses}\n        templates={templates}\n        items={items}\n      />,\n      containerNode\n    );\n  };\n\nconst queryRuleCustomData: QueryRuleCustomDataWidget = (widgetParams) => {\n  const {\n    container,\n    cssClasses: userCssClasses = {},\n    templates: userTemplates = {},\n    transformItems = ((items) =>\n      items) as QueryRulesConnectorParams['transformItems'],\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n  };\n\n  const containerNode = getContainerNode(container);\n  const templates = {\n    ...defaultTemplates,\n    ...userTemplates,\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectQueryRules(specializedRenderer, () => {\n    render(null, containerNode);\n  });\n\n  return {\n    ...makeWidget({\n      transformItems,\n    }),\n    $$widgetType: 'ais.queryRuleCustomData',\n  };\n};\n\nexport default queryRuleCustomData;\n","/** @jsx h */\n\nimport { h, Component } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport Template from '../Template/Template';\nimport type {\n  RangeInputCSSClasses,\n  RangeInputTemplates,\n} from '../../widgets/range-input/range-input';\nimport type {\n  Range,\n  RangeBoundaries,\n} from '../../connectors/range/connectRange';\nimport type { ComponentCSSClasses } from '../../types';\n\nexport type RangeInputComponentCSSClasses =\n  ComponentCSSClasses<RangeInputCSSClasses>;\n\nexport type RangeInputComponentTemplates = Required<RangeInputTemplates>;\n\nexport type RangeInputProps = {\n  min?: number;\n  max?: number;\n  step: number;\n  values: Partial<Range>;\n  cssClasses: RangeInputComponentCSSClasses;\n  templateProps: {\n    templates: RangeInputComponentTemplates;\n  };\n  refine(rangeValue: RangeBoundaries): void;\n};\n\nclass RangeInput extends Component<RangeInputProps, Partial<Range>> {\n  public state = {\n    min: this.props.values.min,\n    max: this.props.values.max,\n  };\n\n  public componentWillReceiveProps(nextProps: RangeInputProps) {\n    this.setState({\n      min: nextProps.values.min,\n      max: nextProps.values.max,\n    });\n  }\n\n  private onInput = (key: string) => (event: Event) => {\n    const { value } = event.currentTarget as HTMLInputElement;\n\n    this.setState({\n      [key]: Number(value),\n    });\n  };\n\n  private onSubmit = (event: Event) => {\n    event.preventDefault();\n\n    this.props.refine([this.state.min, this.state.max]);\n  };\n\n  public render() {\n    const { min: minValue, max: maxValue } = this.state;\n    const { min, max, step, cssClasses, templateProps } = this.props;\n    const isDisabled = min && max ? min >= max : false;\n    const hasRefinements = Boolean(minValue || maxValue);\n    const rootClassNames = cx(\n      cssClasses.root,\n      !hasRefinements && cssClasses.noRefinement\n    );\n\n    return (\n      <div className={rootClassNames}>\n        <form className={cssClasses.form} onSubmit={this.onSubmit}>\n          <label className={cssClasses.label}>\n            <input\n              className={cx(cssClasses.input, cssClasses.inputMin)}\n              type=\"number\"\n              min={min}\n              max={max}\n              step={step}\n              value={minValue ?? ''}\n              onInput={this.onInput('min')}\n              placeholder={min?.toString()}\n              disabled={isDisabled}\n            />\n          </label>\n\n          <Template\n            {...templateProps}\n            templateKey=\"separatorText\"\n            rootTagName=\"span\"\n            rootProps={{\n              className: cssClasses.separator,\n            }}\n          />\n\n          <label className={cssClasses.label}>\n            <input\n              className={cx(cssClasses.input, cssClasses.inputMax)}\n              type=\"number\"\n              min={min}\n              max={max}\n              step={step}\n              value={maxValue ?? ''}\n              onInput={this.onInput('max')}\n              placeholder={max?.toString()}\n              disabled={isDisabled}\n            />\n          </label>\n\n          <Template\n            {...templateProps}\n            templateKey=\"submitText\"\n            rootTagName=\"button\"\n            rootProps={{\n              type: 'submit',\n              className: cssClasses.submit,\n              disabled: isDisabled,\n            }}\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RangeInput;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport type {\n  RangeInputComponentCSSClasses,\n  RangeInputComponentTemplates,\n} from '../../components/RangeInput/RangeInput';\nimport RangeInput from '../../components/RangeInput/RangeInput';\nimport type {\n  RangeConnectorParams,\n  RangeRenderState,\n  RangeWidgetDescription,\n} from '../../connectors/range/connectRange';\nimport connectRange from '../../connectors/range/connectRange';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport { component } from '../../lib/suit';\nimport type { Renderer, Template, WidgetFactory } from '../../types';\nimport type { PreparedTemplateProps } from '../../lib/templating';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'range-input' });\nconst suit = component('RangeInput');\n\nconst defaultTemplates: RangeInputComponentTemplates = {\n  separatorText() {\n    return 'to';\n  },\n  submitText() {\n    return 'Go';\n  },\n};\n\nexport type RangeInputTemplates = Partial<{\n  /**\n   * The label of the separator, between min and max.\n   * @default \"to\"\n   */\n  separatorText: Template;\n  /**\n   * The label of the submit button\n   * @default \"Go\"\n   */\n  submitText: Template;\n}>;\n\nexport type RangeInputCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n  /**\n   * CSS class to add to the root element when there's no refinements.\n   */\n  noRefinement: string | string[];\n  /**\n   * CSS class to add to the form element.\n   */\n  form: string | string[];\n  /**\n   * CSS class to add to the label element.\n   */\n  label: string | string[];\n  /**\n   * CSS class to add to the input element.\n   */\n  input: string | string[];\n  /**\n   * CSS class to add to the min input element.\n   */\n  inputMin: string | string[];\n  /**\n   * CSS class to add to the max input element.\n   */\n  separator: string | string[];\n  /**\n   * CSS class to add to the separator of the form.\n   */\n  inputMax: string | string[];\n  /**\n   * CSS class to add to the submit button of the form.\n   */\n  submit: string | string[];\n}>;\n\nexport type RangeInputWidgetParams = {\n  /**\n   * Valid CSS Selector as a string or DOMElement.\n   */\n  container: string | HTMLElement;\n  /**\n   * Name of the attribute for faceting.\n   */\n  attribute: string;\n  /**\n   * Minimal slider value, default to automatically computed from the result set.\n   */\n  min?: number;\n  /**\n   * Maximal slider value, defaults to automatically computed from the result set.\n   */\n  max?: number;\n  /**\n   * Number of digits after decimal point to use.\n   * @default 0\n   */\n  precision?: number;\n  /**\n   * Labels to use for the widget.\n   */\n  templates?: RangeInputTemplates;\n  /**\n   * CSS classes to add.\n   */\n  cssClasses?: RangeInputCSSClasses;\n};\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    renderState,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: RangeInputComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<RangeInputComponentTemplates>;\n    };\n    templates: RangeInputTemplates;\n  }): Renderer<RangeRenderState, Partial<RangeInputWidgetParams>> =>\n  (\n    { refine, range, start, widgetParams, instantSearchInstance },\n    isFirstRendering\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n      return;\n    }\n\n    const { min: rangeMin, max: rangeMax } = range;\n    const [minValue, maxValue] = start;\n\n    const step = 1 / Math.pow(10, widgetParams.precision || 0);\n\n    const values = {\n      min:\n        minValue !== -Infinity && minValue !== rangeMin ? minValue : undefined,\n      max:\n        maxValue !== Infinity && maxValue !== rangeMax ? maxValue : undefined,\n    };\n\n    render(\n      <RangeInput\n        min={rangeMin}\n        max={rangeMax}\n        step={step}\n        values={values}\n        cssClasses={cssClasses}\n        refine={refine}\n        templateProps={renderState.templateProps!}\n      />,\n      containerNode\n    );\n  };\n\nexport type RangeInputWidget = WidgetFactory<\n  Omit<RangeWidgetDescription, '$$type'> & {\n    $$widgetType: 'ais.rangeInput';\n    $$type: 'ais.rangeInput';\n  },\n  RangeConnectorParams,\n  RangeInputWidgetParams\n>;\n\nconst rangeInput: RangeInputWidget = function rangeInput(widgetParams) {\n  const {\n    container,\n    attribute,\n    min,\n    max,\n    precision = 0,\n    cssClasses: userCssClasses = {},\n    templates = {},\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinement: cx(suit({ modifierName: 'noRefinement' })),\n    form: cx(suit({ descendantName: 'form' }), userCssClasses.form),\n    label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n    input: cx(suit({ descendantName: 'input' }), userCssClasses.input),\n    inputMin: cx(\n      suit({ descendantName: 'input', modifierName: 'min' }),\n      userCssClasses.inputMin\n    ),\n    inputMax: cx(\n      suit({ descendantName: 'input', modifierName: 'max' }),\n      userCssClasses.inputMax\n    ),\n    separator: cx(\n      suit({ descendantName: 'separator' }),\n      userCssClasses.separator\n    ),\n    submit: cx(suit({ descendantName: 'submit' }), userCssClasses.submit),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    templates,\n    renderState: {},\n  });\n\n  const makeWidget = connectRange(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      attribute,\n      min,\n      max,\n      precision,\n    }),\n\n    $$type: 'ais.rangeInput',\n    $$widgetType: 'ais.rangeInput',\n  };\n};\n\nexport default rangeInput;\n","/**\n * This is a fork of Rheostat for Preact X.\n *\n * @see https://github.com/airbnb/rheostat\n */\n\n/** @jsx h */\n\nimport type { ComponentChildren, ComponentType, JSX } from 'preact';\nimport { h, Component, createRef } from 'preact';\n\ntype BoundingBox = {\n  height: number;\n  left: number;\n  top: number;\n  width: number;\n};\n\nconst KEYS = {\n  DOWN: 40,\n  END: 35,\n  ESC: 27,\n  HOME: 36,\n  LEFT: 37,\n  PAGE_DOWN: 34,\n  PAGE_UP: 33,\n  RIGHT: 39,\n  UP: 38,\n} as const;\nconst PERCENT_EMPTY = 0;\nconst PERCENT_FULL = 100;\n\nfunction getPosition(value: number, min: number, max: number) {\n  return ((value - min) / (max - min)) * 100;\n}\n\nfunction getValue(pos: number, min: number, max: number) {\n  const decimal = pos / 100;\n\n  if (pos === 0) {\n    return min;\n  } else if (pos === 100) {\n    return max;\n  }\n\n  return Math.round((max - min) * decimal + min);\n}\n\nfunction getClassName(props: Props) {\n  const orientation =\n    props.orientation === 'vertical'\n      ? 'rheostat-vertical'\n      : 'rheostat-horizontal';\n\n  return ['rheostat', orientation]\n    .concat(props.className!.split(' '))\n    .join(' ');\n}\n\nfunction getHandleFor(ev: Event) {\n  return Number(\n    (ev.currentTarget as HTMLElement).getAttribute('data-handle-key')\n  );\n}\n\nfunction killEvent(ev: Event) {\n  ev.stopPropagation();\n  ev.preventDefault();\n}\n\nfunction Button(props: JSX.IntrinsicElements['button']) {\n  return <button {...props} type=\"button\" />;\n}\n\n// Preact doesn't have builtin types for Style, JSX.HTMLAttributes['style'] is just object\n// maybe migrate to csstype later?\ntype Style = {\n  position?: 'absolute';\n  top?: number | string;\n  left?: number | string;\n  height?: string;\n  width?: string;\n};\n\nexport type PitProps = {\n  children: number | string;\n  style: Style;\n};\n\nexport type HandleProps = {\n  'aria-valuemax'?: number;\n  'aria-valuemin'?: number;\n  'aria-valuenow'?: number;\n  'aria-disabled': boolean;\n  'data-handle-key': number;\n  className: 'rheostat-handle';\n  key: string;\n  onClick: (e: MouseEvent) => void;\n  onKeyDown?: (e: KeyboardEvent) => void;\n  onMouseDown?: (e: MouseEvent) => void;\n  onTouchStart?: (e: TouchEvent) => void;\n  role: 'slider';\n  style: JSX.HTMLAttributes['style'];\n  tabIndex: number;\n};\n\ntype Props = {\n  children?: ComponentChildren;\n  className?: string;\n  disabled?: boolean;\n  handle?: ComponentType<HandleProps>;\n  max?: number;\n  min?: number;\n  onClick?(...args: unknown[]): unknown;\n  onChange?(...args: unknown[]): unknown;\n  onKeyPress?(...args: unknown[]): unknown;\n  onSliderDragEnd?(...args: unknown[]): unknown;\n  onSliderDragMove?(...args: unknown[]): unknown;\n  onSliderDragStart?(...args: unknown[]): unknown;\n  onValuesUpdated?(...args: unknown[]): unknown;\n  orientation?: 'horizontal' | 'vertical';\n  pitComponent?: ComponentType<PitProps>;\n  pitPoints?: number[];\n  progressBar?: ComponentType<JSX.HTMLAttributes>;\n  snap?: boolean;\n  snapPoints?: number[];\n  values?: number[];\n};\n\ntype State = {\n  className: string;\n  handlePos: number[];\n  handleDimensions: number;\n  mousePos: { x: number; y: number } | null;\n  sliderBox: Partial<BoundingBox>;\n  slidingIndex: number | null;\n  values: number[];\n};\n\nclass Rheostat extends Component<Props, State> {\n  public static defaultProps = {\n    className: '',\n    children: null,\n    disabled: false,\n    handle: Button,\n    max: PERCENT_FULL,\n    min: PERCENT_EMPTY,\n    onClick: null,\n    onChange: null,\n    onKeyPress: null,\n    onSliderDragEnd: null,\n    onSliderDragMove: null,\n    onSliderDragStart: null,\n    onValuesUpdated: null,\n    orientation: 'horizontal',\n    pitComponent: null,\n    pitPoints: [],\n    progressBar: 'div',\n    snap: false,\n    snapPoints: [],\n    values: [PERCENT_EMPTY],\n  };\n\n  public state: State = {\n    className: getClassName(this.props),\n    // non-null thanks to defaultProps\n    handlePos: this.props.values!.map((value) =>\n      getPosition(value, this.props.min!, this.props.max!)\n    ),\n    handleDimensions: 0,\n    mousePos: null,\n    sliderBox: {},\n    slidingIndex: null,\n    // non-null thanks to defaultProps\n    values: this.props.values!,\n  };\n\n  private rheostat = createRef<HTMLDivElement>();\n\n  public constructor(props: Props) {\n    super(props);\n\n    this.getPublicState = this.getPublicState.bind(this);\n    this.getSliderBoundingBox = this.getSliderBoundingBox.bind(this);\n    this.getProgressStyle = this.getProgressStyle.bind(this);\n    this.getMinValue = this.getMinValue.bind(this);\n    this.getMaxValue = this.getMaxValue.bind(this);\n    this.getHandleDimensions = this.getHandleDimensions.bind(this);\n    this.getClosestSnapPoint = this.getClosestSnapPoint.bind(this);\n    this.getSnapPosition = this.getSnapPosition.bind(this);\n    this.getNextPositionForKey = this.getNextPositionForKey.bind(this);\n    this.getNextState = this.getNextState.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.getClosestHandle = this.getClosestHandle.bind(this);\n    this.setStartSlide = this.setStartSlide.bind(this);\n    this.startMouseSlide = this.startMouseSlide.bind(this);\n    this.startTouchSlide = this.startTouchSlide.bind(this);\n    this.handleMouseSlide = this.handleMouseSlide.bind(this);\n    this.handleTouchSlide = this.handleTouchSlide.bind(this);\n    this.handleSlide = this.handleSlide.bind(this);\n    this.endSlide = this.endSlide.bind(this);\n    this.handleKeydown = this.handleKeydown.bind(this);\n    this.validatePosition = this.validatePosition.bind(this);\n    this.validateValues = this.validateValues.bind(this);\n    this.canMove = this.canMove.bind(this);\n    this.fireChangeEvent = this.fireChangeEvent.bind(this);\n    this.slideTo = this.slideTo.bind(this);\n    this.updateNewValues = this.updateNewValues.bind(this);\n  }\n\n  public componentWillReceiveProps(nextProps: Required<Props>) {\n    const { className, disabled, min, max, orientation } = this.props;\n    const { values, slidingIndex } = this.state;\n\n    const minMaxChanged = nextProps.min !== min || nextProps.max !== max;\n\n    const valuesChanged =\n      values.length !== nextProps.values.length ||\n      values.some((value, idx) => nextProps.values[idx] !== value);\n\n    const orientationChanged =\n      nextProps.className !== className ||\n      nextProps.orientation !== orientation;\n\n    const willBeDisabled = nextProps.disabled && !disabled;\n\n    if (orientationChanged) {\n      this.setState({\n        className: getClassName(nextProps),\n      });\n    }\n\n    if (minMaxChanged || valuesChanged) this.updateNewValues(nextProps);\n\n    if (willBeDisabled && slidingIndex !== null) {\n      this.endSlide();\n    }\n  }\n\n  private getPublicState() {\n    const { min, max } = this.props;\n    const { values } = this.state;\n\n    return { max, min, values };\n  }\n\n  private getSliderBoundingBox(): BoundingBox {\n    // only gets called after render, so it will always be defined\n    const node = this.rheostat.current!;\n    const rect = node.getBoundingClientRect();\n\n    return {\n      height: rect.height || node.clientHeight,\n      left: rect.left,\n      top: rect.top,\n      width: rect.width || node.clientWidth,\n    };\n  }\n\n  private getProgressStyle(idx: number): Style {\n    const { handlePos } = this.state;\n\n    const value = handlePos[idx];\n\n    if (idx === 0) {\n      return this.props.orientation === 'vertical'\n        ? { height: `${value}%`, top: 0 }\n        : { left: 0, width: `${value}%` };\n    }\n\n    const prevValue = handlePos[idx - 1];\n    const diffValue = value - prevValue;\n\n    return this.props.orientation === 'vertical'\n      ? { height: `${diffValue}%`, top: `${prevValue}%` }\n      : { left: `${prevValue}%`, width: `${diffValue}%` };\n  }\n\n  private getMinValue(idx: number) {\n    return this.state.values[idx - 1]\n      ? Math.max(this.props.min!, this.state.values[idx - 1])\n      : this.props.min;\n  }\n\n  private getMaxValue(idx: number) {\n    return this.state.values[idx + 1]\n      ? Math.min(this.props.max!, this.state.values[idx + 1])\n      : this.props.max;\n  }\n\n  private getHandleDimensions(ev: Event, sliderBox: BoundingBox) {\n    const handleNode = (ev.currentTarget as HTMLElement) || null;\n\n    if (!handleNode) return 0;\n\n    return this.props.orientation === 'vertical'\n      ? ((handleNode.clientHeight / sliderBox.height) * PERCENT_FULL) / 2\n      : ((handleNode.clientWidth / sliderBox.width) * PERCENT_FULL) / 2;\n  }\n\n  private getClosestSnapPoint(value: number) {\n    // non-null thanks to defaultProps\n    if (!this.props.snapPoints!.length) return value;\n\n    return this.props.snapPoints!.reduce((snapTo, snap) =>\n      Math.abs(snapTo - value) < Math.abs(snap - value) ? snapTo : snap\n    );\n  }\n\n  private getSnapPosition(positionPercent: number) {\n    if (!this.props.snap) return positionPercent;\n\n    const { max, min } = this.props as Required<Props>;\n\n    const value = getValue(positionPercent, min, max);\n\n    const snapValue = this.getClosestSnapPoint(value);\n\n    return getPosition(snapValue, min, max);\n  }\n\n  private getNextPositionForKey(idx: number, keyCode: number) {\n    const { handlePos, values } = this.state;\n    const { max, min, snapPoints } = this.props as Required<Props>;\n\n    const shouldSnap = this.props.snap;\n\n    let proposedValue = values[idx];\n    let proposedPercentage = handlePos[idx];\n    const originalPercentage = proposedPercentage;\n    let stepValue = 1;\n\n    if (max >= 100) {\n      proposedPercentage = Math.round(proposedPercentage);\n    } else {\n      stepValue = 100 / (max - min);\n    }\n\n    let currentIndex: number | null = null;\n\n    if (shouldSnap) {\n      currentIndex = snapPoints.indexOf(this.getClosestSnapPoint(values[idx]));\n    }\n\n    type StepMultiplier = { [key: number]: (value: number) => number };\n\n    const stepMultiplier: StepMultiplier = {\n      [KEYS.LEFT]: (v) => v * -1,\n      [KEYS.RIGHT]: (v) => v,\n      [KEYS.UP]: (v) => v,\n      [KEYS.DOWN]: (v) => v * -1,\n      [KEYS.PAGE_DOWN]: (v) => (v > 1 ? -v : v * -10),\n      [KEYS.PAGE_UP]: (v) => (v > 1 ? v : v * 10),\n    };\n\n    if (Object.prototype.hasOwnProperty.call(stepMultiplier, keyCode)) {\n      proposedPercentage += stepMultiplier[keyCode](stepValue);\n\n      if (shouldSnap) {\n        if (!currentIndex) {\n          // nothing happens\n        } else if (proposedPercentage > originalPercentage) {\n          // move cursor right unless overflow\n          if (currentIndex < snapPoints.length - 1) {\n            proposedValue = snapPoints[currentIndex + 1];\n          }\n          // move cursor left unless there is overflow\n        } else if (currentIndex > 0) {\n          proposedValue = snapPoints[currentIndex - 1];\n        }\n      }\n    } else if (keyCode === KEYS.HOME) {\n      proposedPercentage = PERCENT_EMPTY;\n\n      if (shouldSnap) {\n        proposedValue = snapPoints[0];\n      }\n    } else if (keyCode === KEYS.END) {\n      proposedPercentage = PERCENT_FULL;\n\n      if (shouldSnap) {\n        proposedValue = snapPoints[snapPoints.length - 1];\n      }\n    } else {\n      return null;\n    }\n\n    return shouldSnap\n      ? getPosition(proposedValue, min, max)\n      : proposedPercentage;\n  }\n\n  private getNextState(idx: number, proposedPosition: number) {\n    const { handlePos } = this.state;\n    const { max, min } = this.props as Required<Props>;\n\n    const actualPosition = this.validatePosition(idx, proposedPosition);\n\n    const nextHandlePos = handlePos.map((pos, index) =>\n      index === idx ? actualPosition : pos\n    );\n\n    return {\n      handlePos: nextHandlePos,\n      values: nextHandlePos.map((pos) => getValue(pos, min, max)),\n    };\n  }\n\n  private getClosestHandle(positionPercent: number) {\n    const { handlePos } = this.state;\n\n    return handlePos.reduce((closestIdx, _node, idx) => {\n      const challenger = Math.abs(handlePos[idx] - positionPercent);\n      const current = Math.abs(handlePos[closestIdx] - positionPercent);\n      return challenger < current ? idx : closestIdx;\n    }, 0);\n  }\n\n  private setStartSlide(ev: MouseEvent | TouchEvent, x: number, y: number) {\n    const sliderBox = this.getSliderBoundingBox();\n\n    this.setState({\n      handleDimensions: this.getHandleDimensions(ev, sliderBox),\n      mousePos: { x, y },\n      sliderBox,\n      slidingIndex: getHandleFor(ev),\n    });\n  }\n\n  private startMouseSlide(ev: MouseEvent) {\n    this.setStartSlide(ev, ev.clientX, ev.clientY);\n\n    document.addEventListener('mousemove', this.handleMouseSlide, false);\n    document.addEventListener('mouseup', this.endSlide, false);\n\n    killEvent(ev);\n  }\n\n  private startTouchSlide(ev: TouchEvent) {\n    if (ev.changedTouches.length > 1) return;\n\n    const touch = ev.changedTouches[0];\n\n    this.setStartSlide(ev, touch.clientX, touch.clientY);\n\n    document.addEventListener('touchmove', this.handleTouchSlide, false);\n    document.addEventListener('touchend', this.endSlide, false);\n\n    if (this.props.onSliderDragStart) this.props.onSliderDragStart();\n\n    killEvent(ev);\n  }\n\n  private handleMouseSlide(ev: MouseEvent) {\n    if (this.state.slidingIndex === null) return;\n    this.handleSlide(ev.clientX, ev.clientY);\n    killEvent(ev);\n  }\n\n  private handleTouchSlide(ev: TouchEvent) {\n    if (this.state.slidingIndex === null) return;\n\n    if (ev.changedTouches.length > 1) {\n      this.endSlide();\n      return;\n    }\n\n    const touch = ev.changedTouches[0];\n\n    this.handleSlide(touch.clientX, touch.clientY);\n    killEvent(ev);\n  }\n\n  private handleSlide(x: number, y: number) {\n    const { slidingIndex: idx, sliderBox } = this.state;\n\n    const positionPercent =\n      this.props.orientation === 'vertical'\n        ? ((y - sliderBox.top!) / sliderBox.height!) * PERCENT_FULL\n        : ((x - sliderBox.left!) / sliderBox.width!) * PERCENT_FULL;\n\n    this.slideTo(idx!, positionPercent);\n\n    if (this.canMove(idx!, positionPercent)) {\n      // update mouse positions\n      this.setState({ mousePos: { x, y } });\n      if (this.props.onSliderDragMove) this.props.onSliderDragMove();\n    }\n  }\n\n  private endSlide() {\n    const idx = this.state.slidingIndex;\n\n    this.setState({ slidingIndex: null });\n\n    document.removeEventListener('mouseup', this.endSlide, false);\n    document.removeEventListener('touchend', this.endSlide, false);\n    document.removeEventListener('touchmove', this.handleTouchSlide, false);\n    document.removeEventListener('mousemove', this.handleMouseSlide, false);\n\n    if (this.props.onSliderDragEnd) this.props.onSliderDragEnd();\n    if (this.props.snap) {\n      const positionPercent = this.getSnapPosition(this.state.handlePos[idx!]);\n      this.slideTo(idx!, positionPercent, () => this.fireChangeEvent());\n    } else {\n      this.fireChangeEvent();\n    }\n  }\n\n  private handleClick(ev: MouseEvent) {\n    if ((ev.target as HTMLDivElement).getAttribute('data-handle-key')) {\n      return;\n    }\n\n    // Calculate the position of the slider on the page so we can determine\n    // the position where you click in relativity.\n    const sliderBox = this.getSliderBoundingBox();\n\n    const positionDecimal =\n      this.props.orientation === 'vertical'\n        ? (ev.clientY - sliderBox.top) / sliderBox.height\n        : (ev.clientX - sliderBox.left) / sliderBox.width;\n\n    const positionPercent = positionDecimal * PERCENT_FULL;\n\n    const handleId = this.getClosestHandle(positionPercent);\n\n    const validPositionPercent = this.getSnapPosition(positionPercent);\n\n    // Move the handle there\n    this.slideTo(handleId, validPositionPercent, () => this.fireChangeEvent());\n\n    if (this.props.onClick) this.props.onClick();\n  }\n\n  private handleKeydown(ev: KeyboardEvent) {\n    const idx = getHandleFor(ev);\n\n    if (ev.keyCode === KEYS.ESC) {\n      (ev.currentTarget as HTMLElement).blur();\n      return;\n    }\n\n    const proposedPercentage = this.getNextPositionForKey(idx, ev.keyCode);\n\n    if (proposedPercentage === null) return;\n\n    if (this.canMove(idx, proposedPercentage)) {\n      this.slideTo(idx, proposedPercentage, () => this.fireChangeEvent());\n      if (this.props.onKeyPress) this.props.onKeyPress();\n    }\n\n    killEvent(ev);\n  }\n\n  // Make sure the proposed position respects the bounds and\n  // does not collide with other handles too much.\n  private validatePosition(idx: number, proposedPosition: number) {\n    const { handlePos, handleDimensions } = this.state;\n\n    return Math.max(\n      Math.min(\n        proposedPosition,\n        handlePos[idx + 1] !== undefined\n          ? handlePos[idx + 1] - handleDimensions\n          : PERCENT_FULL // 100% is the highest value\n      ),\n      handlePos[idx - 1] !== undefined\n        ? handlePos[idx - 1] + handleDimensions\n        : PERCENT_EMPTY // 0% is the lowest value\n    );\n  }\n\n  private validateValues(proposedValues: number[], props: Required<Props>) {\n    const { max, min } = props || this.props;\n\n    return proposedValues.map((value, idx, values) => {\n      const realValue = Math.max(Math.min(value, max), min);\n\n      if (values.length && realValue < values[idx - 1]) {\n        return values[idx - 1];\n      }\n\n      return realValue;\n    });\n  }\n\n  public canMove(idx: number, proposedPosition: number) {\n    const { handlePos, handleDimensions } = this.state;\n\n    if (proposedPosition < PERCENT_EMPTY) return false;\n    if (proposedPosition > PERCENT_FULL) return false;\n\n    const nextHandlePosition =\n      handlePos[idx + 1] !== undefined\n        ? handlePos[idx + 1] - handleDimensions\n        : Infinity;\n\n    if (proposedPosition > nextHandlePosition) return false;\n\n    const prevHandlePosition =\n      handlePos[idx - 1] !== undefined\n        ? handlePos[idx - 1] + handleDimensions\n        : -Infinity;\n\n    if (proposedPosition < prevHandlePosition) return false;\n\n    return true;\n  }\n\n  public fireChangeEvent() {\n    const { onChange } = this.props;\n    if (onChange) onChange(this.getPublicState());\n  }\n\n  public slideTo(\n    idx: number,\n    proposedPosition: number,\n    onAfterSet?: () => void\n  ) {\n    const nextState = this.getNextState(idx, proposedPosition);\n\n    this.setState(nextState, () => {\n      const { onValuesUpdated } = this.props;\n      if (onValuesUpdated) onValuesUpdated(this.getPublicState());\n      if (onAfterSet) onAfterSet();\n    });\n  }\n\n  public updateNewValues(nextProps: Required<Props>) {\n    const { slidingIndex } = this.state;\n\n    // Don't update while the slider is sliding\n    if (slidingIndex !== null) {\n      return;\n    }\n\n    const { max, min, values } = nextProps;\n\n    const nextValues = this.validateValues(values, nextProps);\n\n    this.setState(\n      {\n        handlePos: nextValues.map((value) => getPosition(value, min, max)),\n        values: nextValues,\n      },\n      () => this.fireChangeEvent()\n    );\n  }\n\n  public render() {\n    const {\n      children,\n      disabled,\n      handle: Handle,\n      max,\n      min,\n      orientation,\n      pitComponent: PitComponent,\n      pitPoints,\n      progressBar: ProgressBar,\n    } = this.props as Required<Props>; // all required thanks to defaultProps\n    const { className, handlePos, values } = this.state;\n\n    return (\n      <div\n        className={className}\n        ref={this.rheostat}\n        onClick={disabled ? undefined : this.handleClick}\n        style={{ position: 'relative' }}\n      >\n        <div className=\"rheostat-background\" />\n        {handlePos.map((pos, idx) => {\n          const handleStyle: Style =\n            orientation === 'vertical'\n              ? { top: `${pos}%`, position: 'absolute' }\n              : { left: `${pos}%`, position: 'absolute' };\n\n          return (\n            <Handle\n              aria-valuemax={this.getMaxValue(idx)}\n              aria-valuemin={this.getMinValue(idx)}\n              aria-valuenow={values[idx]}\n              aria-disabled={disabled}\n              data-handle-key={idx}\n              className=\"rheostat-handle\"\n              key={`handle-${idx}`}\n              onClick={killEvent}\n              onKeyDown={disabled ? undefined : this.handleKeydown}\n              onMouseDown={disabled ? undefined : this.startMouseSlide}\n              onTouchStart={disabled ? undefined : this.startTouchSlide}\n              role=\"slider\"\n              style={handleStyle}\n              tabIndex={0}\n            />\n          );\n        })}\n\n        {handlePos.map((_node, idx, arr) => {\n          if (idx === 0 && arr.length > 1) {\n            return null;\n          }\n\n          return (\n            <ProgressBar\n              className=\"rheostat-progress\"\n              key={`progress-bar-${idx}`}\n              style={this.getProgressStyle(idx)}\n            />\n          );\n        })}\n\n        {PitComponent &&\n          pitPoints.map((n) => {\n            const pos = getPosition(n, min, max);\n            const pitStyle: Style =\n              orientation === 'vertical'\n                ? { top: `${pos}%`, position: 'absolute' }\n                : { left: `${pos}%`, position: 'absolute' };\n\n            return (\n              <PitComponent key={`pit-${n}`} style={pitStyle}>\n                {n}\n              </PitComponent>\n            );\n          })}\n        {children}\n      </div>\n    );\n  }\n}\n\nexport default Rheostat;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport type { PitProps } from './Rheostat';\n\nconst Pit = ({ style, children }: PitProps) => {\n  // first, end & middle\n  const positionValue = Math.round(parseFloat(style.left as string));\n  const shouldDisplayValue = [0, 50, 100].includes(positionValue);\n\n  const value = children as string;\n  const pitValue = Math.round(parseInt(value, 10) * 100) / 100;\n\n  return (\n    <div\n      style={{ ...style, marginLeft: positionValue === 100 ? '-2px' : 0 }}\n      className={cx(\n        'rheostat-marker',\n        'rheostat-marker-horizontal',\n        shouldDisplayValue && 'rheostat-marker-large'\n      )}\n    >\n      {shouldDisplayValue && <div className={'rheostat-value'}>{pitValue}</div>}\n    </div>\n  );\n};\n\nexport default Pit;\n","/** @jsx h */\n\nimport { h, Component } from 'preact';\nimport type { HandleProps } from './Rheostat';\nimport Rheostat from './Rheostat';\nimport { cx } from '@algolia/ui-components-shared';\nimport { range } from '../../lib/utils';\nimport Pit from './Pit';\nimport type { RangeBoundaries } from '../../connectors/range/connectRange';\nimport type {\n  RangeSliderCssClasses,\n  RangeSliderWidgetParams,\n} from '../../widgets/range-slider/range-slider';\nimport type { ComponentCSSClasses } from '../../types';\n\nexport type RangeSliderComponentCSSClasses =\n  ComponentCSSClasses<RangeSliderCssClasses>;\n\nexport type SliderProps = {\n  refine(values: RangeBoundaries): void;\n  min?: number;\n  max?: number;\n  values: RangeBoundaries;\n  pips?: boolean;\n  step?: number;\n  tooltips?: RangeSliderWidgetParams['tooltips'];\n  cssClasses: RangeSliderComponentCSSClasses;\n};\n\nclass Slider extends Component<SliderProps> {\n  private get isDisabled() {\n    return this.props.min! >= this.props.max!;\n  }\n\n  private handleChange = ({ values }: { values: RangeBoundaries }) => {\n    if (!this.isDisabled) {\n      this.props.refine(values);\n    }\n  };\n\n  // creates an array number where to display a pit point on the slider\n  private computeDefaultPitPoints({ min, max }: { min: number; max: number }) {\n    const totalLength = max - min;\n    const steps = 34;\n    const stepsLength = totalLength / steps;\n\n    const pitPoints = [\n      min,\n      ...range({\n        end: steps - 1,\n      }).map((step) => min + stepsLength * (step + 1)),\n      max,\n    ];\n\n    return pitPoints;\n  }\n\n  // creates an array of values where the slider should snap to\n  private computeSnapPoints({\n    min,\n    max,\n    step,\n  }: {\n    min: number;\n    max: number;\n    step?: number;\n  }) {\n    if (!step) return undefined;\n    return [...range({ start: min, end: max, step }), max];\n  }\n\n  private createHandleComponent =\n    (tooltips: RangeSliderWidgetParams['tooltips']) => (props: HandleProps) => {\n      // display only two decimals after comma,\n      // and apply `tooltips.format()` if any\n      const roundedValue =\n        Math.round(\n          // have to cast as a string, as the value given to the prop is a number, but becomes a string when read\n          parseFloat(props['aria-valuenow'] as unknown as string) * 100\n        ) / 100;\n      const value =\n        typeof tooltips === 'object' && tooltips.format\n          ? tooltips.format(roundedValue)\n          : roundedValue;\n\n      const className = cx(\n        props.className,\n        props['data-handle-key'] === 0 && 'rheostat-handle-lower',\n        props['data-handle-key'] === 1 && 'rheostat-handle-upper'\n      );\n\n      return (\n        <div {...props} className={className}>\n          {tooltips && <div className=\"rheostat-tooltip\">{value}</div>}\n        </div>\n      );\n    };\n\n  public render() {\n    const { tooltips, step, pips, values, cssClasses } = this.props;\n\n    // @TODO: figure out why this.props needs to be non-null asserted\n    const { min, max } = this.isDisabled\n      ? { min: this.props.min!, max: this.props.max! + 0.001 }\n      : (this.props as Required<SliderProps>);\n\n    const snapPoints = this.computeSnapPoints({ min, max, step });\n    const pitPoints =\n      pips === false ? [] : this.computeDefaultPitPoints({ min, max });\n\n    return (\n      <div\n        className={cx(\n          cssClasses.root,\n          this.isDisabled && cssClasses.disabledRoot\n        )}\n      >\n        <Rheostat\n          handle={this.createHandleComponent(tooltips)}\n          onChange={this.handleChange}\n          min={min}\n          max={max}\n          pitComponent={Pit}\n          pitPoints={pitPoints}\n          snap={true}\n          snapPoints={snapPoints}\n          values={(this.isDisabled ? [min, max] : values) as number[]}\n          disabled={this.isDisabled}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Slider;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport type { RangeSliderComponentCSSClasses } from '../../components/Slider/Slider';\nimport Slider from '../../components/Slider/Slider';\nimport type {\n  RangeBoundaries,\n  RangeConnectorParams,\n  RangeRenderState,\n  RangeWidgetDescription,\n} from '../../connectors/range/connectRange';\nimport connectRange from '../../connectors/range/connectRange';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport type { Renderer, WidgetFactory } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'range-slider' });\nconst suit = component('RangeSlider');\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    pips,\n    step,\n    tooltips,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: RangeSliderComponentCSSClasses;\n    pips: boolean;\n    step?: number;\n    tooltips: RangeSliderWidgetParams['tooltips'];\n  }): Renderer<RangeRenderState, Partial<RangeSliderWidgetParams>> =>\n  ({ refine, range, start }, isFirstRendering) => {\n    if (isFirstRendering) {\n      // There's no information at this point, let's render nothing.\n      return;\n    }\n\n    const { min: minRange, max: maxRange } = range;\n\n    const [minStart, maxStart] = start;\n    const minFinite = minStart === -Infinity ? minRange : minStart;\n    const maxFinite = maxStart === Infinity ? maxRange : maxStart;\n\n    // Clamp values to the range for avoid extra rendering & refinement\n    // Should probably be done on the connector side, but we need to stay\n    // backward compatible so we still need to pass [-Infinity, Infinity]\n    const values: RangeBoundaries = [\n      minFinite! > maxRange! ? maxRange : minFinite,\n      maxFinite! < minRange! ? minRange : maxFinite,\n    ];\n\n    render(\n      <Slider\n        cssClasses={cssClasses}\n        refine={refine}\n        min={minRange}\n        max={maxRange}\n        values={values}\n        tooltips={tooltips}\n        step={step}\n        pips={pips}\n      />,\n      containerNode\n    );\n  };\n\nexport type RangeSliderCssClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n  /**\n   * CSS class to add to the disabled root element.\n   */\n  disabledRoot: string | string[];\n}>;\n\ntype RangeSliderTooltipOptions = {\n  /**\n   * The function takes the raw value as input, and should return\n   * a string for the label that should be used for this value.\n   * @example\n   * { format(rawValue) {return '$' + Math.round(rawValue).toLocaleString() } }\n   */\n  format(value: number): string;\n};\n\nexport type RangeSliderWidgetParams = {\n  /**\n   * CSS Selector or DOMElement to insert the widget.\n   */\n  container: string | HTMLElement;\n  /**\n   * Name of the attribute for faceting.;\n   */\n  attribute: string;\n  /**\n   * Should we show tooltips or not.\n   * The default tooltip will show the raw value.\n   * You can also provide an object with a format function as an attribute.\n   * So that you can format the tooltip display value as you want.\n   * @default true\n   */\n  tooltips?: boolean | RangeSliderTooltipOptions;\n  /**\n   * CSS classes to add to the wrapping elements.\n   */\n  cssClasses?: RangeSliderCssClasses;\n  /**\n   * Show slider pips.\n   * @default true\n   */\n  pips?: boolean;\n  /**\n   * Number of digits after decimal point to use.\n   * @default 0\n   */\n  precision?: number;\n  /**\n   * Every handle move will jump that number of steps.\n   */\n  step?: number;\n  /**\n   * Minimal slider value, default to automatically computed from the result set.\n   */\n  min?: number;\n  /**\n   * Maximal slider value, defaults to automatically computed from the result set.\n   */\n  max?: number;\n};\n\nexport type RangeSliderWidget = WidgetFactory<\n  Omit<RangeWidgetDescription, '$$type'> & {\n    $$widgetType: 'ais.rangeSlider';\n    $$type: 'ais.rangeSlider';\n  },\n  RangeConnectorParams,\n  RangeSliderWidgetParams\n>;\n\n/**\n * The range slider is a widget which provides a user-friendly way to filter the\n * results based on a single numeric range.\n *\n * @requirements\n * The attribute passed to `attribute` must be declared as an\n * [attribute for faceting](https://www.algolia.com/doc/guides/searching/faceting/#declaring-attributes-for-faceting)\n * in your Algolia settings.\n *\n * The values inside this attribute must be JavaScript numbers (not strings).\n */\nconst rangeSlider: RangeSliderWidget = function rangeSlider(widgetParams) {\n  const {\n    container,\n    attribute,\n    min,\n    max,\n    cssClasses: userCssClasses = {},\n    step,\n    pips = true,\n    precision = 0,\n    tooltips = true,\n  } = widgetParams || {};\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    disabledRoot: cx(\n      suit({ modifierName: 'disabled' }),\n      userCssClasses.disabledRoot\n    ),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    step,\n    pips,\n    tooltips,\n    cssClasses,\n  });\n\n  const makeWidget = connectRange(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ attribute, min, max, precision }),\n\n    $$type: 'ais.rangeSlider',\n    $$widgetType: 'ais.rangeSlider',\n  };\n};\n\nexport default rangeSlider;\n","/** @jsx h */\nimport { h } from 'preact';\n\nimport type { ComponentChild } from 'preact';\nimport type {\n  RatingMenuComponentTemplates,\n  RatingMenuCSSClasses,\n} from './rating-menu';\nimport { formatNumber } from '../../lib/formatNumber';\nimport { cx } from '@algolia/ui-components-shared';\n\ntype ItemWrapperProps = { children: ComponentChild } & {\n  value: string;\n  count: number;\n  url: string;\n  cssClasses: RatingMenuCSSClasses;\n};\n\nfunction ItemWrapper({\n  children,\n  count,\n  value,\n  url,\n  cssClasses,\n}: ItemWrapperProps) {\n  if (count) {\n    return (\n      <a\n        className={cx(cssClasses.link)}\n        aria-label={`${value} & up`}\n        href={url}\n      >\n        {children}\n      </a>\n    );\n  }\n\n  return (\n    <div className={cx(cssClasses.link)} aria-label={`${value} & up`} disabled>\n      {children}\n    </div>\n  );\n}\n\nconst defaultTemplates: RatingMenuComponentTemplates = {\n  item({ count, value, url, stars, cssClasses }) {\n    return (\n      <ItemWrapper\n        count={count}\n        value={value}\n        url={url}\n        cssClasses={cssClasses}\n      >\n        {stars.map((isFull, index) => (\n          <svg\n            key={index}\n            className={cx(\n              cssClasses.starIcon,\n              isFull ? cssClasses.fullStarIcon : cssClasses.emptyStarIcon\n            )}\n            aria-hidden=\"true\"\n            width=\"24\"\n            height=\"24\"\n          >\n            <use\n              xlinkHref={\n                isFull\n                  ? '#ais-RatingMenu-starSymbol'\n                  : '#ais-RatingMenu-starEmptySymbol'\n              }\n            />\n          </svg>\n        ))}\n        <span className={cx(cssClasses.label)}>&amp; Up</span>\n        {count && (\n          <span className={cx(cssClasses.count)}>{formatNumber(count)}</span>\n        )}\n      </ItemWrapper>\n    );\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport RefinementList from '../../components/RefinementList/RefinementList';\nimport type {\n  RatingMenuWidgetDescription,\n  RatingMenuConnectorParams,\n  RatingMenuRenderState,\n} from '../../connectors/rating-menu/connectRatingMenu';\nimport connectRatingMenu from '../../connectors/rating-menu/connectRatingMenu';\nimport defaultTemplates from './defaultTemplates';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport { component } from '../../lib/suit';\nimport type {\n  ComponentCSSClasses,\n  RendererOptions,\n  Template,\n  WidgetFactory,\n} from '../../types';\nimport type { PreparedTemplateProps } from '../../lib/templating';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'rating-menu' });\nconst suit = component('RatingMenu');\n\nexport type RatingMenuTemplates = Partial<{\n  /**\n   * Item template, provided with `name`, `count`, `isRefined`, `url` data properties.\n   */\n  item: Template<{\n    name: string;\n    label: string;\n    value: string;\n    count: number;\n    isRefined: boolean;\n    url: string;\n    stars: [boolean, boolean, boolean, boolean, boolean];\n    cssClasses: RatingMenuCSSClasses;\n    attribute?: string;\n    isFromSearch?: boolean;\n  }>;\n}>;\n\nexport type RatingMenuCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n  /**\n   * CSS class to add to the root element when there's no refinements.\n   */\n  noRefinementRoot: string | string[];\n  /**\n   * CSS class to add to the list element.\n   */\n  list: string | string[];\n  /**\n   * CSS class to add to each item element.\n   */\n  item: string | string[];\n  /**\n   * CSS class to add the selected item element.\n   */\n  selectedItem: string | string[];\n  /**\n   * CSS class to add a disabled item element.\n   */\n  disabledItem: string | string[];\n  /**\n   * CSS class to add to each link element.\n   */\n  link: string | string[];\n  /**\n   * CSS class to add to each star element (when using the default template).\n   */\n  starIcon: string | string[];\n  /**\n   * CSS class to add to each full star element (when using the default template).\n   */\n  fullStarIcon: string | string[];\n  /**\n   * CSS class to add to each empty star element (when using the default template).\n   */\n  emptyStarIcon: string | string[];\n  /**\n   * CSS class to add to each label.\n   */\n  label: string | string[];\n  /**\n   * CSS class to add to each counter.\n   */\n  count: string | string[];\n}>;\n\nexport type RatingMenuComponentCSSClasses =\n  ComponentCSSClasses<RatingMenuCSSClasses>;\n\nexport type RatingMenuComponentTemplates = Required<RatingMenuTemplates>;\n\nexport type RatingMenuWidgetParams = {\n  /**\n   * Place where to insert the widget in your webpage.\n   */\n  container: string | HTMLElement;\n  /**\n   * Name of the attribute in your records that contains the ratings.\n   */\n  attribute: string;\n  /**\n   * The maximum rating value.\n   */\n  max?: number;\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: RatingMenuTemplates;\n  /**\n   * CSS classes to add.\n   */\n  cssClasses?: RatingMenuCSSClasses;\n};\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    templates,\n    renderState,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: RatingMenuComponentCSSClasses;\n    templates: RatingMenuTemplates;\n    renderState: {\n      templateProps?: PreparedTemplateProps<RatingMenuComponentTemplates>;\n    };\n  }) =>\n  (\n    {\n      refine,\n      items,\n      createURL,\n      instantSearchInstance,\n    }: RatingMenuRenderState & RendererOptions<RatingMenuConnectorParams>,\n    isFirstRendering: boolean\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n\n      return;\n    }\n\n    render(\n      <RefinementList\n        createURL={createURL}\n        cssClasses={cssClasses}\n        facetValues={items}\n        templateProps={renderState.templateProps!}\n        toggleRefinement={refine}\n      >\n        <svg style=\"display:none;\">\n          <symbol\n            id={suit({ descendantName: 'starSymbol' })}\n            viewBox=\"0 0 24 24\"\n          >\n            <path d=\"M12 .288l2.833 8.718h9.167l-7.417 5.389 2.833 8.718-7.416-5.388-7.417 5.388 2.833-8.718-7.416-5.389h9.167z\" />\n          </symbol>\n          <symbol\n            id={suit({ descendantName: 'starEmptySymbol' })}\n            viewBox=\"0 0 24 24\"\n          >\n            <path d=\"M12 6.76l1.379 4.246h4.465l-3.612 2.625 1.379 4.246-3.611-2.625-3.612 2.625 1.379-4.246-3.612-2.625h4.465l1.38-4.246zm0-6.472l-2.833 8.718h-9.167l7.416 5.389-2.833 8.718 7.417-5.388 7.416 5.388-2.833-8.718 7.417-5.389h-9.167l-2.833-8.718z\" />\n          </symbol>\n        </svg>\n      </RefinementList>,\n      containerNode\n    );\n  };\n\n/**\n * Rating menu is used for displaying grade like filters. The values are normalized within boundaries.\n *\n * The maximum value can be set (with `max`), the minimum is always 0.\n *\n * @requirements\n * The attribute passed to `attribute` must be declared as an\n * [attribute for faceting](https://www.algolia.com/doc/guides/searching/faceting/#declaring-attributes-for-faceting)\n * in your Algolia settings.\n *\n * The values inside this attribute must be JavaScript numbers (not strings).\n *\n * @type {WidgetFactory}\n * @devNovel RatingMenu\n * @category filter\n * @param {RatingMenuWidgetParams} widgetParams RatingMenu widget options.\n * @return {Widget} A new RatingMenu widget instance.\n * @example\n * search.addWidgets([\n *   instantsearch.widgets.ratingMenu({\n *     container: '#stars',\n *     attribute: 'rating',\n *     max: 5,\n *   })\n * ]);\n */\nexport type RatingMenuWidget = WidgetFactory<\n  RatingMenuWidgetDescription & { $$widgetType: 'ais.ratingMenu' },\n  RatingMenuConnectorParams,\n  RatingMenuWidgetParams\n>;\n\nconst ratingMenu: RatingMenuWidget = function ratingMenu(widgetParams) {\n  const {\n    container,\n    attribute,\n    max = 5,\n    cssClasses: userCssClasses = {},\n    templates = {},\n  } = widgetParams || {};\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n    selectedItem: cx(\n      suit({ descendantName: 'item', modifierName: 'selected' }),\n      userCssClasses.selectedItem\n    ),\n    disabledItem: cx(\n      suit({ descendantName: 'item', modifierName: 'disabled' }),\n      userCssClasses.disabledItem\n    ),\n    link: cx(suit({ descendantName: 'link' }), userCssClasses.link),\n    starIcon: cx(suit({ descendantName: 'starIcon' }), userCssClasses.starIcon),\n    fullStarIcon: cx(\n      suit({ descendantName: 'starIcon', modifierName: 'full' }),\n      userCssClasses.fullStarIcon\n    ),\n    emptyStarIcon: cx(\n      suit({ descendantName: 'starIcon', modifierName: 'empty' }),\n      userCssClasses.emptyStarIcon\n    ),\n    label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n    count: cx(suit({ descendantName: 'count' }), userCssClasses.count),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectRatingMenu(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ attribute, max }),\n    $$widgetType: 'ais.ratingMenu',\n  };\n};\n\nexport default ratingMenu;\n","/** @jsx h */\nimport { h } from 'preact';\n\nimport type { SearchBoxComponentTemplates } from '../../components/SearchBox/SearchBox';\n\nconst defaultTemplate: SearchBoxComponentTemplates = {\n  reset({ cssClasses }) {\n    return (\n      <svg\n        className={cssClasses.resetIcon}\n        viewBox=\"0 0 20 20\"\n        width=\"10\"\n        height=\"10\"\n      >\n        <path d=\"M8.114 10L.944 2.83 0 1.885 1.886 0l.943.943L10 8.113l7.17-7.17.944-.943L20 1.886l-.943.943-7.17 7.17 7.17 7.17.943.944L18.114 20l-.943-.943-7.17-7.17-7.17 7.17-.944.943L0 18.114l.943-.943L8.113 10z\" />\n      </svg>\n    );\n  },\n  submit({ cssClasses }) {\n    return (\n      <svg\n        className={cssClasses.submitIcon}\n        width=\"10\"\n        height=\"10\"\n        viewBox=\"0 0 40 40\"\n      >\n        <path d=\"M26.804 29.01c-2.832 2.34-6.465 3.746-10.426 3.746C7.333 32.756 0 25.424 0 16.378 0 7.333 7.333 0 16.378 0c9.046 0 16.378 7.333 16.378 16.378 0 3.96-1.406 7.594-3.746 10.426l10.534 10.534c.607.607.61 1.59-.004 2.202-.61.61-1.597.61-2.202.004L26.804 29.01zm-10.426.627c7.323 0 13.26-5.936 13.26-13.26 0-7.32-5.937-13.257-13.26-13.257C9.056 3.12 3.12 9.056 3.12 16.378c0 7.323 5.936 13.26 13.258 13.26z\" />\n      </svg>\n    );\n  },\n  loadingIndicator({ cssClasses }) {\n    return (\n      <svg\n        className={cssClasses.loadingIcon}\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 38 38\"\n        stroke=\"#444\"\n      >\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <g transform=\"translate(1 1)\" strokeWidth=\"2\">\n            <circle strokeOpacity=\".5\" cx=\"18\" cy=\"18\" r=\"18\" />\n            <path d=\"M36 18c0-9.94-8.06-18-18-18\">\n              <animateTransform\n                attributeName=\"transform\"\n                type=\"rotate\"\n                from=\"0 18 18\"\n                to=\"360 18 18\"\n                dur=\"1s\"\n                repeatCount=\"indefinite\"\n              />\n            </path>\n          </g>\n        </g>\n      </svg>\n    );\n  },\n};\n\nexport default defaultTemplate;\n","/** @jsx h */\nimport { h } from 'preact';\n\nimport type { RefinementListComponentTemplates } from './refinement-list';\nimport { formatNumber } from '../../lib/formatNumber';\nimport { cx } from '@algolia/ui-components-shared';\n\nconst defaultTemplates: RefinementListComponentTemplates = {\n  item({ cssClasses, count, value, highlighted, isRefined, isFromSearch }) {\n    return (\n      <label className={cx(cssClasses.label)}>\n        <input\n          type=\"checkbox\"\n          className={cx(cssClasses.checkbox)}\n          value={value}\n          defaultChecked={isRefined}\n        />\n        {/* @MAJOR: use the `<Highlight>` component instead */}\n        <span\n          className={cx(cssClasses.labelText)}\n          dangerouslySetInnerHTML={\n            isFromSearch ? { __html: highlighted } : undefined\n          }\n        >\n          {!isFromSearch && highlighted}\n        </span>\n        <span className={cx(cssClasses.count)}>{formatNumber(count)}</span>\n      </label>\n    );\n  },\n  showMoreText({ isShowingMore }) {\n    return isShowingMore ? 'Show less' : 'Show more';\n  },\n  searchableNoResults() {\n    return 'No results';\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport type { RefinementListComponentCSSClasses } from '../../components/RefinementList/RefinementList';\nimport RefinementList from '../../components/RefinementList/RefinementList';\nimport type {\n  RefinementListRenderState,\n  RefinementListConnectorParams,\n  RefinementListWidgetDescription,\n} from '../../connectors/refinement-list/connectRefinementList';\nimport connectRefinementList from '../../connectors/refinement-list/connectRefinementList';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport { component } from '../../lib/suit';\nimport type { Template, WidgetFactory, Renderer } from '../../types';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport searchBoxDefaultTemplates from '../search-box/defaultTemplates';\nimport type { SearchBoxTemplates } from '../search-box/search-box';\nimport type { SearchBoxComponentTemplates } from '../../components/SearchBox/SearchBox';\nimport defaultTemplates from './defaultTemplates';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'refinement-list',\n});\nconst suit = component('RefinementList');\nconst searchBoxSuit = component('SearchBox');\n\nexport type RefinementListOwnCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n  /**\n   * CSS class to add to the root element when no refinements.\n   */\n  noRefinementRoot: string | string[];\n  /**\n   * CSS class to add to the root element with no results.\n   */\n  noResults: string | string[];\n  /**\n   * CSS class to add to the list element.\n   */\n  list: string | string[];\n  /**\n   * CSS class to add to each item element.\n   */\n  item: string | string[];\n  /**\n   * CSS class to add to each selected element.\n   */\n  selectedItem: string | string[];\n  /**\n   * CSS class to add to each label element (when using the default template).\n   */\n  label: string | string[];\n  /**\n   * CSS class to add to each checkbox element (when using the default template).\n   */\n  checkbox: string | string[];\n  /**\n   * CSS class to add to each label text element.\n   */\n  labelText: string | string[];\n  /**\n   * CSS class to add to the show more element\n   */\n  showMore: string | string[];\n  /**\n   * CSS class to add to the disabled show more element\n   */\n  disabledShowMore: string | string[];\n  /**\n   * CSS class to add to each count element (when using the default template).\n   */\n  count: string | string[];\n  /**\n   * CSS class to add to the searchable container.\n   */\n  searchBox: string | string[];\n}>;\n\ntype RefinementListSearchableCSSClasses = Partial<{\n  searchableRoot: string | string[];\n  searchableForm: string | string[];\n  searchableInput: string | string[];\n  searchableSubmit: string | string[];\n  searchableSubmitIcon: string | string[];\n  searchableReset: string | string[];\n  searchableResetIcon: string | string[];\n  searchableLoadingIndicator: string | string[];\n  searchableLoadingIcon: string | string[];\n}>;\n\nexport type RefinementListCSSClasses = RefinementListOwnCSSClasses &\n  RefinementListSearchableCSSClasses;\n\nexport type RefinementListItemData = {\n  /**\n   * The number of occurrences of the facet in the result set.\n   */\n  count: number;\n  /**\n   * True if the value is selected.\n   */\n  isRefined: boolean;\n  /**\n   * The label to display.\n   */\n  label: string;\n  /**\n   * The value used for refining.\n   */\n  value: string;\n  /**\n   * The label highlighted (when using search for facet values). This value is displayed in the default template.\n   */\n  highlighted: string;\n  /**\n   * The url with this refinement selected.\n   */\n  url: string;\n  /**\n   * Object containing all the classes computed for the item.\n   */\n  cssClasses: RefinementListCSSClasses;\n  /**\n   * Whether the `items` prop contains facet values from the global search or from the search inside the items.\n   */\n  isFromSearch: boolean;\n};\n\nexport type RefinementListOwnTemplates = Partial<{\n  /**\n   * Item template, provided with `label`, `highlighted`, `value`, `count`, `isRefined`, `url` data properties.\n   */\n  item: Template<RefinementListItemData>;\n  /**\n   * Template used for the show more text, provided with `isShowingMore` data property.\n   */\n  showMoreText: Template<{ isShowingMore: boolean }>;\n  /**\n   * Templates to use for search for facet values when there are no results.\n   */\n  searchableNoResults: Template;\n}>;\n\ntype RefinementListSearchableTemplates = Partial<{\n  /**\n   * Templates to use for search for facet values submit button.\n   */\n  searchableSubmit: SearchBoxTemplates['submit'];\n  /**\n   * Templates to use for search for facet values reset button.\n   */\n  searchableReset: SearchBoxTemplates['reset'];\n  /**\n   * Templates to use for the search for facet values loading indicator.\n   */\n  searchableLoadingIndicator: SearchBoxTemplates['loadingIndicator'];\n}>;\n\nexport type RefinementListTemplates = RefinementListOwnTemplates &\n  RefinementListSearchableTemplates;\nexport type RefinementListComponentTemplates =\n  Required<RefinementListOwnTemplates>;\n\nexport type RefinementListWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n  /**\n   * Add a search input to let the user search for more facet values. In order\n   * to make this feature work, you need to make the attribute searchable\n   * [using the API](https://www.algolia.com/doc/guides/searching/faceting/?language=js#declaring-a-searchable-attribute-for-faceting)\n   * or [the dashboard](https://www.algolia.com/explorer/display/)\n   */\n  searchable?: boolean;\n  /**\n   * Value of the search field placeholder.\n   */\n  searchablePlaceholder?: string;\n  /**\n   * When `false` the search field will become disabled if there are less items\n   * to display than the `options.limit`, otherwise the search field is always usable.\n   */\n  searchableIsAlwaysActive?: boolean;\n  /**\n   * When activated, it will escape the facet values that are returned from Algolia.\n   * In this case, the surrounding tags will always be `<mark></mark>`.\n   */\n  searchableEscapeFacetValues?: boolean;\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: RefinementListTemplates;\n  /**\n   * CSS classes to add to the wrapping elements.\n   */\n  cssClasses?: RefinementListCSSClasses;\n};\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    templates,\n    searchBoxTemplates,\n    renderState,\n    showMore,\n    searchable,\n    searchablePlaceholder,\n    searchableIsAlwaysActive,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: RefinementListComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<RefinementListComponentTemplates>;\n      searchBoxTemplateProps?: PreparedTemplateProps<SearchBoxComponentTemplates>;\n    };\n    templates: RefinementListOwnTemplates;\n    searchBoxTemplates: SearchBoxTemplates;\n    showMore?: boolean;\n    searchable?: boolean;\n    searchablePlaceholder?: string;\n    searchableIsAlwaysActive?: boolean;\n  }): Renderer<RefinementListRenderState, RefinementListConnectorParams> =>\n  (\n    {\n      refine,\n      items,\n      createURL,\n      searchForItems,\n      isFromSearch,\n      instantSearchInstance,\n      toggleShowMore,\n      isShowingMore,\n      hasExhaustiveItems,\n      canToggleShowMore,\n    },\n    isFirstRendering\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n      renderState.searchBoxTemplateProps = prepareTemplateProps({\n        defaultTemplates: searchBoxDefaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates: searchBoxTemplates,\n      });\n      return;\n    }\n\n    render(\n      <RefinementList\n        createURL={createURL}\n        cssClasses={cssClasses}\n        facetValues={items}\n        templateProps={renderState.templateProps!}\n        searchBoxTemplateProps={renderState.searchBoxTemplateProps}\n        toggleRefinement={refine}\n        searchFacetValues={searchable ? searchForItems : undefined}\n        searchPlaceholder={searchablePlaceholder}\n        searchIsAlwaysActive={searchableIsAlwaysActive}\n        isFromSearch={isFromSearch}\n        showMore={showMore && !isFromSearch && items.length > 0}\n        toggleShowMore={toggleShowMore}\n        isShowingMore={isShowingMore}\n        hasExhaustiveItems={hasExhaustiveItems}\n        canToggleShowMore={canToggleShowMore}\n      />,\n      containerNode\n    );\n  };\n\nexport type RefinementListWidget = WidgetFactory<\n  RefinementListWidgetDescription & { $$widgetType: 'ais.refinementList' },\n  RefinementListConnectorParams,\n  RefinementListWidgetParams\n>;\n\n/**\n * The refinement list widget is one of the most common widget that you can find\n * in a search UI. With this widget, the user can filter the dataset based on facets.\n *\n * The refinement list displays only the most relevant facets for the current search\n * context. The sort option only affects the facet that are returned by the engine,\n * not which facets are returned.\n *\n * This widget also implements search for facet values, which is a mini search inside the\n * values of the facets. This makes easy to deal with uncommon facet values.\n *\n * @requirements\n *\n * The attribute passed to `attribute` must be declared as an\n * [attribute for faceting](https://www.algolia.com/doc/guides/searching/faceting/#declaring-attributes-for-faceting)\n * in your Algolia settings.\n *\n * If you also want to use search for facet values on this attribute, you need to make it searchable using the [dashboard](https://www.algolia.com/explorer/display/) or using the [API](https://www.algolia.com/doc/guides/searching/faceting/#search-for-facet-values).\n */\nconst refinementList: RefinementListWidget = function refinementList(\n  widgetParams\n) {\n  const {\n    container,\n    attribute,\n    operator,\n    sortBy,\n    limit,\n    showMore,\n    showMoreLimit,\n    searchable = false,\n    searchablePlaceholder = 'Search...',\n    searchableEscapeFacetValues = true,\n    searchableIsAlwaysActive = true,\n    cssClasses: userCssClasses = {},\n    templates = {},\n    transformItems,\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const escapeFacetValues = searchable\n    ? Boolean(searchableEscapeFacetValues)\n    : false;\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n    selectedItem: cx(\n      suit({ descendantName: 'item', modifierName: 'selected' }),\n      userCssClasses.selectedItem\n    ),\n    searchBox: cx(\n      suit({ descendantName: 'searchBox' }),\n      userCssClasses.searchBox\n    ),\n    label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n    checkbox: cx(suit({ descendantName: 'checkbox' }), userCssClasses.checkbox),\n    labelText: cx(\n      suit({ descendantName: 'labelText' }),\n      userCssClasses.labelText\n    ),\n    count: cx(suit({ descendantName: 'count' }), userCssClasses.count),\n    noResults: cx(\n      suit({ descendantName: 'noResults' }),\n      userCssClasses.noResults\n    ),\n    showMore: cx(suit({ descendantName: 'showMore' }), userCssClasses.showMore),\n    disabledShowMore: cx(\n      suit({ descendantName: 'showMore', modifierName: 'disabled' }),\n      userCssClasses.disabledShowMore\n    ),\n    searchable: {\n      root: cx(searchBoxSuit(), userCssClasses.searchableRoot),\n      form: cx(\n        searchBoxSuit({ descendantName: 'form' }),\n        userCssClasses.searchableForm\n      ),\n      input: cx(\n        searchBoxSuit({ descendantName: 'input' }),\n        userCssClasses.searchableInput\n      ),\n      submit: cx(\n        searchBoxSuit({ descendantName: 'submit' }),\n        userCssClasses.searchableSubmit\n      ),\n      submitIcon: cx(\n        searchBoxSuit({ descendantName: 'submitIcon' }),\n        userCssClasses.searchableSubmitIcon\n      ),\n      reset: cx(\n        searchBoxSuit({ descendantName: 'reset' }),\n        userCssClasses.searchableReset\n      ),\n      resetIcon: cx(\n        searchBoxSuit({ descendantName: 'resetIcon' }),\n        userCssClasses.searchableResetIcon\n      ),\n      loadingIndicator: cx(\n        searchBoxSuit({ descendantName: 'loadingIndicator' }),\n        userCssClasses.searchableLoadingIndicator\n      ),\n      loadingIcon: cx(\n        searchBoxSuit({ descendantName: 'loadingIcon' }),\n        userCssClasses.searchableLoadingIcon\n      ),\n    },\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    templates,\n    searchBoxTemplates: {\n      submit: templates.searchableSubmit,\n      reset: templates.searchableReset,\n      loadingIndicator: templates.searchableLoadingIndicator,\n    },\n    renderState: {},\n    searchable,\n    searchablePlaceholder,\n    searchableIsAlwaysActive,\n    showMore,\n  });\n\n  const makeWidget = connectRefinementList(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      attribute,\n      operator,\n      limit,\n      showMore,\n      showMoreLimit,\n      sortBy,\n      escapeFacetValues,\n      transformItems,\n    }),\n    $$widgetType: 'ais.refinementList',\n  };\n};\n\nexport default refinementList;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport Template from '../Template/Template';\nimport type {\n  RelevantSortCSSClasses,\n  RelevantSortTemplates,\n} from '../../widgets/relevant-sort/relevant-sort';\nimport type { ComponentCSSClasses } from '../../types';\n\nexport type RelevantSortComponentCSSClasses =\n  ComponentCSSClasses<RelevantSortCSSClasses>;\n\nexport type RelevantSortComponentTemplates = Required<RelevantSortTemplates>;\n\ntype RelevantSortProps = {\n  cssClasses: RelevantSortComponentCSSClasses;\n  templates: RelevantSortComponentTemplates;\n  isRelevantSorted: boolean;\n  isVirtualReplica: boolean;\n  refine(relevancyStrictness: number | undefined): void;\n};\n\nconst RelevantSort = ({\n  cssClasses,\n  templates,\n  isRelevantSorted,\n  isVirtualReplica,\n  refine,\n}: RelevantSortProps) =>\n  isVirtualReplica ? (\n    <div className={cssClasses.root}>\n      <Template\n        templateKey=\"text\"\n        templates={templates}\n        rootProps={{\n          className: cssClasses.text,\n        }}\n        data={{ isRelevantSorted }}\n      />\n      <button\n        type=\"button\"\n        className={cssClasses.button}\n        onClick={() => {\n          if (isRelevantSorted) {\n            refine(0);\n          } else {\n            refine(undefined);\n          }\n        }}\n      >\n        <Template\n          rootTagName=\"span\"\n          templateKey=\"button\"\n          templates={templates}\n          data={{ isRelevantSorted }}\n        />\n      </button>\n    </div>\n  ) : null;\n\nexport default RelevantSort;\n","import type { RelevantSortComponentTemplates } from '../../components/RelevantSort/RelevantSort';\n\nconst defaultTemplates: RelevantSortComponentTemplates = {\n  text() {\n    return '';\n  },\n  button({ isRelevantSorted }) {\n    return isRelevantSorted ? 'See all results' : 'See relevant results';\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport type { WidgetFactory, Template } from '../../types';\nimport type {\n  RelevantSortConnectorParams,\n  RelevantSortRenderState,\n  RelevantSortWidgetDescription,\n} from '../../connectors/relevant-sort/connectRelevantSort';\nimport connectRelevantSort from '../../connectors/relevant-sort/connectRelevantSort';\nimport type {\n  RelevantSortComponentCSSClasses,\n  RelevantSortComponentTemplates,\n} from '../../components/RelevantSort/RelevantSort';\nimport RelevantSort from '../../components/RelevantSort/RelevantSort';\nimport defaultTemplates from './defaultTemplates';\nimport type { PreparedTemplateProps } from '../../lib/templating';\n\nexport type RelevantSortCSSClasses = Partial<{\n  root: string;\n  text: string;\n  button: string;\n}>;\n\nexport type RelevantSortTemplates = Partial<{\n  text: Template<{ isRelevantSorted: boolean }>;\n  button: Template<{ isRelevantSorted: boolean }>;\n}>;\n\nexport type RelevantSortWidgetParams = {\n  container: string | HTMLElement;\n  cssClasses?: RelevantSortCSSClasses;\n  templates?: RelevantSortTemplates;\n};\n\nexport type RelevantSortWidget = WidgetFactory<\n  RelevantSortWidgetDescription & { $$widgetType: 'ais.relevantSort' },\n  RelevantSortConnectorParams,\n  RelevantSortWidgetParams\n>;\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'relevant-sort',\n});\n\nconst suit = component('RelevantSort');\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: RelevantSortComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<RelevantSortComponentTemplates>;\n    };\n    templates: RelevantSortComponentTemplates;\n  }) =>\n  ({ isRelevantSorted, isVirtualReplica, refine }: RelevantSortRenderState) => {\n    render(\n      <RelevantSort\n        cssClasses={cssClasses}\n        templates={templates}\n        isRelevantSorted={isRelevantSorted}\n        isVirtualReplica={isVirtualReplica}\n        refine={refine}\n      />,\n      containerNode\n    );\n  };\n\nconst relevantSort: RelevantSortWidget = (widgetParams) => {\n  const {\n    container,\n    templates: userTemplates = {},\n    cssClasses: userCssClasses = {},\n  } = widgetParams;\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    text: cx(suit({ descendantName: 'text' }), userCssClasses.text),\n    button: cx(suit({ descendantName: 'button' }), userCssClasses.button),\n  };\n  const templates = {\n    ...defaultTemplates,\n    ...userTemplates,\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectRelevantSort(specializedRenderer, () => {\n    render(null, containerNode);\n  });\n\n  return {\n    ...makeWidget({}),\n    $$widgetType: 'ais.relevantSort',\n  };\n};\n\nexport default relevantSort;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport type { WidgetFactory, Template, RendererOptions } from '../../types';\nimport type {\n  SearchBoxConnectorParams,\n  SearchBoxRenderState,\n  SearchBoxWidgetDescription,\n} from '../../connectors/search-box/connectSearchBox';\nimport connectSearchBox from '../../connectors/search-box/connectSearchBox';\nimport type {\n  SearchBoxComponentCSSClasses,\n  SearchBoxComponentTemplates,\n} from '../../components/SearchBox/SearchBox';\nimport SearchBox from '../../components/SearchBox/SearchBox';\nimport defaultTemplates from './defaultTemplates';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'search-box' });\nconst suit = component('SearchBox');\n\nexport type SearchBoxTemplates = Partial<{\n  /**\n   * Template used for displaying the submit button. Can accept a function or a Hogan string.\n   */\n  submit: Template<{ cssClasses: SearchBoxComponentCSSClasses }>;\n  /**\n   * Template used for displaying the reset button. Can accept a function or a Hogan string.\n   */\n  reset: Template<{ cssClasses: SearchBoxComponentCSSClasses }>;\n  /**\n   * Template used for displaying the loading indicator. Can accept a function or a Hogan string.\n   */\n  loadingIndicator: Template<{ cssClasses: SearchBoxComponentCSSClasses }>;\n}>;\n\nexport type SearchBoxCSSClasses = Partial<{\n  /**\n   * CSS class to add to the wrapping `<div>`\n   */\n  root: string | string[];\n  /**\n   * CSS class to add to the form\n   */\n  form: string | string[];\n  /**\n   * CSS class to add to the input.\n   */\n  input: string | string[];\n  /**\n   * CSS classes added to the submit button.\n   */\n  submit: string | string[];\n  /**\n   * CSS classes added to the submit icon.\n   */\n  submitIcon: string | string[];\n  /**\n   * CSS classes added to the reset button.\n   */\n  reset: string | string[];\n  /**\n   * CSS classes added to the reset icon.\n   */\n  resetIcon: string | string[];\n  /**\n   * CSS classes added to the loading indicator element.\n   */\n  loadingIndicator: string | string[];\n  /**\n   * CSS classes added to the loading indicator icon.\n   */\n  loadingIcon: string | string[];\n}>;\n\nexport type SearchBoxWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget\n   */\n  container: string | HTMLElement;\n  /**\n   * The placeholder of the input\n   */\n  placeholder?: string;\n  /**\n   * Whether the input should be autofocused\n   */\n  autofocus?: boolean;\n  /**\n   * If set, trigger the search\n   * once `<Enter>` is pressed only.\n   */\n  searchAsYouType?: boolean;\n  /**\n   * Whether to show the reset button\n   */\n  showReset?: boolean;\n  /**\n   * Whether to show the submit button\n   */\n  showSubmit?: boolean;\n  /**\n   * Whether to show the loading indicator (replaces the submit if\n   * the search is stalled)\n   */\n  showLoadingIndicator?: boolean;\n  /**\n   * CSS classes to add\n   */\n  cssClasses?: SearchBoxCSSClasses;\n\n  /**\n   * Templates used for customizing the rendering of the searchbox\n   */\n  templates?: SearchBoxTemplates;\n  /**\n   * A function that is called every time a new search is done. You\n   * will get the query as the first parameter and a search (query) function to call as the second parameter.\n   * This `queryHook` can be used to debounce the number of searches done from the search box.\n   */\n  queryHook?: (query: string, hook: (value: string) => void) => void;\n};\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    placeholder,\n    templates,\n    autofocus,\n    searchAsYouType,\n    showReset,\n    showSubmit,\n    showLoadingIndicator,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: SearchBoxComponentCSSClasses;\n    placeholder: string;\n    templates: SearchBoxComponentTemplates;\n    autofocus: boolean;\n    searchAsYouType: boolean;\n    showReset: boolean;\n    showSubmit: boolean;\n    showLoadingIndicator: boolean;\n  }) =>\n  ({\n    refine,\n    query,\n    isSearchStalled,\n  }: SearchBoxRenderState & RendererOptions<SearchBoxConnectorParams>) => {\n    render(\n      <SearchBox\n        query={query}\n        placeholder={placeholder}\n        autofocus={autofocus}\n        refine={refine}\n        searchAsYouType={searchAsYouType}\n        templates={templates}\n        showSubmit={showSubmit}\n        showReset={showReset}\n        showLoadingIndicator={showLoadingIndicator}\n        isSearchStalled={isSearchStalled}\n        cssClasses={cssClasses}\n      />,\n      containerNode\n    );\n  };\n\n/**\n * The searchbox widget is used to let the user set a text based query.\n *\n * This is usually the  main entry point to start the search in an instantsearch context. For that\n * reason is usually placed on top, and not hidden so that the user can start searching right\n * away.\n *\n */\nexport type SearchBoxWidget = WidgetFactory<\n  SearchBoxWidgetDescription & { $$widgetType: 'ais.searchBox' },\n  SearchBoxConnectorParams,\n  SearchBoxWidgetParams\n>;\n\nconst searchBox: SearchBoxWidget = function searchBox(widgetParams) {\n  const {\n    container,\n    placeholder = '',\n    cssClasses: userCssClasses = {},\n    autofocus = false,\n    searchAsYouType = true,\n    showReset = true,\n    showSubmit = true,\n    showLoadingIndicator = true,\n    queryHook,\n    templates: userTemplates = {},\n  } = widgetParams || {};\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    form: cx(suit({ descendantName: 'form' }), userCssClasses.form),\n    input: cx(suit({ descendantName: 'input' }), userCssClasses.input),\n    submit: cx(suit({ descendantName: 'submit' }), userCssClasses.submit),\n    submitIcon: cx(\n      suit({ descendantName: 'submitIcon' }),\n      userCssClasses.submitIcon\n    ),\n    reset: cx(suit({ descendantName: 'reset' }), userCssClasses.reset),\n    resetIcon: cx(\n      suit({ descendantName: 'resetIcon' }),\n      userCssClasses.resetIcon\n    ),\n    loadingIndicator: cx(\n      suit({ descendantName: 'loadingIndicator' }),\n      userCssClasses.loadingIndicator\n    ),\n    loadingIcon: cx(\n      suit({ descendantName: 'loadingIcon' }),\n      userCssClasses.loadingIcon\n    ),\n  };\n  const templates = {\n    ...defaultTemplates,\n    ...userTemplates,\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    placeholder,\n    templates,\n    autofocus,\n    searchAsYouType,\n    showReset,\n    showSubmit,\n    showLoadingIndicator,\n  });\n\n  const makeWidget = connectSearchBox(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ queryHook }),\n    $$widgetType: 'ais.searchBox',\n  };\n};\n\nexport default searchBox;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport type { SelectorComponentCSSClasses } from '../../components/Selector/Selector';\nimport Selector from '../../components/Selector/Selector';\nimport type {\n  SortByConnectorParams,\n  SortByItem,\n  SortByRenderState,\n  SortByWidgetDescription,\n} from '../../connectors/sort-by/connectSortBy';\nimport connectSortBy from '../../connectors/sort-by/connectSortBy';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport type { Renderer, TransformItems, WidgetFactory } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'sort-by' });\nconst suit = component('SortBy');\n\nexport type SortByWidgetCssClasses = Partial<{\n  /**\n   * CSS classes added to the outer `<div>`.\n   */\n  root: string | string[];\n  /**\n   * CSS classes added to the parent `<select>`.\n   */\n  select: string | string[];\n  /**\n   * CSS classes added to each `<option>`.\n   */\n  option: string | string[];\n}>;\n\nexport type SortByIndexDefinition = {\n  /**\n   * The name of the index to target.\n   */\n  value: string;\n  /**\n   * The label of the index to display.\n   */\n  label: string;\n};\n\nexport type SortByWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n  /**\n   * Array of objects defining the different indices to choose from.\n   */\n  items: SortByIndexDefinition[];\n  /**\n   * CSS classes to be added.\n   */\n  cssClasses?: SortByWidgetCssClasses;\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<SortByItem>;\n};\n\nexport type SortByWidget = WidgetFactory<\n  SortByWidgetDescription & { $$widgetType: 'ais.sortBy' },\n  SortByConnectorParams,\n  SortByWidgetParams\n>;\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: SelectorComponentCSSClasses;\n  }): Renderer<SortByRenderState, SortByWidgetParams> =>\n  ({ currentRefinement, options, refine }, isFirstRendering) => {\n    if (isFirstRendering) {\n      return;\n    }\n\n    render(\n      <div className={cssClasses.root}>\n        <Selector\n          cssClasses={cssClasses}\n          currentValue={currentRefinement}\n          options={options}\n          setValue={refine}\n        />\n      </div>,\n      containerNode\n    );\n  };\n\n/**\n * Sort by selector is a widget used for letting the user choose between different\n * indices that contains the same data with a different order / ranking formula.\n */\nconst sortBy: SortByWidget = (widgetParams) => {\n  const {\n    container,\n    items,\n    cssClasses: userCssClasses = {},\n    transformItems,\n  } = widgetParams || {};\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    select: cx(suit({ descendantName: 'select' }), userCssClasses.select),\n    option: cx(suit({ descendantName: 'option' }), userCssClasses.option),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n  });\n\n  const makeWidget = connectSortBy(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ container: containerNode, items, transformItems }),\n    $$widgetType: 'ais.sortBy',\n  };\n};\n\nexport default sortBy;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport type {\n  StatsCSSClasses,\n  StatsTemplates,\n} from '../../widgets/stats/stats';\nimport Template from '../Template/Template';\nimport type { ComponentCSSClasses } from '../../types';\n\nexport type StatsComponentCSSClasses = ComponentCSSClasses<StatsCSSClasses>;\n\nexport type StatsComponentTemplates = Required<StatsTemplates>;\n\ntype StatsProps = {\n  cssClasses: StatsComponentCSSClasses;\n  templateProps: {\n    [key: string]: any;\n    templates: StatsComponentTemplates;\n  };\n  hitsPerPage: number | undefined;\n  nbHits: number;\n  nbSortedHits: number | undefined;\n  areHitsSorted: boolean;\n  nbPages: number;\n  page: number;\n  processingTimeMS: number;\n  query: string;\n};\n\nconst Stats = ({\n  nbHits,\n  nbSortedHits,\n  cssClasses,\n  templateProps,\n  ...rest\n}: StatsProps) => (\n  <div className={cx(cssClasses.root)}>\n    <Template\n      {...templateProps}\n      templateKey=\"text\"\n      rootTagName=\"span\"\n      rootProps={{ className: cssClasses.text }}\n      data={{\n        hasManySortedResults: nbSortedHits && nbSortedHits > 1,\n        hasNoSortedResults: nbSortedHits === 0,\n        hasOneSortedResults: nbSortedHits === 1,\n        hasManyResults: nbHits > 1,\n        hasNoResults: nbHits === 0,\n        hasOneResult: nbHits === 1,\n        nbHits,\n        nbSortedHits,\n        cssClasses,\n        ...rest,\n      }}\n    />\n  </div>\n);\n\nexport default Stats;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport type {\n  StatsComponentCSSClasses,\n  StatsComponentTemplates,\n} from '../../components/Stats/Stats';\nimport Stats from '../../components/Stats/Stats';\nimport type {\n  StatsConnectorParams,\n  StatsRenderState,\n  StatsWidgetDescription,\n} from '../../connectors/stats/connectStats';\nimport connectStats from '../../connectors/stats/connectStats';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport { component } from '../../lib/suit';\nimport type { Renderer, Template, WidgetFactory } from '../../types';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport { formatNumber } from '../../lib/formatNumber';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'stats' });\nconst suit = component('Stats');\n\ntype TextTemplateProps = {\n  hasManyResults: boolean;\n  hasNoResults: boolean;\n  hasOneResult: boolean;\n  hasNoSortedResults: boolean;\n  hasOneSortedResults: boolean;\n  hasManySortedResults: boolean;\n};\n\nexport type StatsCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n\n  /**\n   * CSS class to add to the text span element.\n   */\n  text: string | string[];\n}>;\n\nexport type StatsTemplates = Partial<{\n  /**\n   * Text template, provided with `hasManyResults`, `hasNoResults`, `hasOneResult`, `hasNoSortedResults`, `hasOneSortedResults`, `hasManySortedResults`, `hitsPerPage`, `nbHits`, `nbSortedHits`, `nbPages`, `areHitsSorted`, `page`, `processingTimeMS`, `query`.\n   */\n  text: Template<TextTemplateProps & StatsRenderState>;\n}>;\n\nexport type StatsWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: StatsTemplates;\n\n  /**\n   * CSS classes to add.\n   */\n  cssClasses?: StatsCSSClasses;\n};\n\nexport type StatsWidget = WidgetFactory<\n  StatsWidgetDescription & { $$widgetType: 'ais.stats' },\n  StatsConnectorParams,\n  StatsWidgetParams\n>;\n\nexport const defaultTemplates: StatsComponentTemplates = {\n  text(props) {\n    return `${\n      props.areHitsSorted\n        ? getSortedResultsSentence(props)\n        : getResultsSentence(props)\n    } found in ${props.processingTimeMS}ms`;\n  },\n};\n\nfunction getSortedResultsSentence({\n  nbHits,\n  hasNoSortedResults,\n  hasOneSortedResults,\n  hasManySortedResults,\n  nbSortedHits,\n}: TextTemplateProps & StatsRenderState) {\n  const suffix = `sorted out of ${formatNumber(nbHits)}`;\n\n  if (hasNoSortedResults) {\n    return `No relevant results ${suffix}`;\n  }\n\n  if (hasOneSortedResults) {\n    return `1 relevant result ${suffix}`;\n  }\n\n  if (hasManySortedResults) {\n    return `${formatNumber(nbSortedHits || 0)} relevant results ${suffix}`;\n  }\n\n  return '';\n}\n\nfunction getResultsSentence({\n  nbHits,\n  hasNoResults,\n  hasOneResult,\n  hasManyResults,\n}: TextTemplateProps & StatsRenderState) {\n  if (hasNoResults) {\n    return 'No results';\n  }\n\n  if (hasOneResult) {\n    return '1 result';\n  }\n\n  if (hasManyResults) {\n    return `${formatNumber(nbHits)} results`;\n  }\n\n  return '';\n}\n\nconst renderer =\n  ({\n    renderState,\n    cssClasses,\n    containerNode,\n    templates,\n  }: {\n    renderState: {\n      templateProps?: PreparedTemplateProps<StatsComponentTemplates>;\n    };\n    cssClasses: StatsComponentCSSClasses;\n    containerNode: HTMLElement;\n    templates: StatsTemplates;\n  }): Renderer<StatsRenderState, Partial<StatsWidgetParams>> =>\n  (\n    {\n      hitsPerPage,\n      nbHits,\n      nbSortedHits,\n      areHitsSorted,\n      nbPages,\n      page,\n      processingTimeMS,\n      query,\n      instantSearchInstance,\n    },\n    isFirstRendering\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n\n      return;\n    }\n\n    render(\n      <Stats\n        cssClasses={cssClasses}\n        hitsPerPage={hitsPerPage}\n        nbHits={nbHits}\n        nbSortedHits={nbSortedHits}\n        areHitsSorted={areHitsSorted}\n        nbPages={nbPages}\n        page={page}\n        processingTimeMS={processingTimeMS}\n        query={query}\n        templateProps={renderState.templateProps!}\n      />,\n      containerNode\n    );\n  };\n\n/**\n * The `stats` widget is used to display useful insights about the current results.\n *\n * By default, it will display the **number of hits** and the time taken to compute the\n * results inside the engine.\n */\nconst stats: StatsWidget = (widgetParams) => {\n  const {\n    container,\n    cssClasses: userCssClasses = {},\n    templates = {},\n  } = widgetParams || {};\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses: StatsComponentCSSClasses = {\n    root: cx(suit(), userCssClasses.root),\n    text: cx(suit({ descendantName: 'text' }), userCssClasses.text),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    templates,\n    renderState: {},\n  });\n\n  const makeWidget = connectStats(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({}),\n    $$widgetType: 'ais.stats',\n  };\n};\n\nexport default stats;\n","/** @jsx h */\nimport { Fragment, h } from 'preact';\n\nimport type { VoiceSearchComponentTemplates } from '../../components/VoiceSearch/VoiceSearch';\n\ntype ButtonInnerElementProps = {\n  status: string;\n  errorCode: string;\n  isListening: boolean;\n};\n\nconst ButtonInnerElement = ({\n  status,\n  errorCode,\n  isListening,\n}: ButtonInnerElementProps) => {\n  if (status === 'error' && errorCode === 'not-allowed') {\n    return (\n      <Fragment>\n        <line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\" />\n        <path d=\"M9 9v3a3 3 0 0 0 5.12 2.12M15 9.34V4a3 3 0 0 0-5.94-.6\" />\n        <path d=\"M17 16.95A7 7 0 0 1 5 12v-2m14 0v2a7 7 0 0 1-.11 1.23\" />\n        <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"23\" />\n        <line x1=\"8\" y1=\"23\" x2=\"16\" y2=\"23\" />\n      </Fragment>\n    );\n  }\n\n  return (\n    <Fragment>\n      <path\n        d=\"M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z\"\n        fill={isListening ? 'currentColor' : 'none'}\n      />\n      <path d=\"M19 10v2a7 7 0 0 1-14 0v-2\" />\n      <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"23\" />\n      <line x1=\"8\" y1=\"23\" x2=\"16\" y2=\"23\" />\n    </Fragment>\n  );\n};\n\nconst defaultTemplates: VoiceSearchComponentTemplates = {\n  buttonText({ status, errorCode, isListening }) {\n    return (\n      <svg\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        /* eslint-disable react/no-unknown-property */\n        // Preact supports kebab case attributes, and using camel case would\n        // require using `preact/compat`.\n        // @TODO: reconsider using the `react` ESLint preset\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        /* eslint-enable react/no-unknown-property */\n      >\n        <ButtonInnerElement\n          status={status}\n          errorCode={errorCode}\n          isListening={isListening}\n        />\n      </svg>\n    );\n  },\n  status({ transcript }) {\n    return <p>{transcript}</p>;\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport type {\n  ToggleRefinementRenderState,\n  ToggleRefinementValue,\n} from '../../connectors/toggle-refinement/connectToggleRefinement';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { ComponentCSSClasses } from '../../types';\nimport type {\n  ToggleRefinementTemplates,\n  ToggleRefinementCSSClasses,\n} from '../../widgets/toggle-refinement/toggle-refinement';\n\nimport Template from '../Template/Template';\n\nexport type ToggleRefinementComponentCSSClasses =\n  ComponentCSSClasses<ToggleRefinementCSSClasses>;\n\nexport type ToggleRefinementComponentTemplates =\n  Required<ToggleRefinementTemplates>;\n\nexport type ToggleRefinementProps = {\n  currentRefinement: ToggleRefinementValue;\n  refine: ToggleRefinementRenderState['refine'];\n  cssClasses: ToggleRefinementComponentCSSClasses;\n  templateProps: PreparedTemplateProps<ToggleRefinementComponentTemplates>;\n};\n\nconst ToggleRefinement = ({\n  currentRefinement,\n  refine,\n  cssClasses,\n  templateProps,\n}: ToggleRefinementProps) => (\n  <div className={cssClasses.root}>\n    <label className={cssClasses.label}>\n      <input\n        className={cssClasses.checkbox}\n        type=\"checkbox\"\n        checked={currentRefinement.isRefined}\n        onChange={(event) =>\n          refine({ isRefined: !(event.target as HTMLInputElement).checked })\n        }\n      />\n\n      <Template\n        {...templateProps}\n        rootTagName=\"span\"\n        rootProps={{ className: cssClasses.labelText }}\n        templateKey=\"labelText\"\n        data={currentRefinement}\n      />\n    </label>\n  </div>\n);\n\nexport default ToggleRefinement;\n","import type { ToggleRefinementComponentTemplates } from '../../components/ToggleRefinement/ToggleRefinement';\n\nconst defaultTemplates: ToggleRefinementComponentTemplates = {\n  labelText({ name }) {\n    return name;\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport type {\n  ToggleRefinementComponentCSSClasses,\n  ToggleRefinementComponentTemplates,\n} from '../../components/ToggleRefinement/ToggleRefinement';\nimport ToggleRefinement from '../../components/ToggleRefinement/ToggleRefinement';\nimport type {\n  ToggleRefinementConnectorParams,\n  ToggleRefinementWidgetDescription,\n  ToggleRefinementValue,\n  ToggleRefinementRenderState,\n} from '../../connectors/toggle-refinement/connectToggleRefinement';\nimport connectToggleRefinement from '../../connectors/toggle-refinement/connectToggleRefinement';\nimport defaultTemplates from './defaultTemplates';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport type { RendererOptions, Template, WidgetFactory } from '../../types';\nimport { component } from '../../lib/suit';\nimport type { PreparedTemplateProps } from '../../lib/templating';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'toggle-refinement',\n});\nconst suit = component('ToggleRefinement');\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    renderState,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: ToggleRefinementComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<ToggleRefinementComponentTemplates>;\n    };\n    templates: ToggleRefinementTemplates;\n  }) =>\n  (\n    {\n      value,\n      refine,\n      instantSearchInstance,\n    }: ToggleRefinementRenderState &\n      RendererOptions<ToggleRefinementConnectorParams>,\n    isFirstRendering: boolean\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n\n      return;\n    }\n\n    render(\n      <ToggleRefinement\n        cssClasses={cssClasses}\n        currentRefinement={value}\n        templateProps={renderState.templateProps!}\n        refine={refine}\n      />,\n      containerNode\n    );\n  };\n\nexport type ToggleRefinementCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n  /**\n   * CSS class to add to the label wrapping element.\n   */\n  label: string | string[];\n  /**\n   * CSS class to add to the checkbox.\n   */\n  checkbox: string | string[];\n  /**\n   * CSS class to add to the label text.\n   */\n  labelText: string | string[];\n}>;\n\nexport type ToggleRefinementTemplates = Partial<{\n  /**\n   * the text that describes the toggle action\n   */\n  labelText: Template<ToggleRefinementValue & { name: string }>;\n}>;\n\nexport type ToggleRefinementWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: ToggleRefinementTemplates;\n\n  /**\n   * CSS classes to be added.\n   */\n  cssClasses?: ToggleRefinementCSSClasses;\n};\n\nexport type ToggleRefinementWidget = WidgetFactory<\n  ToggleRefinementWidgetDescription & {\n    $$widgetType: 'ais.toggleRefinement';\n  },\n  ToggleRefinementConnectorParams,\n  ToggleRefinementWidgetParams\n>;\n\n/**\n * The toggleRefinement widget lets the user either:\n *  - switch between two values for a single facetted attribute (free_shipping / not_free_shipping)\n *  - toggleRefinement a faceted value on and off (only 'canon' for brands)\n *\n * This widget is particularly useful if you have a boolean value in the records.\n *\n * @requirements\n * The attribute passed to `attribute` must be declared as an\n * [attribute for faceting](https://www.algolia.com/doc/guides/searching/faceting/#declaring-attributes-for-faceting)\n * in your Algolia settings.\n */\nconst toggleRefinement: ToggleRefinementWidget = function toggleRefinement(\n  widgetParams\n) {\n  const {\n    container,\n    attribute,\n    cssClasses: userCssClasses = {},\n    templates = {},\n    on = true,\n    off,\n  } = widgetParams || {};\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n    checkbox: cx(suit({ descendantName: 'checkbox' }), userCssClasses.checkbox),\n    labelText: cx(\n      suit({ descendantName: 'labelText' }),\n      userCssClasses.labelText\n    ),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectToggleRefinement(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ attribute, on, off }),\n    $$widgetType: 'ais.toggleRefinement',\n  };\n};\n\nexport default toggleRefinement;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport Template from '../Template/Template';\n\nimport type {\n  VoiceSearchCSSClasses,\n  VoiceSearchTemplates,\n} from '../../widgets/voice-search/voice-search';\nimport type { VoiceListeningState } from '../../lib/voiceSearchHelper/types';\nimport type { ComponentCSSClasses } from '../../types';\n\nexport type VoiceSearchComponentCSSClasses =\n  ComponentCSSClasses<VoiceSearchCSSClasses>;\n\nexport type VoiceSearchComponentTemplates = Required<VoiceSearchTemplates>;\n\nexport type VoiceSearchProps = {\n  cssClasses: VoiceSearchComponentCSSClasses;\n  isBrowserSupported: boolean;\n  isListening: boolean;\n  toggleListening: () => void;\n  voiceListeningState: VoiceListeningState;\n  templates: VoiceSearchComponentTemplates;\n};\n\nconst VoiceSearch = ({\n  cssClasses,\n  isBrowserSupported,\n  isListening,\n  toggleListening,\n  voiceListeningState,\n  templates,\n}: VoiceSearchProps) => {\n  const handleClick = (event: MouseEvent): void => {\n    if (event.currentTarget instanceof HTMLElement) {\n      event.currentTarget.blur();\n    }\n    toggleListening();\n  };\n\n  const { status, transcript, isSpeechFinal, errorCode } = voiceListeningState;\n  return (\n    <div className={cssClasses.root}>\n      <Template\n        templateKey=\"buttonText\"\n        rootTagName=\"button\"\n        rootProps={{\n          className: cssClasses.button,\n          type: 'button',\n          title: `Search by voice${\n            isBrowserSupported ? '' : ' (not supported on this browser)'\n          }`,\n          onClick: handleClick,\n          disabled: !isBrowserSupported,\n        }}\n        data={{\n          status,\n          errorCode,\n          isListening,\n          transcript,\n          isSpeechFinal,\n          isBrowserSupported,\n        }}\n        templates={templates}\n      />\n      <Template\n        templateKey=\"status\"\n        rootProps={{\n          className: cssClasses.status,\n        }}\n        data={{\n          status,\n          errorCode,\n          isListening,\n          transcript,\n          isSpeechFinal,\n          isBrowserSupported,\n        }}\n        templates={templates}\n      />\n    </div>\n  );\n};\n\nexport default VoiceSearch;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport type { PlainSearchParameters } from 'algoliasearch-helper';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport type {\n  VoiceSearchConnectorParams,\n  VoiceSearchRenderState,\n  VoiceSearchWidgetDescription,\n} from '../../connectors/voice-search/connectVoiceSearch';\nimport connectVoiceSearch from '../../connectors/voice-search/connectVoiceSearch';\nimport type {\n  VoiceSearchComponentCSSClasses,\n  VoiceSearchComponentTemplates,\n} from '../../components/VoiceSearch/VoiceSearch';\nimport VoiceSearchComponent from '../../components/VoiceSearch/VoiceSearch';\nimport defaultTemplates from './defaultTemplates';\nimport type { WidgetFactory, Template, Renderer } from '../../types';\nimport type { CreateVoiceSearchHelper } from '../../lib/voiceSearchHelper/types';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'voice-search' });\nconst suit = component('VoiceSearch');\n\nexport type VoiceSearchCSSClasses = Partial<{\n  root: string | string[];\n  button: string | string[];\n  status: string | string[];\n}>;\n\ntype VoiceSearchTemplateProps = {\n  status: string;\n  errorCode: string;\n  isListening: boolean;\n  transcript: string;\n  isSpeechFinal: boolean;\n  isBrowserSupported: boolean;\n};\n\nexport type VoiceSearchTemplates = Partial<{\n  buttonText: Template<VoiceSearchTemplateProps>;\n  status: Template<VoiceSearchTemplateProps>;\n}>;\n\nexport type VoiceSearchWidgetParams = {\n  container: string | HTMLElement;\n  cssClasses?: VoiceSearchCSSClasses;\n  templates?: VoiceSearchTemplates;\n  searchAsYouSpeak?: boolean;\n  language?: string;\n  additionalQueryParameters?: (params: {\n    query: string;\n  }) => PlainSearchParameters | void;\n  createVoiceSearchHelper?: CreateVoiceSearchHelper;\n};\n\nexport type VoiceSearchWidget = WidgetFactory<\n  VoiceSearchWidgetDescription & { $$type: 'ais.voiceSearch' },\n  VoiceSearchConnectorParams,\n  VoiceSearchWidgetParams\n>;\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: VoiceSearchComponentCSSClasses;\n    templates: VoiceSearchComponentTemplates;\n  }): Renderer<VoiceSearchRenderState, Partial<VoiceSearchWidgetParams>> =>\n  ({\n    isBrowserSupported,\n    isListening,\n    toggleListening,\n    voiceListeningState,\n  }) => {\n    render(\n      <VoiceSearchComponent\n        cssClasses={cssClasses}\n        templates={templates}\n        isBrowserSupported={isBrowserSupported}\n        isListening={isListening}\n        toggleListening={toggleListening}\n        voiceListeningState={voiceListeningState}\n      />,\n      containerNode\n    );\n  };\n\nconst voiceSearch: VoiceSearchWidget = (widgetParams) => {\n  const {\n    container,\n    cssClasses: userCssClasses = {},\n    templates: userTemplates = {},\n    searchAsYouSpeak = false,\n    language,\n    additionalQueryParameters,\n    createVoiceSearchHelper,\n  }: VoiceSearchWidgetParams = widgetParams || {};\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    button: cx(suit({ descendantName: 'button' }), userCssClasses.button),\n    status: cx(suit({ descendantName: 'status' }), userCssClasses.status),\n  };\n  const templates = {\n    ...defaultTemplates,\n    ...userTemplates,\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    templates,\n  });\n\n  const makeWidget = connectVoiceSearch(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      container: containerNode,\n      cssClasses,\n      templates,\n      searchAsYouSpeak,\n      language,\n      additionalQueryParameters,\n      createVoiceSearchHelper,\n    }),\n    $$widgetType: 'ais.voiceSearch',\n  };\n};\n\nexport default voiceSearch;\n","import { deprecate } from '../lib/utils';\n\nexport { default as analytics } from './analytics/analytics';\nexport { default as breadcrumb } from './breadcrumb/breadcrumb';\nexport { default as clearRefinements } from './clear-refinements/clear-refinements';\nexport { default as configure } from './configure/configure';\nexport { default as currentRefinements } from './current-refinements/current-refinements';\n\nimport answers from './answers/answers';\n/** @deprecated answers is no longer supported */\nexport const EXPERIMENTAL_answers = deprecate(\n  answers,\n  'answers is no longer supported'\n);\n\nexport { default as EXPERIMENTAL_configureRelatedItems } from './configure-related-items/configure-related-items';\n\nimport dynamicWidgets from './dynamic-widgets/dynamic-widgets';\nexport { dynamicWidgets };\n/** @deprecated use dynamicWidgets */\nexport const EXPERIMENTAL_dynamicWidgets = deprecate(\n  dynamicWidgets,\n  'use dynamicWidgets'\n);\n\nexport { default as geoSearch } from './geo-search/geo-search';\nexport { default as hierarchicalMenu } from './hierarchical-menu/hierarchical-menu';\nexport { default as hits } from './hits/hits';\nexport { default as hitsPerPage } from './hits-per-page/hits-per-page';\nexport { default as index } from './index/index';\nexport { default as infiniteHits } from './infinite-hits/infinite-hits';\nexport { default as menu } from './menu/menu';\nexport { default as menuSelect } from './menu-select/menu-select';\nexport { default as numericMenu } from './numeric-menu/numeric-menu';\nexport { default as pagination } from './pagination/pagination';\nexport { default as panel } from './panel/panel';\nexport { default as places } from './places/places';\nexport { default as poweredBy } from './powered-by/powered-by';\nexport { default as queryRuleContext } from './query-rule-context/query-rule-context';\nexport { default as queryRuleCustomData } from './query-rule-custom-data/query-rule-custom-data';\nexport { default as rangeInput } from './range-input/range-input';\nexport { default as rangeSlider } from './range-slider/range-slider';\nexport { default as ratingMenu } from './rating-menu/rating-menu';\nexport { default as refinementList } from './refinement-list/refinement-list';\nexport { default as relevantSort } from './relevant-sort/relevant-sort';\nexport { default as searchBox } from './search-box/search-box';\nexport { default as sortBy } from './sort-by/sort-by';\nexport { default as stats } from './stats/stats';\nexport { default as toggleRefinement } from './toggle-refinement/toggle-refinement';\nexport { default as voiceSearch } from './voice-search/voice-search';\n","import type {\n  ConfigureConnectorParams,\n  ConfigureWidgetDescription,\n} from '../../connectors/configure/connectConfigure';\nimport connectConfigure from '../../connectors/configure/connectConfigure';\nimport type { Widget } from '../../types';\nimport { noop } from '../../lib/utils';\n\n/**\n * A list of [search parameters](https://www.algolia.com/doc/api-reference/search-api-parameters/)\n * to enable when the widget mounts.\n */\nexport type ConfigureWidgetParams =\n  ConfigureConnectorParams['searchParameters'];\n\nexport type ConfigureWidget = (widgetParams: ConfigureWidgetParams) => Widget<\n  ConfigureWidgetDescription & {\n    $$widgetType: 'ais.configure';\n    widgetParams: ConfigureConnectorParams;\n  }\n>;\n\nconst configure: ConfigureWidget = function configure(widgetParams) {\n  // This is a renderless widget that falls back to the connector's\n  // noop render and unmount functions.\n  const makeWidget = connectConfigure(noop);\n\n  return {\n    ...makeWidget({ searchParameters: widgetParams }),\n    $$widgetType: 'ais.configure',\n  };\n};\n\nexport default configure;\n","import type { PlainSearchParameters } from 'algoliasearch-helper';\nimport { noop } from '../../lib/utils';\nimport type {\n  ConfigureRelatedItemsConnectorParams,\n  ConfigureRelatedItemsWidgetDescription,\n} from '../../connectors/configure-related-items/connectConfigureRelatedItems';\nimport connectConfigureRelatedItems from '../../connectors/configure-related-items/connectConfigureRelatedItems';\nimport type { WidgetFactory } from '../../types';\n\nexport type ConfigureRelatedItemsWidget = WidgetFactory<\n  ConfigureRelatedItemsWidgetDescription & {\n    $$widgetType: 'ais.configureRelatedItems';\n  },\n  ConfigureRelatedItemsConnectorParams,\n  ConfigureRelatedItemsWidgetParams\n>;\n\nexport type ConfigureRelatedItemsWidgetParams = PlainSearchParameters;\n\nconst configureRelatedItems: ConfigureRelatedItemsWidget =\n  function configureRelatedItems(widgetParams) {\n    const makeWidget = connectConfigureRelatedItems(noop);\n\n    return {\n      ...makeWidget(widgetParams),\n      $$widgetType: 'ais.configureRelatedItems',\n    };\n  };\n\nexport default configureRelatedItems;\n","/* global google EventListener */\nimport { render } from 'preact';\nimport type { renderTemplate } from '../../lib/templating';\n\nexport type HTMLMarkerArguments = {\n  __id: string;\n  position: google.maps.LatLngLiteral;\n  map: google.maps.Map;\n  template: ReturnType<typeof renderTemplate>;\n  title?: string;\n  className: string;\n  anchor?: { x: number; y: number };\n};\n\ninterface Marker {\n  __id: string;\n  anchor: { x: number; y: number };\n  offset?: { x: number; y: number };\n  listeners: { [key: string]: EventListener };\n  latLng: google.maps.LatLng;\n  element: HTMLDivElement;\n  getPosition(): google.maps.LatLng;\n}\n\nconst createHTMLMarker = (\n  googleReference: typeof google\n): new (args: HTMLMarkerArguments) => google.maps.OverlayView & Marker => {\n  class HTMLMarker extends googleReference.maps.OverlayView {\n    public __id: string;\n    public anchor: {\n      x: number;\n      y: number;\n    };\n    public offset?: {\n      x: number;\n      y: number;\n    };\n    public listeners: { [key: string]: EventListener };\n    public latLng: google.maps.LatLng;\n    public element: HTMLDivElement;\n\n    public constructor({\n      __id,\n      position,\n      map,\n      template,\n      className,\n      anchor = {\n        x: 0,\n        y: 0,\n      },\n    }: HTMLMarkerArguments) {\n      super();\n\n      this.__id = __id;\n      this.anchor = anchor;\n      this.listeners = {};\n      this.latLng = new googleReference.maps.LatLng(position);\n\n      this.element = document.createElement('div');\n      this.element.className = className;\n      this.element.style.position = 'absolute';\n\n      if (typeof template === 'object') {\n        render(template, this.element);\n      } else {\n        this.element.innerHTML = template;\n      }\n\n      this.setMap(map);\n    }\n\n    public onAdd() {\n      // Append the element to the map\n      this.getPanes()!.overlayMouseTarget.appendChild(this.element);\n\n      // Compute the offset onAdd & cache it because afterwards\n      // it won't retrieve the correct values, we also avoid\n      // to read the values on every draw\n      const bbBox = this.element.getBoundingClientRect();\n\n      this.offset = {\n        x: this.anchor.x + bbBox.width / 2,\n        y: this.anchor.y + bbBox.height,\n      };\n\n      // Force the width of the element will avoid the\n      // content to collapse when we move the map\n      this.element.style.width = `${bbBox.width}px`;\n    }\n\n    public draw() {\n      const position = this.getProjection().fromLatLngToDivPixel(this.latLng)!;\n\n      this.element.style.left = `${Math.round(position.x - this.offset!.x)}px`;\n      this.element.style.top = `${Math.round(position.y - this.offset!.y)}px`;\n\n      // Markers to the south are in front of markers to the north\n      // This is the default behaviour of Google Maps\n      this.element.style.zIndex = String(parseInt(this.element.style.top, 10));\n    }\n\n    public onRemove() {\n      if (this.element) {\n        this.element.parentNode!.removeChild(this.element);\n\n        Object.keys(this.listeners).forEach((eventName) => {\n          this.element.removeEventListener(\n            eventName,\n            this.listeners[eventName]\n          );\n        });\n\n        // after onRemove the class is no longer used, thus it can be deleted\n        // @ts-expect-error\n        delete this.element;\n        // @ts-expect-error\n        delete this.listeners;\n      }\n    }\n\n    public addListener(eventName: string, listener: EventListener) {\n      this.listeners[eventName] = listener;\n\n      const element = this.element;\n\n      element.addEventListener(eventName, listener);\n\n      return {\n        remove() {\n          return element.removeEventListener(eventName, listener);\n        },\n      };\n    }\n\n    public getPosition() {\n      return this.latLng;\n    }\n  }\n\n  return HTMLMarker;\n};\n\nexport default createHTMLMarker;\n","/** @ts-ignore */\nimport type * as Places from 'places.js';\nimport type { WidgetFactory, WidgetRenderState } from '../../types';\n\n// using the type like this requires only one ts-ignore\ntype StaticOptions = Places.StaticOptions;\ntype ChangeEvent = Places.ChangeEvent;\ntype PlacesInstance = Places.PlacesInstance;\ntype ReconfigurableOptions = Places.ReconfigurableOptions;\n\nexport type PlacesWidgetParams = {\n  /**\n   * The Algolia Places reference to use.\n   *\n   * @see https://github.com/algolia/places\n   */\n  placesReference: (\n    options: StaticOptions & ReconfigurableOptions\n  ) => PlacesInstance;\n  /**\n   * The default position when the input is empty.\n   */\n  defaultPosition?: string[];\n} & StaticOptions;\n\ntype PlacesWidgetState = {\n  query: string;\n  initialLatLngViaIP: boolean | undefined;\n  isInitialLatLngViaIPSet: boolean;\n};\n\nexport type PlacesWidgetDescription = {\n  $$type: 'ais.places';\n  $$widgetType: 'ais.places';\n  renderState: Record<string, unknown>;\n  indexRenderState: {\n    places: WidgetRenderState<Record<string, unknown>, PlacesWidgetParams>;\n  };\n  indexUiState: {\n    places: {\n      query: string;\n      position: string;\n    };\n  };\n};\n\nexport type PlacesWidget = WidgetFactory<\n  PlacesWidgetDescription,\n  PlacesWidgetParams,\n  PlacesWidgetParams\n>;\n\n/**\n * This widget sets the geolocation value for the search based on the selected\n * result in the Algolia Places autocomplete.\n */\nconst placesWidget: PlacesWidget = (widgetParams) => {\n  const {\n    placesReference,\n    defaultPosition = [],\n    ...placesOptions\n  } = widgetParams || {};\n\n  if (typeof placesReference !== 'function') {\n    throw new Error(\n      'The `placesReference` option requires a valid Places.js reference.'\n    );\n  }\n\n  const placesAutocomplete = placesReference(placesOptions);\n\n  const state: PlacesWidgetState = {\n    query: '',\n    initialLatLngViaIP: undefined,\n    isInitialLatLngViaIPSet: false,\n  };\n\n  return {\n    $$type: 'ais.places',\n    $$widgetType: 'ais.places',\n\n    init({ helper }) {\n      placesAutocomplete.on('change', (eventOptions: ChangeEvent) => {\n        const {\n          suggestion: {\n            value,\n            latlng: { lat, lng },\n          },\n        } = eventOptions;\n\n        state.query = value;\n\n        helper\n          .setQueryParameter('insideBoundingBox', undefined)\n          .setQueryParameter('aroundLatLngViaIP', false)\n          .setQueryParameter('aroundLatLng', `${lat},${lng}`)\n          .search();\n      });\n\n      placesAutocomplete.on('clear', () => {\n        state.query = '';\n\n        helper.setQueryParameter('insideBoundingBox', undefined);\n\n        if (defaultPosition.length > 1) {\n          helper\n            .setQueryParameter('aroundLatLngViaIP', false)\n            .setQueryParameter('aroundLatLng', defaultPosition.join(','));\n        } else {\n          helper\n            .setQueryParameter('aroundLatLngViaIP', state.initialLatLngViaIP)\n            .setQueryParameter('aroundLatLng', undefined);\n        }\n\n        helper.search();\n      });\n    },\n\n    getWidgetUiState(uiState, { searchParameters }) {\n      const position =\n        searchParameters.aroundLatLng || defaultPosition.join(',');\n      const hasPositionSet = position !== defaultPosition.join(',');\n\n      if (!hasPositionSet && !state.query) {\n        const { places, ...uiStateWithoutPlaces } = uiState;\n\n        return uiStateWithoutPlaces;\n      }\n\n      return {\n        ...uiState,\n        places: {\n          query: state.query,\n          position,\n        },\n      };\n    },\n\n    getWidgetSearchParameters(searchParameters, { uiState }) {\n      const { query = '', position = defaultPosition.join(',') } =\n        uiState.places || {};\n\n      state.query = query;\n\n      if (!state.isInitialLatLngViaIPSet) {\n        state.isInitialLatLngViaIPSet = true;\n        state.initialLatLngViaIP = searchParameters.aroundLatLngViaIP;\n      }\n\n      placesAutocomplete.setVal(query);\n      placesAutocomplete.close();\n\n      return searchParameters\n        .setQueryParameter('insideBoundingBox', undefined)\n        .setQueryParameter('aroundLatLngViaIP', false)\n        .setQueryParameter('aroundLatLng', position || undefined);\n    },\n\n    getRenderState(renderState, renderOptions) {\n      return {\n        ...renderState,\n        places: this.getWidgetRenderState(renderOptions),\n      };\n    },\n\n    getWidgetRenderState() {\n      return {\n        widgetParams,\n      };\n    },\n  };\n};\n\nexport default placesWidget;\n","import type {\n  InsightsClient,\n  InsightsClientMethod,\n  InternalMiddleware,\n  Hit,\n} from '../types';\nimport { getInsightsAnonymousUserTokenInternal } from '../helpers';\nimport { warning, noop, getAppIdAndApiKey, find } from '../lib/utils';\nimport type {\n  AlgoliaSearchHelper,\n  PlainSearchParameters,\n} from 'algoliasearch-helper';\n\nexport type InsightsEvent = {\n  insightsMethod?: InsightsClientMethod;\n  payload: any;\n  widgetType: string;\n  eventType: string; // 'view' | 'click' | 'conversion', but we're not restricting.\n  hits?: Hit[];\n  attribute?: string;\n};\n\nexport type InsightsProps<\n  TInsightsClient extends null | InsightsClient = InsightsClient | null\n> = {\n  insightsClient: TInsightsClient;\n  insightsInitParams?: {\n    userHasOptedOut?: boolean;\n    useCookie?: boolean;\n    cookieDuration?: number;\n    region?: 'de' | 'us';\n  };\n  onEvent?: (event: InsightsEvent, insightsClient: TInsightsClient) => void;\n};\n\nexport type CreateInsightsMiddleware = typeof createInsightsMiddleware;\n\nexport function createInsightsMiddleware<\n  TInsightsClient extends null | InsightsClient\n>(props: InsightsProps<TInsightsClient>): InternalMiddleware {\n  const {\n    insightsClient: _insightsClient,\n    insightsInitParams,\n    onEvent,\n  } = props || {};\n  if (_insightsClient !== null && !_insightsClient) {\n    if (__DEV__) {\n      throw new Error(\n        \"The `insightsClient` option is required if you want userToken to be automatically set in search calls. If you don't want this behaviour, set it to `null`.\"\n      );\n    } else {\n      throw new Error(\n        'The `insightsClient` option is required. To disable, set it to `null`.'\n      );\n    }\n  }\n\n  const hasInsightsClient = Boolean(_insightsClient);\n  const insightsClient: InsightsClient =\n    _insightsClient === null ? noop : _insightsClient;\n\n  return ({ instantSearchInstance }) => {\n    const [appId, apiKey] = getAppIdAndApiKey(instantSearchInstance.client);\n\n    // search-insights.js also throws an error so dev-only clarification is sufficient\n    if (__DEV__ && !(appId && apiKey)) {\n      throw new Error(\n        '[insights middleware]: could not extract Algolia credentials from searchClient'\n      );\n    }\n\n    let queuedUserToken: string | undefined = undefined;\n    let userTokenBeforeInit: string | undefined = undefined;\n\n    if (Array.isArray(insightsClient.queue)) {\n      // Context: The umd build of search-insights is asynchronously loaded by the snippet.\n      //\n      // When user calls `aa('setUserToken', 'my-user-token')` before `search-insights` is loaded,\n      // ['setUserToken', 'my-user-token'] gets stored in `aa.queue`.\n      // Whenever `search-insights` is finally loaded, it will process the queue.\n      //\n      // But here's the reason why we handle it here:\n      // At this point, even though `search-insights` is not loaded yet,\n      // we still want to read the token from the queue.\n      // Otherwise, the first search call will be fired without the token.\n      [, queuedUserToken] =\n        find(\n          insightsClient.queue.slice().reverse(),\n          ([method]) => method === 'setUserToken'\n        ) || [];\n    }\n    insightsClient('getUserToken', null, (_error: any, userToken: string) => {\n      // If user has called `aa('setUserToken', 'my-user-token')` before creating\n      // the `insights` middleware, we store them temporarily and\n      // set it later on.\n      //\n      // Otherwise, the `init` call might override it with anonymous user token.\n      userTokenBeforeInit = userToken;\n    });\n    insightsClient('init', { appId, apiKey, ...insightsInitParams });\n\n    let initialParameters: PlainSearchParameters;\n    let helper: AlgoliaSearchHelper;\n\n    return {\n      onStateChange() {},\n      subscribe() {},\n      started() {\n        insightsClient('addAlgoliaAgent', 'insights-middleware');\n\n        helper = instantSearchInstance.helper!;\n\n        initialParameters = {\n          userToken: (helper.state as PlainSearchParameters).userToken,\n          clickAnalytics: helper.state.clickAnalytics,\n        };\n\n        helper.overrideStateWithoutTriggeringChangeEvent({\n          ...helper.state,\n          clickAnalytics: true,\n        });\n        instantSearchInstance.scheduleSearch();\n\n        const setUserTokenToSearch = (userToken?: string) => {\n          helper.overrideStateWithoutTriggeringChangeEvent({\n            ...helper.state,\n            userToken,\n          });\n\n          instantSearchInstance.scheduleSearch();\n        };\n\n        const anonymousUserToken = getInsightsAnonymousUserTokenInternal();\n        if (hasInsightsClient && anonymousUserToken) {\n          // When `aa('init', { ... })` is called, it creates an anonymous user token in cookie.\n          // We can set it as userToken.\n          setUserTokenToSearch(anonymousUserToken);\n        }\n\n        // We consider the `userToken` coming from a `init` call to have a higher\n        // importance than the one coming from the queue.\n        if (userTokenBeforeInit) {\n          insightsClient('setUserToken', userTokenBeforeInit);\n        } else if (queuedUserToken) {\n          insightsClient('setUserToken', queuedUserToken);\n        }\n\n        // This updates userToken which is set explicitly by `aa('setUserToken', userToken)`\n        insightsClient('onUserTokenChange', setUserTokenToSearch, {\n          immediate: true,\n        });\n\n        instantSearchInstance.sendEventToInsights = (event: InsightsEvent) => {\n          if (onEvent) {\n            onEvent(event, _insightsClient);\n          } else if (event.insightsMethod) {\n            const hasUserToken = Boolean(\n              (helper.state as PlainSearchParameters).userToken\n            );\n            if (hasUserToken) {\n              insightsClient(event.insightsMethod, event.payload);\n            } else {\n              warning(\n                false,\n                `\nCannot send event to Algolia Insights because \\`userToken\\` is not set.\n\nSee documentation: https://www.algolia.com/doc/guides/building-search-ui/going-further/send-insights-events/js/#setting-the-usertoken\n`\n              );\n            }\n          } else {\n            warning(\n              false,\n              'Cannot send event to Algolia Insights because `insightsMethod` option is missing.'\n            );\n          }\n        };\n      },\n      unsubscribe() {\n        insightsClient('onUserTokenChange', undefined);\n        instantSearchInstance.sendEventToInsights = noop;\n        if (helper && initialParameters) {\n          helper.setState({\n            ...helper.state,\n            ...initialParameters,\n          });\n\n          instantSearchInstance.scheduleSearch();\n        }\n      },\n    };\n  };\n}\n","// typed as any, since it accepts the _real_ js clients, not the interface we otherwise expect\nexport function getAppIdAndApiKey(searchClient: any): [string, string] {\n  if (searchClient.transporter) {\n    // searchClient v4\n    const { headers, queryParameters } = searchClient.transporter;\n    const APP_ID = 'x-algolia-application-id';\n    const API_KEY = 'x-algolia-api-key';\n    const appId = headers[APP_ID] || queryParameters[APP_ID];\n    const apiKey = headers[API_KEY] || queryParameters[API_KEY];\n    return [appId, apiKey];\n  } else {\n    // searchClient v3\n    return [searchClient.applicationID, searchClient.apiKey];\n  }\n}\n","import type { StateMapping, IndexUiState, UiState } from '../../types';\n\nfunction getIndexStateWithoutConfigure<TIndexUiState extends IndexUiState>(\n  uiState: TIndexUiState\n): TIndexUiState {\n  const { configure, ...trackedUiState } = uiState;\n  return trackedUiState as TIndexUiState;\n}\n\nexport default function singleIndexStateMapping<\n  TUiState extends UiState = UiState\n>(\n  indexName: keyof TUiState\n): StateMapping<TUiState, TUiState[typeof indexName]> {\n  return {\n    stateToRoute(uiState) {\n      return getIndexStateWithoutConfigure(uiState[indexName] || {});\n    },\n    routeToState(routeState = {} as TUiState[typeof indexName]) {\n      return {\n        [indexName]: getIndexStateWithoutConfigure(routeState),\n      } as unknown as TUiState;\n    },\n  };\n}\n","import type { PlainSearchParameters } from 'algoliasearch-helper';\nimport { isEqual, safelyRunOnBrowser } from '../utils';\nimport type { InfiniteHitsCache } from '../../connectors/infinite-hits/connectInfiniteHits';\n\nfunction getStateWithoutPage(state: PlainSearchParameters) {\n  const { page, ...rest } = state || {};\n  return rest;\n}\n\nconst KEY = 'ais.infiniteHits';\n\nexport default function createInfiniteHitsSessionStorageCache(): InfiniteHitsCache {\n  return {\n    read({ state }) {\n      const sessionStorage = safelyRunOnBrowser<Storage | undefined>(\n        ({ window }) => window.sessionStorage\n      );\n\n      if (!sessionStorage) {\n        return null;\n      }\n\n      try {\n        const cache = JSON.parse(\n          // @ts-expect-error JSON.parse() requires a string, but it actually accepts null, too.\n          sessionStorage.getItem(KEY)\n        );\n\n        return cache && isEqual(cache.state, getStateWithoutPage(state))\n          ? cache.hits\n          : null;\n      } catch (error) {\n        if (error instanceof SyntaxError) {\n          try {\n            sessionStorage.removeItem(KEY);\n          } catch (err) {\n            // do nothing\n          }\n        }\n        return null;\n      }\n    },\n    write({ state, hits }) {\n      const sessionStorage = safelyRunOnBrowser<Storage | undefined>(\n        ({ window }) => window.sessionStorage\n      );\n\n      if (!sessionStorage) {\n        return;\n      }\n\n      try {\n        sessionStorage.setItem(\n          KEY,\n          JSON.stringify({\n            state: getStateWithoutPage(state),\n            hits,\n          })\n        );\n      } catch (error) {\n        // do nothing\n      }\n    },\n  };\n}\n","import type { InstantSearchOptions } from './lib/InstantSearch';\nimport InstantSearch from './lib/InstantSearch';\nimport type { Expand, UiState } from './types';\n\nimport version from './lib/version';\n\nimport * as connectors from './connectors/index';\nimport * as widgets from './widgets/index';\nimport * as helpers from './helpers/index';\nimport * as middlewares from './middlewares/index';\n\nimport * as routers from './lib/routers/index';\nimport * as stateMappings from './lib/stateMappings/index';\nimport { createInfiniteHitsSessionStorageCache } from './lib/infiniteHitsCache/index';\n\ntype InstantSearchModule = {\n  <TUiState = Record<string, unknown>, TRouteState = TUiState>(\n    options: InstantSearchOptions<Expand<UiState & TUiState>, TRouteState>\n  ): InstantSearch<Expand<UiState & TUiState>, TRouteState>;\n  version: string;\n\n  connectors: typeof connectors;\n  widgets: typeof widgets;\n  middlewares: typeof middlewares;\n\n  routers: typeof routers;\n  stateMappings: typeof stateMappings;\n\n  createInfiniteHitsSessionStorageCache: typeof createInfiniteHitsSessionStorageCache;\n  highlight: typeof helpers.highlight;\n  reverseHighlight: typeof helpers.reverseHighlight;\n  snippet: typeof helpers.snippet;\n  reverseSnippet: typeof helpers.reverseSnippet;\n\n  /**\n   * @deprecated use createInsightsMiddleware\n   * @link https://www.algolia.com/doc/api-reference/widgets/insights/js/\n   */\n  insights: typeof helpers.insights;\n};\n\n/**\n * InstantSearch is the main component of InstantSearch.js. This object\n * manages the widget and lets you add new ones.\n *\n * Two parameters are required to get you started with InstantSearch.js:\n *  - `indexName`: the main index that you will use for your new search UI\n *  - `searchClient`: the search client to plug to InstantSearch.js\n *\n * The [search client provided by Algolia](algolia.com/doc/api-client/getting-started/what-is-the-api-client/javascript/)\n * needs an `appId` and an `apiKey`. Those parameters can be found in your\n * [Algolia dashboard](https://www.algolia.com/api-keys).\n *\n * If you want to get up and running quickly with InstantSearch.js, have a\n * look at the [getting started](https://www.algolia.com/doc/guides/building-search-ui/getting-started/js/).\n */\nconst instantsearch: InstantSearchModule = (options) =>\n  new InstantSearch(options);\n\ninstantsearch.version = version;\n\ninstantsearch.connectors = connectors;\ninstantsearch.widgets = widgets;\ninstantsearch.middlewares = middlewares;\n\ninstantsearch.routers = routers;\ninstantsearch.stateMappings = stateMappings;\n\ninstantsearch.createInfiniteHitsSessionStorageCache =\n  createInfiniteHitsSessionStorageCache;\ninstantsearch.highlight = helpers.highlight;\ninstantsearch.reverseHighlight = helpers.reverseHighlight;\ninstantsearch.snippet = helpers.snippet;\ninstantsearch.reverseSnippet = helpers.reverseSnippet;\ninstantsearch.insights = helpers.insights;\n\nexport default instantsearch;\n"],"names":["isObjectOrArrayOrFunction","value","Array","isArray","Object","prototype","toString","call","_merge","target","source","sourceVal","targetVal","key","hasOwnProperty","slice","arguments","reduceRight","acc","keys","forEach","undefined","i","l","length","arr1","arr2","filter","index","indexOf","array","comparator","valToNumber","v","parseFloat","map","Error","excluded","sourceKeys","obj","lib","addRefinement","refinementList","attribute","mod","isRefined","valueAsString","facetRefinement","concat","defaultsPure","removeRefinement","clearRefinement","f","toggleRefinement","refinementType","hasChanged","newRefinementList","objectHasKeys","omit","reduce","memo","values","facetList","refinementValue","containsRefinements","isEqualNumericRefinement","a","b","every","el","SearchParameters","newParameters","params","_parseNumbers","self","userToken","test","console","warn","this","facets","disjunctiveFacets","hierarchicalFacets","facetsRefinements","facetsExcludes","disjunctiveFacetsRefinements","numericRefinements","tagRefinements","hierarchicalFacetsRefinements","paramName","isKeyKnown","PARAMETERS","isValueDefined","partialState","numbers","k","parsedValue","isNaN","insideBoundingBox","geoRect","operators","operator","parsedValues","vPrime","merge","make","instance","facet","currentRefinement","rootPath","getHierarchicalRefinement","name","clearRefinements","toggleHierarchicalFacetRefinement","validate","currentState","parameters","tagFilters","numericFilters","constructor","patch","_clearNumericRefinements","RefinementList","setQueryParameters","clearTags","setIndex","setQuery","newQuery","query","setPage","newPage","page","setFacets","setDisjunctiveFacets","setHitsPerPage","n","hitsPerPage","setTypoTolerance","typoTolerance","addNumericRefinement","isNumericRefined","push","getConjunctiveRefinements","facetName","isConjunctiveFacet","getDisjunctiveRefinements","isDisjunctiveFacet","getExcludeRefinements","removeNumericRefinement","paramValue","op","val","getNumericRefinements","getNumericRefinement","newNumericRefinements","operatorList","outValues","addFacet","addDisjunctiveFacet","addHierarchicalFacet","hierarchicalFacet","isHierarchicalFacet","addFacetRefinement","addExcludeRefinement","addDisjunctiveFacetRefinement","addTagRefinement","tag","isTagRefined","modification","removeFacet","removeDisjunctiveFacet","removeHierarchicalFacet","removeFacetRefinement","removeExcludeRefinement","removeDisjunctiveFacetRefinement","removeTagRefinement","t","toggleFacetRefinement","toggleConjunctiveFacetRefinement","toggleDisjunctiveFacetRefinement","toggleExcludeFacetRefinement","separator","_getHierarchicalFacetSeparator","getHierarchicalFacetByName","lastIndexOf","addHierarchicalFacetRefinement","path","isHierarchicalFacetRefined","removeHierarchicalFacetRefinement","toggleTagRefinement","isFacetRefined","isExcludeRefined","isDisjunctiveFacetRefined","refinements","isOperatorDefined","searchedValue","isAttributeValueDefined","find","currentValue","getRefinedDisjunctiveFacets","disjunctiveNumericRefinedFacets","intersection","getRefinedHierarchicalFacets","getUnrefinedDisjunctiveFacets","refinedFacets","managedParameters","getQueryParams","queryParams","setQueryParameter","parameter","error","nextWithNumbers","previousPlainObject","nextPlainObject","previous","isPreviousValueDefined","isNextValueDefined","resetPage","_getHierarchicalFacetSortBy","sortBy","_getHierarchicalRootPath","_getHierarchicalShowParentLevel","showParentLevel","hierarchicalFacetName","getHierarchicalFacetBreadcrumb","refinement","split","part","trim","JSON","stringify","Boolean","defaults","defaultInstructions","sort","out","sortInstruction","matchingDefault","defaultInstruction","collection","iteratees","orders","result","criteria","iteratee","object","other","res","valIsDefined","valIsNull","othIsDefined","othIsNull","String","replace","state","hierarchicalFacetResult","hierarchicalFacetIndex","generateTreeFn","hierarchicalTree","currentHierarchicalLevel","picked","parent","level","data","subtree","facetValue","tuple","parentPath","hierarchicalSeparator","hierarchicalRootPath","hierarchicalShowParentLevel","orderBy","exhaustive","parts","facetCount","unescapeFacetValue","escapedValue","escapeFacetValue","count","hierarchicalFacetRefinement","prepareHierarchicalFacetSortBy","rootExhaustive","facetResult","results","fv","getIndices","attributes","indices","idx","assignFacetStats","dest","facetStats","stats","SearchResults","options","mainSubResponse","_rawResults","processingTimeMS","sum","facetsIndices","disjunctiveFacetsIndices","nextDisjunctiveResult","mainFacets","facetKey","hierarchicalAttributeName","isFacetDisjunctive","isFacetConjunctive","position","facetValueObject","facetIndex","idxAttributeName","findIndex","exhaustiveFacetsCount","facets_stats","compact","disjunctiveFacet","dfacet","dataFromMainRequest","facetResults","attributeIndex","refinedFacet","defaultData","root","excludes","generateHierarchicalTree","_state","getFacetStatsIfAvailable","getRefinement","type","attributeName","resultsFacets","getFacetByName","predicate","DEFAULT_SORT","getFacetValues","opts","facetValues","isExcluded","facetOrdering","recSort","sortFn","node","names","sortedChildren","children","childNode","renderingContent","orderedFacets","remainingFacets","reverseOrder","order","item","sortRemainingBy","ordering","formatSort","getFacetStats","getRefinements","facetDeclaration","rootFacet","intermediateFacet","newFacet","numericValue","EventEmitter","_events","_maxListeners","isFunction","arg","isObject","isUndefined","defaultMaxListeners","setMaxListeners","TypeError","emit","handler","len","args","listeners","err","er","context","apply","on","addListener","listener","newListener","warned","m","trace","once","fired","g","removeListener","list","splice","removeAllListeners","ret","listenerCount","evlistener","emitter","ctor","superCtor","create","enumerable","writable","configurable","DerivedHelper","mainHelper","fn","main","lastResults","detach","detachDerivedHelper","getModifiedState","sortObject","localeCompare","curr","requestBuilder","_getQueries","queries","indexName","_getHitsSearchParams","_getDisjunctiveFacetSearchParams","filtersMap","segment","join","hasHierarchicalFacetFilter","some","filteredFacetFilters","facetFilters","facetFilter","filtered","filterValue","_getHitsHierarchicalFacetsAttributes","_getFacetFilters","_getNumericFilters","_getTagFilters","additionalParams","hierarchicalRootLevel","analytics","clickAnalytics","_getDisjunctiveHierarchicalFacetAttribute","vs","orFilters","attributesIndex","attributeToRefine","allAttributes","newAttributes","hierarchicalRefinement","rootLevel","parentLevel","getSearchForFacetQuery","maxFacetHits","stateForSearchForFacetValues","searchForFacetSearchParameters","facetQuery","require$$0","AlgoliaSearchHelper","client","addAlgoliaAgent","setClient","_queryId","_lastQueryIdReceived","derivedHelpers","_currentNbQueries","setCurrentPage","_change","isPageReset","getCurrentPage","search","_search","onlyWithDerivedHelpers","searchOnlyWithDerivedHelpers","getQuery","searchOnce","cb","tempState","then","content","_originalResponse","e","catch","findAnswers","derivedHelper","Promise","resolve","derivedState","attributesForPrediction","nbHits","errorMessage","initIndex","queryLanguages","searchForFacetValues","userState","isDisjunctive","clientHasSFFV","clientHasInitIndex","algoliaQuery","searchForFacetValuesPromise","response","facetHits","q","addDisjunctiveRefine","addRefine","addFacetExclusion","addExclude","addTag","removeDisjunctiveRefine","removeRefine","removeFacetExclusion","removeExclude","removeTag","toggleFacetExclusion","toggleExclude","toggleRefine","toggleTag","nextPage","previousPage","setState","newState","overrideStateWithoutTriggeringChangeEvent","hasRefinements","isDisjunctiveRefined","hasTag","hasTagRefinements","getIndex","getPage","getTags","r","states","mainQueries","derivedQueries","queriesCount","helper","derivedStateQueries","queryId","_dispatchAlgoliaResponse","bind","_dispatchAlgoliaError","s","specificResults","formattedResponse","containsRefinement","_hasDisjunctiveRefinements","disjunctiveRefinements","event","clearCache","newClient","getClient","derive","pos","hasPendingRequests","algoliasearchHelper","version","noop","deprecate","message","checkRendering","rendering","usage","_ref$attributesToClea","attributesToClear","finalState","htmlEntities","&","<",">","\"","'","regexUnescapedHtml","regexHasUnescapedHtml","RegExp","htmlCharacters","&amp;","&lt;","&gt;","&quot;","&#39;","regexEscapedHtml","regexHasEscapedHtml","unescape","character","isPlainObject","_typeof","getPrototypeOf","proto","TAG_PLACEHOLDER","highlightPreTag","highlightPostTag","TAG_REPLACEMENT","replaceTagsAndEscape","recursiveEscape","input","escapeHits","hits","__escaped","hit","_highlightResult","_snippetResult","concatHighlightedParts","isHighlighted","createSendEventForFacet","instantSearchInstance","attr","widgetType","eventType","_args$","eventName","sendEventToInsights","insightsMethod","payload","filters","serializePayload","btoa","encodeURIComponent","deserializePayload","serialized","parse","decodeURIComponent","atob","buildPayloads","queryID","hitsChunks","objectIDsByChunk","positionsByChunk","methodName","isSearchStalled","hitsArray","__queryID","arr","chunkSize","chunks","Math","ceil","batch","objectID","__position","objectIDs","positions","createSendEventForHits","status","createBindEventForHits","payloads","isIndexWidget","widget","$$type","setIndexHelperState","finalUiState","indexWidget","nextIndexUiState","getIndexId","getHelper","getWidgetSearchParameters","uiState","getWidgets","debounce","func","wait","lastTimeout","reject","clearTimeout","setTimeout","nextMicroTask","defer","callback","progress","cancelled","cancel","createDocumentationMessageGenerator","widgets","links","_ref$connector","connector","items","latLngRegExp","insideBoundingBoxToBoundingBox","insideBoundingBoxArrayToBoundingBox","_value$","neLat","neLng","swLat","swLng","northEast","lat","lng","southWest","getContainerNode","selectorOrHTMLElement","isSelectorString","domElement","document","querySelector","HTMLElement","nodeType","getHighlightedParts","highlightedValue","splitByPreTag","firstValue","shift","elements","splitByPostTag","hasAlphanumeric","getPropertyByPath","current","resultsFacet","nameParts","_loop","facetData","refinementKey","includesQuery","_state$facetsExcludes","_state$disjunctiveFac","_state$hierarchicalFa","_state$numericRefinem","_state$tagRefinements","refinementName","exclude","operatorOriginal","valueOrValues","getWidgetAttribute","initOptions","renderState","getWidgetRenderState","_widget$getWidgetRend","widgetParams","addAbsolutePosition","addQueryID","isPrimitive","isEqual","first","second","isFiniteNumber","isFinite","isSpecialClick","button","altKey","ctrlKey","metaKey","shiftKey","uniq","mergeWithRest","left","right","ruleContexts","rest","mergeFacets","_","mergeDisjunctiveFacets","mergeHierarchicalFacets","nextFacets","mergeTagRefinements","mergeFacetRefinements","mergeFacetsExcludes","mergeDisjunctiveFacetsRefinements","mergeNumericRefinements","mergeHierarchicalFacetsRefinements","mergeRuleContexts","mergeSearchParameters","hierarchicalFacetsRefinementsMerged","hierarchicalFacetsMerged","tagRefinementsMerged","numericRefinementsMerged","disjunctiveFacetsRefinementsMerged","facetsExcludesMerged","facetRefinementsMerged","disjunctiveFacetsMerged","ruleContextsMerged","facetsMerged","range","start","end","_ref$step","step","limitStep","arrayLength","round","_toConsumableArray","createInitArgs","templatesConfig","createURL","scopedResults","searchMetadata","createRenderArgs","getResults","getScopedResults","reverseHighlightedParts","isNextHighlighted","_parts","isPreviousHighlighted","_parts2","safelyRunOnBrowser","fallback","window","toArray","withUsage","privateHelperSetState","_uiState","getLocalWidgetsUiState","widgetStateOptions","getWidgetUiState","getWidgetState","getLocalWidgetsSearchParameters","widgetSearchParametersOptions","initialSearchParameters","indexId","localWidgets","localUiState","localInstantSearchInstance","localParent","$$widgetType","getIndexName","widgetParent","getParent","resolveScopedResultsFromWidgets","nextState","_createURL","searchParameters","addWidgets","init","render","getRenderState","storeRenderState","_this","_initialUiState","scheduleSearch","removeWidgets","dispose","_this2","onStateChange","mainIndex","setUiState","searchWithoutTriggeringOnStateChange","_this3","indexInitialResults","_initialResults","_instantSearchInstanc","resetPageFromWidgets","indexWidgets","widgetHelper","scheduleStalledRender","scheduleRender","onInternalStateChange","_this4","_this5","previousUiState","innerIndex","refreshUiState","parentIndexName","component","componentName","descendantName","modifierName","descendent","modifier","suit","highlight","_ref$highlightedTagNa","highlightedTagName","_ref$cssClasses","cssClasses","_ref2$value","attributeValue","className","highlighted","reverseHighlight","snippet","reverseSnippet","insights","method","writeDataAttributes","serializedPayload","ANONYMOUS_TOKEN_COOKIE_KEY","getInsightsAnonymousUserTokenInternal","getCookie","cookie","prefix","cookies","charAt","substring","formatNumber","numberLocale","toLocaleString","getIndexStateWithoutConfigure","configure","simpleStateMapping","stateToRoute","routeToState","routeState","arrayToObject","plainObjects","generateArrayPrefix","strictNullHandling","skipNulls","encoder","allowDots","serializeDate","format","formatter","encodeValuesOnly","charset","Date","utils","maybeMap","isNonNullishPrimitive","isBuffer","objKeys","keyPrefix","pushToArray","setWindowTitle","title","percentTwenties","Format","default","formatters","RFC1738","RFC3986","has","hexTable","toUpperCase","assign","combine","queue","o","prop","refs","j","compactQueue","pop","compacted","decode","str","decoder","strWithoutPlus","encode","defaultEncoder","kind","string","Symbol","escape","$0","parseInt","c","charCodeAt","formats","isRegExp","mapped","allowPrototypes","mergeTarget","targetItem","arrayPrefixGenerators","brackets","comma","repeat","valueOrArray","toISO","toISOString","defaultFormat","addQueryPrefix","charsetSentinel","delimiter","date","arrayLimit","depth","ignoreQueryPrefix","interpretNumericEntities","parameterLimit","parseArrays","numberStr","fromCharCode","parseArrayValue","isoSentinel","parseObject","chain","valuesParsed","leaf","cleanRoot","0","tempObj","cleanStr","limit","Infinity","skipIndex","bracketEqualsPos","encodedVal","newObj","givenKey","child","exec","arrayFormat","joined","BrowserHistory","windowTitle","_ref$writeDelay","writeDelay","parseURL","getLocation","_classCallCheck","_defineProperty","writeTimer","read","latestAcknowledgedHistory","history","_createClass","qsModule","qs","location","url","shouldWrite","pushState","inPopState","_onPopState","addEventListener","isDisposed","removeEventListener","write","lastPushWasByISAfterDispose","href","historyRouter","_ref7$createURL","_ref7$parseURL","_ref7$writeDelay","_ref7$getLocation","protocol","hostname","_location$port","port","pathname","hash","queryString","portWithPrefix","createRouterMiddleware","props","router","stateMapping","route","lastRouteState","initialUiState","subscribe","onUpdate","started","unsubscribe","isMetadataEnabled","navigator","_window$navigator","userAgent","_window$navigator$use","createMetadataMiddleware","payloadContainer","createElement","refNode","ua","transporter","_ua","extractPayload","appendChild","remove","defaultCreateURL","connectClearRefinements","renderFn","unmountFn","_ref$includedAttribut","includedAttributes","_ref$excludedAttribut","excludedAttributes","_ref$transformItems","transformItems","cachedRefine","connectorState","refine","cachedCreateURL","renderOptions","canRefine","scopedResult","indexHelper","attributeToClear","InstantSearch","_inherits","shouldResetStatus","_searchStalledTimer","nextUiState","middleware","_options$initialUiSta","_options$routing","routing","searchFunction","_options$stalledSearc","stalledSearchDelay","_options$searchClient","searchClient","_options$insightsClie","insightsClient","_options$onStateChang","helpers","Number","compileOptions","_stalledSearchDelay","_searchFunction","use","get","newMiddlewareList","newMiddleware","creator","middlewareToUnuse","includes","fakeClient","originalScheduleSearch","_mainHelperSearch","mainIndexHelper","searchFunctionHelper","callOnStateChange","connectCurrentRefinements","currentRefinements","accResults","getRefinementsItems","clearRefinementFromState","filterFunction","normalizeRefinement","allItems","currentItem","label","normalizedRefinement","connectHierarchicalMenu","_ref$separator","_ref$rootPath","_ref$showParentLevel","_ref$limit","_ref$showMore","showMore","_ref$showMoreLimit","showMoreLimit","_ref$sortBy","sendEvent","_refine","toggleShowMore","cachedToggleShowMore","isShowingMore","getLimit","hierarchicalMenu","hasExhaustiveItems","canToggleShowMore","facetItems","maxValuesPerFacet","_prepareFacetValues","withFacetConfiguration","currentMaxValuesPerFacet","nextMaxValuesPerFacet","max","withMaxValuesPerFacet","connectHits","bindEvent","_ref$escapeHTML","escapeHTML","hitsWithAbsolutePositionAndQueryID","inferPayload","selectedHits","h","queryIDs","withInsights","isFirstRender","aa","withInstantSearchUsage","inferredPayload","u","parentNode","removeChild","defaultProps","ref","__k","__","__b","__e","__d","__c","__h","__v","vnode","y","p","d","__r","debounceRendering","__P","__n","ownerSVGElement","z","base","w","x","C","A","N","unmount","M","componentWillUnmount","nextSibling","insertBefore","$","setProperty","H","style","cssText","toLowerCase","T","I","setAttribute","removeAttribute","contextType","__E","O","sub","__s","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","localName","createTextNode","createElementNS","is","childNodes","dangerouslySetInnerHTML","__html","innerHTML","checked","diffed","P","firstChild","getDerivedStateFromError","componentDidCatch","forceUpdate","findInsightsTarget","startElement","endElement","validator","element","parentElement","insightsListener","BaseComponent","onClick","targetWithEvent","currentTarget","hasAttribute","getAttribute","single","insightsTarget","connectHitsPerPage","userItems","defaultItems","defaultItem","hasNoResults","connectHitsWithInsights","getStateWithoutPage","connectInfiniteHits","cachedHits","cachedState","showPrevious","_ref4$escapeHTML","_ref4$transformItems","_ref4$cache","cache","getFirstReceivedPage","pages","min","getLastReceivedPage","widgetRenderState","currentPageHits","infiniteHits","isFirstPage","transformedHits","__isArtificial","isLastPage","nbPages","stateWithoutPage","widgetSearchParameters","connectMenu","menu","refinedItem","connectNumericMenu","_ref2$attribute","_ref2$items","_ref2$transformItems","equal","numericMenu","withMinRefinement","withoutRefinements","_value$split$map2","_step","refinedState","getRefinedState","preparedItems","encodeURI","allIsSelected","decodeURI","_iterator","connectInfiniteHitsWithInsights","option","hasNumericRefinement","refinedOption","resolvedState","connectPagination","totalPages","_ref$padding","padding","pager","Paginator","currentPage","total","helperState","pagination","totalDisplayedPages","nbPagesDisplayed","paddingLeft","calculatePaddingLeft","toPrecision","precision","pow","floor","connectRange","minBound","maxBound","_ref2$precision","rangeFormatter","from","to","toFixed","currentRange","nextMin","nextMax","currentRangeMin","currentRangeMax","isResetMin","isResetMax","nextMinAsNumber","nextMaxAsNumber","newNextMin","newNextMax","isResetNewNextMin","isGreaterThanCurrentRange","isMinValid","isResetNewNextMax","isLowerThanRange","isMaxValid","_ref12","minValue","maxValue","_searchParameters$get2","_searchParameters$get3","lowerBound","upperBound","connectRefinementList","_ref$operator","_ref$escapeFacetValue","escapeFacetValues","formatItems","lastResultsFromMainSearch","triggerRefine","lastItemsFromMainSearch","createSearchForFacetValues","tags","searchResults","normalizedFacetValues","isFromSearch","searchFacetValues","maxValuesPerFacetConfig","currentLimit","canShowLess","canShowMore","searchForItems","withoutMaxValuesPerFacet","defaultQueryHook","hook","connectSearchBox","_clear","_ref$queryHook","queryHook","searchBox","clear","connectSortBy","currentIndex","initialIndex","connectRatingMenu","getRefinedStar","_ref2$max","_values$","ratingMenu","maxDecimalPlaces","refinementIsApplied","totalCount","_facetResult$name$spl3","refinedStar","star","stars","_v","reverse","withDisjunctiveFacet","emptyState","connectStats","nbSortedHits","areHitsSorted","appliedRelevancyStrictness","connectToggleRefinement","hasAnOffValue","off","_ref2$on","userOff","valuesToRemove","valuesToAdd","allFacetValues","onFacetValue","offFacetValue","nextRefinement","offValue","onData","offData","toggle","connectBreadcrumb","breadcrumb","prepareItems","getBoundingBoxAsString","setBoundingBoxAsString","connectGeoSearch","getPositionFromState","aroundLatLng","aroundLatLngToPosition","pattern","match","toggleRefineOnMapMove","widgetState","internalToggleRefineOnMapMove","createInternalToggleRefinementOnMapMove","isRefineOnMapMove","setMapMoveSinceLastRefine","internalSetMapMoveSinceLastRefine","createInternalSetMapMoveSinceLastRefine","shouldTriggerRender","hasMapMoveSinceLastRefine","_ref$enableRefineOnMa","enableRefineOnMapMove","lastRefinePosition","lastRefineBoundingBox","initArgs","renderArgs","positionChangedSinceLastRefine","boundingBoxChangedSinceLastRefine","_geoloc","ne","sw","boundingBox","clearMapRefinement","isRefinedWithMap","geoSearch","connectPoweredBy","defaultUrl","_window$location","_ref2$url","poweredBy","getInitialSearchParameters","connectConfigure","_renderState$configur","actualState","nextSearchParameters","createOptionalFilter","attributeScore","connectConfigureRelatedItems","optionalFilters","matchingPatterns","_ref2$transformSearch","transformSearchParameters","score","attributeSubValue","sumOrFiltersScores","applyRuleContexts","sharedHelperState","trackedFilters","initialRuleContexts","transformRuleContexts","previousRuleContexts","newRuleContexts","facetRefinements","trackedFacetValues","getTrackedFacetValues","connectQueryRules","onHelperChange","_ref2$trackedFilters","_ref2$transformRuleCo","rules","hasTrackedFilters","_ref4$userData","userData","queryRules","createVoiceSearchHelper","resetState","getDefaultState","recognition","stop","onStart","onError","onResult","onEnd","searchAsYouSpeak","language","onQueryChange","SpeechRecognitionAPI","webkitSpeechRecognition","SpeechRecognition","transcript","isSpeechFinal","errorCode","isFinal","getState","isBrowserSupported","isListening","startListening","interimResults","lang","stopListening","connectVoiceSearch","additionalQueryParameters","_widgetParams$createV","builtInCreateVoiceSearchHelper","voiceSearch","ignorePlurals","removeStopWords","optionalWords","_voiceSearchHelper","toggleListening","voiceListeningState","toReset","additional","connectAnswers","runConcurrentSafePromise","basePromiseId","latestResolvedId","latestResolvedValue","lastHits","isLoading","debouncedRender","debouncedRefine","_ref$nbHits","_ref$renderDebounceTi","renderDebounceTime","_ref$searchDebounceTi","searchDebounceTime","_ref$extraParameters","extraParameters","promise","currentPromiseId","answersIndex","answers","connectRelevantSort","relevantSort","relevancyStrictness","isVirtualReplica","isRelevantSorted","connectDynamicWidgets","_widgetParams$maxValu","_widgetParams$facets","_widgetParams$transfo","fallbackWidget","Map","set","isMounted","widgetsToUnmount","widgetsToMount","attributesToRender","shouldMount","toRemove","dynamicWidgets","_results$renderingCon2","_results$renderingCon3","_results$renderingCon4","EXPERIMENTAL_connectAnswers","EXPERIMENTAL_connectDynamicWidgets","autocomplete","stateWithoutQuery","cx","_len","_key","prepareTemplateProps","defaultTemplates","templates","config","defaultTemplate","customTemplate","isCustomTemplate","useCustomCompileOptions","tagChange","text","buildTree","tokens","stack","customTags","instructions","opener","token","tail","allowedInSuper","Hogan","nodes","close","open","last","stringifyPartials","codeObj","partials","esc","subs","rSlash","rQuot","rNewline","rCr","rLineSep","rParagraphSep","chooseMethod","createPartial","sym","serialNo","code","indent","tripleStache","rIsWhitespace","exports","#","^","/","!","=","{","_t","scan","delimiters","closeIndex","tagType","buf","seenTag","lineStart","otag","ctag","addBuf","filterLine","haveSeenTag","noNewLine","isAllWhitespace","next","substr","\n","wrapMain","generate","tree","walk","asString","makeTemplate","template","Template","makePartials","Function","codegen","ctx","inPartial","nodelist","sectionTags","cacheKey","disableLambda","modelGet","compile","findInScope","scope","doModelGet","coerceToString","rAmp","rLt","rGt","rApos","hChars","compiler","ri","ep","symbol","partial","stackText","activeSub","stackSubs","stackPartials","PartialTemplate","Substitutions","subsText","rp","rs","section","inverted","pass","ms","returnFound","found","mv","ls","oldTags","ct","fl","textSource","_extends","module","objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_excluded","_ref3","Fragment","InternalHighlight","_ref4","_ref4$highlightedTagN","_ref4$nonHighlightedT","nonHighlightedTagName","_ref4$separator","_ref4$classNames","classNames","_objectWithoutProperties","partIndex","isLastPart","subPart","subPartIndex","HighlightPart","_ref2","nonHighlighted","Highlight","HighlightUiComponent","ReverseHighlight","ReverseHighlightUiComponent","ReverseSnippet","ReverseSnippetUiComponent","Snippet","SnippetUiComponent","renderTemplate","templateKey","html","components","transformedHelpers","helperKey","hogan","spaces","renderer","container","CurrentRefinements","Component","nextProps","rootProps","RootTagName","rootTagName","Breadcrumb","templateProps","noRefinementRoot","selectedItem","link","preventDefault","isLast","aria-hidden","home","ClearRefinements","disabledButton","disabled","resetLabel","category","categoryLabel","delete","header","loader","Answers","emptyRoot","__hitIndex","createContainer","rootContainer","userContainer","containers","connectorWidgets","containerSelector","otherWidgetParams","childWidget","GeoSearchButton","_ref$disabled","GeoSearchToggle","classNameLabel","classNameInput","onToggle","onChange","isFirstRendering","_collectMarkersForNex2","updateMarkerIds","boundingBoxPadding","googleReference","initialZoom","initialPosition","enableRefine","enableClearMapRefinement","enableRefineControl","mapOptions","createMarker","markerOptions","isUserInteraction","isPendingRefine","markers","rootElement","mapElement","treeElement","mapInstance","maps","mapTypeControl","fullscreenControl","streetViewControl","clickableIcons","zoomControlOptions","ControlPosition","LEFT_TOP","addListenerOnce","refineWithMap","nextItemsIds","updateMarkers","collectMarkersForNextRender","exitMarkers","__id","nextPendingItems","marker","setMap","events","shouldUpdate","createBoundingBoxFromMarkers","lockUserInteraction","fitBounds","LatLngBounds","setCenter","setZoom","GeoSearchControls","onRefineToggle","onRefineClick","onClearClick","control","selectedLabel","redo","disabledRedo","reset","getBounds","getNorthEast","toJSON","getSouthWest","nextIds","update","exit","google","latLngBounds","extend","getPosition","functionThatAltersTheMapPosition","HTMLMarker","RefinementListItem","handleClick","facetValueToRefine","templateData","subItems","originalEvent","showSubmit","showReset","showLoadingIndicator","autofocus","searchAsYouType","onSubmit","onReset","SearchBox","focused","createRef","stopPropagation","blur","focus","placeholder","action","role","form","noValidate","autoFocus","autoComplete","autoCorrect","autoCapitalize","spellCheck","maxLength","onInput","onBlur","onFocus","submit","hidden","loadingIndicator","isHierarchicalMenuItem","handleItemClick","childList","refinementListItemClassName","disabledItem","parentItem","tagName","resetInput","actualValue","showMoreButtonClassName","disabledShowMore","showMoreButton","shouldDisableSearchBox","searchIsAlwaysActive","searchPlaceholder","searchable","searchBoxTemplateProps","refineFirstValue","_generateFacetItem","noResults","selectedItemLink","showMoreText","empty","HitsWithInsightsListener","withInsightsListener","Selector","setValue","select","showPreviousText","InfiniteHitsWithInsightsListener","hasShowPrevious","loadPrevious","disabledLoadPrevious","loadMore","disabledLoadMore","MenuSelect","selectedValue","defaultOption","radio","defaultChecked","labelText","Pagination","createClickHandler","pageNumber","showFirst","PaginationLink","ariaLabel","firstPageItem","isDisabled","previousPageItem","pageItem","isSelected","showNext","nextPageItem","showLast","lastPageItem","_ref$isDisabled","_ref$isSelected","aria-label","__H","__V","__N","B","requestAnimationFrame","cancelAnimationFrame","Panel","_useState2","useState","isCollapsed","setIsCollapsed","_useState4","isControlled","setIsControlled","bodyRef","useRef","bodyElement","collapsible","collapsibleRoot","collapsedRoot","collapseButton","aria-expanded","prevIsCollapsed","collapsed","body","footer","PoweredBy","theme","rel","height","logo","viewBox","width","fill","QueryRuleCustomData","RangeInput","noRefinement","inputMin","inputMax","separatorText","submitText","KEYS","PERCENT_FULL","getValue","getClassName","orientation","getHandleFor","ev","killEvent","Pit","positionValue","shouldDisplayValue","pitValue","marginLeft","Rheostat","handlePos","handleDimensions","mousePos","sliderBox","slidingIndex","getPublicState","getSliderBoundingBox","getProgressStyle","getMinValue","getMaxValue","getHandleDimensions","getClosestSnapPoint","getSnapPosition","getNextPositionForKey","getNextState","getClosestHandle","setStartSlide","startMouseSlide","startTouchSlide","handleMouseSlide","handleTouchSlide","handleSlide","endSlide","handleKeydown","validatePosition","validateValues","canMove","fireChangeEvent","slideTo","updateNewValues","minMaxChanged","valuesChanged","orientationChanged","willBeDisabled","rheostat","rect","getBoundingClientRect","clientHeight","top","clientWidth","diffValue","prevValue","handleNode","snapPoints","snapTo","snap","abs","positionPercent","keyCode","shouldSnap","proposedValue","proposedPercentage","originalPercentage","stepValue","stepMultiplier","proposedPosition","actualPosition","nextHandlePos","closestIdx","_node","clientX","clientY","touch","changedTouches","onSliderDragStart","onSliderDragMove","onSliderDragEnd","handleId","validPositionPercent","onKeyPress","proposedValues","realValue","onAfterSet","onValuesUpdated","nextValues","_this6","Handle","handle","PitComponent","pitComponent","pitPoints","ProgressBar","progressBar","handleStyle","aria-valuemax","_this7","aria-valuemin","aria-valuenow","aria-disabled","data-handle-key","onKeyDown","onMouseDown","onTouchStart","tabIndex","pitStyle","Slider","tooltips","roundedValue","stepsLength","steps","pips","computeSnapPoints","computeDefaultPitPoints","disabledRoot","createHandleComponent","handleChange","ItemWrapper","isFull","starIcon","fullStarIcon","emptyStarIcon","xlinkHref","fillRule","transform","strokeWidth","strokeOpacity","cy","dur","repeatCount","resetIcon","submitIcon","loadingIcon","stroke","checkbox","searchableNoResults","searchBoxSuit","RelevantSort","Stats","hasManySortedResults","hasNoSortedResults","hasOneSortedResults","hasManyResults","hasOneResult","suffix","ButtonInnerElement","ToggleRefinement","VoiceSearch","x1","y1","x2","y2","buttonText","stroke-width","stroke-linecap","stroke-linejoin","EXPERIMENTAL_answers","containerNode","_ref3$templates","_ref3$cssClasses","userCssClasses","EXPERIMENTAL_dynamicWidgets","serializeRefinements","serializeNumericRefinements","lastSentData","sendAnalytics","pushTimeout","isInitialSearch","onUnload","pushFunction","_ref$delay","delay","_ref$triggerOnUIInter","triggerOnUIInteraction","_ref$pushInitialSearc","pushInitialSearch","_ref$pushPagination","pushPagination","equals","analyticsState","serializedParams","stringifiedParams","dataToSend","serializedRefinements","serializedNumericRefinements","builtInMarker","customHTMLMarker","_ref$initialZoom","_ref$initialPosition","_ref$templates","userTemplates","_ref$builtInMarker","userBuiltInMarker","userCustomHTMLMarker","_ref$enableRefine","_ref$enableClearMapRe","_ref$enableRefineCont","createOptions","OverlayView","_ref$anchor","anchor","latLng","LatLng","getPanes","overlayMouseTarget","bbBox","offset","getProjection","fromLatLngToDivPixel","zIndex","Marker","_ref3$showMore","receivedHits","_ref5$cssClasses","_ref3$sortBy","_ref3$limit","scrollToNode","_ref3$showFirst","_ref3$showLast","_ref3$showPrevious","_ref3$showNext","_ref3$scrollTo","scrollTo","userScrollTo","scrollIntoView","panelWidgetParams","_ref3$hidden","bodyContainerNode","collapsedFn","collapseIcon","widgetFactory","renderPanel","collapseButtonText","placesReference","_ref$defaultPosition","defaultPosition","placesOptions","placesAutocomplete","initialLatLngViaIP","isInitialLatLngViaIPSet","eventOptions","suggestion","_eventOptions$suggest2","latlng","places","_ref5$query","_ref5$position","aroundLatLngViaIP","setVal","_ref3$theme","_ref4$cssClasses","_ref4$templates","CustomData","_ref3$precision","rangeMin","rangeMax","_ref3$pips","_ref3$tooltips","maxFinite","minRange","maxRange","minStart","maxStart","minFinite","_ref5$max","_ref5$templates","id","searchBoxTemplates","searchablePlaceholder","searchableIsAlwaysActive","_ref3$searchable","_ref3$searchablePlace","_ref3$searchableEscap","searchableEscapeFacetValues","_ref3$searchableIsAlw","searchableRoot","searchableForm","searchableInput","searchableSubmit","searchableSubmitIcon","searchableReset","searchableResetIcon","searchableLoadingIndicator","searchableLoadingIcon","searchBoxDefaultTemplates","_widgetParams$templat","_widgetParams$cssClas","_ref3$placeholder","_ref3$autofocus","_ref3$searchAsYouType","_ref3$showReset","_ref3$showSubmit","_ref3$showLoadingIndi","_ref3$on","_ref3$searchAsYouSpea","VoiceSearchComponent","hasInsightsClient","_insightsClient","insightsInitParams","onEvent","initialParameters","_getAppIdAndApiKey2","headers","queryParameters","APP_ID","API_KEY","applicationID","apiKey","appId","queuedUserToken","userTokenBeforeInit","_error","setUserTokenToSearch","anonymousUserToken","immediate","KEY","instantsearch","connectors","middlewares","routers","stateMappings","createInfiniteHitsSessionStorageCache","sessionStorage","getItem","SyntaxError","removeItem","setItem"],"mappings":"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"}